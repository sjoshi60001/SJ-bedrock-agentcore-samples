{
  "swagger": "2.0",
  "info": {
    "title": "Intrinio API",
    "description": "Welcome to the Intrinio API! Through our Financial Data Marketplace, we offer a wide selection of financial data feed APIs sourced by our own proprietary processes as well as from many data vendors. For a complete API request / response reference please view the [Intrinio API documentation](https://docs.intrinio.com/documentation/api_v2). If you need additional help in using the API, please visit the [Intrinio website](https://intrinio.com) and click on the chat icon in the lower right corner.",
    "version": "2.107.0"
  },
  "host": "api-v2.intrinio.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "in": "query",
      "name": "api_key",
      "description": "To authenticate with the Intrinio API, you may provide your API Key as a URL parameter named `api_key`."
    }
  },
  "security": [
    {
      "ApiKeyAuth": [

      ]
    }
  ],
  "tags": [

  ],
  "paths": {
    "/bulk_downloads/links": {
      "get": {
        "tags": [
          "Bulk Downloads"
        ],
        "summary": "All Links",
        "description": "Returns all active bulk downloads for your account with links to download.",
        "operationId": "get_bulk_download_links",
        "x-group": "Bulk Downloads",
        "x-index": 1000,
        "x-sample-data-url": "/bulk_downloads/links",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/bulk-downloads",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseBulkDownloadLinks"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/companies": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "All Companies",
        "description": "Returns all Companies. When parameters are specified, returns matching companies.",
        "x-history": "2009 to Present",
        "x-data-type": "End of Day",
        "x-update-freq": "Rolling Basis ~ 20 to 30 Minutes After Filing Accepted by SEC",
        "x-data-source": "SEC | OpenFIGI",
        "x-additional-comments": "Try setting the latest_filing_date parameter to the current date to filter on only those companies that have filed new 10-K or 10-Q financial data today to update your database with the latest fundamental data. | Try using the SIC parameter or any of the classification parameters to return a list of companies in a given sector or industry. | Try setting the has_fundamentals parameter to `true` to return only those companies with available fundamental data.",
        "operationId": "get_all_companies",
        "x-group": "Company Reference & Metadata",
        "x-index": 1000,
        "x-sample-data-url": "/companies?sector=Basic%20Materials",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/company-reference-metadata",
        "parameters": [
          {
            "in": "query",
            "name": "latest_filing_date",
            "description": "Return companies whose latest 10-Q or 10-K was filed on or after this date",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "~null",
            "x-example-value": "2011-07-15"
          },
          {
            "in": "query",
            "name": "sic",
            "description": "Return companies with the given Standard Industrial Classification code",
            "type": "string",
            "required": false,
            "x-example": "~null",
            "x-example-value": 3350
          },
          {
            "in": "query",
            "name": "template",
            "description": "Return companies with the given financial statement template",
            "type": "string",
            "required": false,
            "enum": [
              "indu",
              "fin"
            ],
            "x-example": "~null",
            "x-example-value": "indu"
          },
          {
            "in": "query",
            "name": "sector",
            "description": "Return companies in the given industry sector",
            "type": "string",
            "required": false,
            "x-example": "~null",
            "x-example-value": "Basic Materials",
            "x-default-value": "Basic Materials"
          },
          {
            "in": "query",
            "name": "industry_category",
            "description": "Return companies in the given industry category",
            "type": "string",
            "required": false,
            "x-example": "~null",
            "x-example-value": "Metals & Mining"
          },
          {
            "in": "query",
            "name": "industry_group",
            "description": "Return companies in the given industry group",
            "type": "string",
            "required": false,
            "x-example": "~null",
            "x-example-value": "Aluminum"
          },
          {
            "in": "query",
            "name": "has_fundamentals",
            "description": "Return only companies that have fundamentals when true",
            "type": "boolean",
            "required": false,
            "x-example": true,
            "x-example-value": false
          },
          {
            "in": "query",
            "name": "has_stock_prices",
            "description": "Return only companies that have stock prices when true",
            "type": "boolean",
            "required": false,
            "x-example": true,
            "x-example-value": false
          },
          {
            "in": "query",
            "name": "thea_enabled",
            "description": "Return companies whose have been read by our Thea NLP and are ready for our company answers endpoint",
            "type": "boolean",
            "required": false,
            "x-example": "~null",
            "x-example-value": true
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseCompanies"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/companies/daily_metrics": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "All Companies daily metrics",
        "operationId": "get_all_companies_daily_metrics",
        "description": "Returns the company metrics for a date.",
        "x-history": "December 30, 1983 to Present",
        "x-update-freq": "Rolling Basis - Intraday",
        "x-group": "Returns & Analytics",
        "x-index": 1003,
        "x-sample-data-url": "/companies/daily_metrics",
        "x-documentation-url": "https://intrinio.com/docs/all-companies-daily-metrics",
        "parameters": [
          {
            "in": "query",
            "name": "on_date",
            "type": "string",
            "format": "date",
            "description": "Date of the metric"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseCompanyDailyMetrics"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/companies/ipos": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "IPOs",
        "operationId": "get_company_ipos",
        "description": "Returns a list of historical, current, and upcoming initial public offerings (IPOs) across the major US Exchanges. Includes relevant information such as the IPO status, the offer amount, the total share count and target share price.",
        "x-history": "2018 to Present",
        "x-data-type": "End of Day",
        "x-update-freq": "4PM UTC Daily",
        "x-data-source": "NYSE | NASDAQ",
        "x-additional-comments": "Try leaving the ticker parameter blank to return all IPOs sorted by recency. | Ideal for creating an IPO calendar. Both historical and forward-looking.",
        "x-group": "Upcoming & Historical IPOs",
        "x-index": 1000,
        "x-sample-data-url": "/companies/ipos?ticker=UBER",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/upcoming-historical-ipos",
        "parameters": [
          {
            "in": "query",
            "name": "ticker",
            "type": "string",
            "required": false,
            "description": "Return IPOs with the given ticker (typically the IPO for the company)",
            "x-example": "UBER",
            "x-example-value": "UBER"
          },
          {
            "in": "query",
            "name": "status",
            "type": "string",
            "enum": [
              "upcoming",
              "priced",
              "withdrawn"
            ],
            "required": false,
            "description": "Return IPOs with the given status. Upcoming IPOs are scheduled to occur in the future. Priced IPOs have occurred and the company should be trading publicly. Withdrawn IPOs were planned to occurr but were withdrawn beforehand",
            "x-example": "~null",
            "x-example-value": "upcoming"
          },
          {
            "in": "query",
            "name": "start_date",
            "type": "string",
            "format": "date",
            "required": false,
            "description": "Return IPOs on or after the given date",
            "x-example": "~null",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "type": "string",
            "format": "date",
            "required": false,
            "description": "Return IPOs on or before the given date",
            "x-example": "~null",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "offer_amount_greater_than",
            "type": "integer",
            "required": false,
            "description": "Return IPOs with an offer dollar amount greater than the given amount",
            "x-example": "~null",
            "x-example-value": 1000000000
          },
          {
            "in": "query",
            "name": "offer_amount_less_than",
            "type": "integer",
            "required": false,
            "description": "Return IPOs with an offer dollar amount less than the given amount",
            "x-example": "~null",
            "x-example-value": 1000000000
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseInitialPublicOfferings"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/companies/news": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "All News",
        "operationId": "get_all_company_news",
        "description": "Returns the latest news article links, headlines and summaries for all US traded companies allowing you to keep a pulse on companies and their business operations.",
        "x-history": "May 2017 to Present",
        "x-data-type": "15-Min Delayed",
        "x-update-freq": "Rolling Basis - Intraday",
        "x-data-source": "Public RSS Feeds",
        "x-additional-comments": "Try using our historical news feed to perform sentiment analysis across companies and industries.",
        "x-group": "Company News",
        "x-index": 1000,
        "x-sample-data-url": "/companies/news",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/company-news",
        "parameters": [
          {
            "in": "query",
            "name": "specific_source",
            "description": "Only news from this source. Defaults to highest available if not present.",
            "enum": [
              "yahoo",
              "moody",
              "moody_us_news",
              "moody_us_press_releases"
            ],
            "type": "string",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The maximum number of results to return.",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "sentiment",
            "description": "Filter by sentiment.  Unsupported for yahoo source.",
            "enum": [
              "positive",
              "neutral",
              "negative"
            ],
            "type": "string",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "topic",
            "description": "Filter by topic.  Unsupported for yahoo source.",
            "type": "string",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "company",
            "description": "Filter by `company` identifier (ticker, CIK, LEI, Intrinio ID)",
            "type": "string",
            "required": false,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "company"
            ]
          },
          {
            "in": "query",
            "name": "security",
            "description": "Filter by `security` identifier (ticker, figi, isin, cusip, Intrinio ID).  Unsupported for yahoo source.",
            "type": "string",
            "required": false,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security"
            ]
          },
          {
            "in": "query",
            "name": "start_date",
            "type": "string",
            "format": "date",
            "description": "Limit news stories to those on or after this date. Defaults to yesterday if unspecified.",
            "required": false,
            "x-example": "~null",
            "x-example-value": "2024-01-01",
            "x-default-value": "2024-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "type": "string",
            "format": "date",
            "description": "Limit news stories to those on or before this date.",
            "required": false,
            "x-example": "~null",
            "x-example-value": "2024-01-01",
            "x-default-value": "2024-01-01"
          },
          {
            "in": "query",
            "name": "language",
            "description": "Filter by language.  Unsupported for yahoo source.",
            "type": "string",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "word_count_greater_than",
            "description": "News stories will have a word count greater than this value.  Unsupported for yahoo source.",
            "type": "integer",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "word_count_less_than",
            "description": "News stories will have a word count less than this value.  Unsupported for yahoo source.",
            "type": "integer",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "is_spam",
            "description": "Filter whether it is marked as spam or not.  Unsupported for yahoo source.",
            "type": "boolean",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "business_relevance_greater_than",
            "description": "News stories will have a business relevance score more than this value.  Unsupported for yahoo source.",
            "type": "number",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "business_relevance_less_than",
            "description": "News stories will have a business relevance score less than this value.  Unsupported for yahoo source.",
            "type": "number",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseNews"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/companies/news/body": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "News Article Body",
        "operationId": "get_company_news_body",
        "description": "Returns the body of a news article for moody sources.  This endpoint requires additional authorization beyond basic news access and is for your internal use only - no display. Please see a representative for details.",
        "x-history": "May 2017 to Present",
        "x-data-type": "15-Min Delayed",
        "x-update-freq": "Rolling Basis - Intraday",
        "x-data-source": "Public RSS Feeds",
        "x-additional-comments": "Try using our historical news feed to perform sentiment analysis across companies and industries.",
        "x-group": "Company News",
        "x-index": 1000,
        "x-sample-data-url": "/companies/news/body",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/company-news",
        "parameters": [
          {
            "in": "query",
            "name": "specific_source",
            "description": "Only news from this source. Defaults to highest available if not present.",
            "enum": [
              "moody",
              "moody_us_news",
              "moody_us_press_releases"
            ],
            "type": "string",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "news_story_id",
            "description": "The identifier of the news story.",
            "type": "string",
            "required": true,
            "x-example": "new_aBcDef"
          },
          {
            "in": "query",
            "name": "publication_date",
            "description": "The DateTime of the story.",
            "type": "string",
            "format": "date-time",
            "x-example": "~null",
            "x-example-value": "2024-05-03T15:00:00.000+00:00",
            "required": true
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseCompanyNewsBody"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/companies/recognize": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Recognize Company",
        "operationId": "recognize_company",
        "description": "Returns a list of companies recognized by the Thea API in the given `text` query string parameter.",
        "x-group": "Thea Answers API",
        "x-index": 1005,
        "x-sample-data-url": "/companies/recognize",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/company-reference-metadata",
        "parameters": [
          {
            "in": "query",
            "name": "text",
            "type": "string",
            "required": true,
            "description": "The text sent to the Thea API to analyze",
            "x-example": "Apple",
            "x-example-value": "Apple",
            "x-default-value": "Apple"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseCompanyRecognize"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/companies/search": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Search Companies",
        "operationId": "search_companies",
        "description": "Search the companies database and return a list of companies matching the text query parameter passed through. Query parameter searches across the company ticker and name.",
        "x-history": "2009 to Present",
        "x-data-type": "End of Day",
        "x-update-freq": "Rolling Basis ~ 20 to 30 Minutes After Filing Accepted by SEC",
        "x-data-source": "SEC | OpenFIGI",
        "x-group": "Company Reference & Metadata",
        "x-index": 1001,
        "x-sample-data-url": "/companies/search?query=Appl",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/company-reference-metadata",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "description": "Search parameters",
            "type": "string",
            "required": true,
            "x-example": "Apple",
            "x-example-value": "Apple",
            "x-default-value": "Apple"
          },
          {
            "in": "query",
            "name": "active",
            "description": "When true, return companies that are actively traded (having stock prices within the past 14 days). When false, return companies that are not actively traded or never have been traded. Not setting this value returns all. Not used when mode is set.",
            "type": "boolean",
            "required": false,
            "x-example": true,
            "x-example-value": false
          },
          {
            "in": "query",
            "name": "mode",
            "description": "When set, changes search mode to the specified mode.",
            "enum": [
              "starts_with"
            ],
            "type": "string",
            "required": false,
            "x-example": "~null",
            "x-example-value": "~null"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseCompaniesSearch"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/companies/{identifier}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Lookup Company",
        "operationId": "get_company",
        "description": "Returns company reference and metadata such as tickers, CIK, and a unique company identifier, as well as company metadata such as business description, employee count, and company URL.",
        "x-history": "2009 to Present",
        "x-data-type": "End of Day",
        "x-update-freq": "Rolling Basis ~ 20 to 30 Minutes After Filing Accepted by SEC",
        "x-data-source": "SEC | OpenFIGI",
        "x-group": "Company Reference & Metadata",
        "x-index": 1003,
        "x-sample-data-url": "/companies/AAPL",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/company-reference-metadata",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Company identifier (Ticker, CIK, LEI, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "company"
            ]
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Company"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/companies/{identifier}/answers": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Company Answers",
        "operationId": "get_company_answers",
        "description": "Returns answers for a question about the Company with the given `identifier`",
        "x-group": "Thea Answers API",
        "x-index": 1004,
        "x-sample-data-url": "/companies/AAPL/answers",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/company-reference-metadata",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Company identifier (Ticker, CIK, LEI, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "company"
            ]
          },
          {
            "in": "query",
            "name": "query",
            "type": "string",
            "required": true,
            "description": "The query to ask the Thea API",
            "x-example": "What do they believe in?",
            "x-example-value": "What do they believe in?",
            "x-default-value": "What do they believe in?"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseCompanyAnswers"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/companies/{identifier}/daily_metrics": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Company metrics by Company",
        "operationId": "get_company_daily_metrics",
        "description": "Returns the latest company metrics.",
        "x-history": "December 30, 1983 to Present",
        "x-update-freq": "Rolling Basis - Intraday",
        "x-group": "Returns & Analytics",
        "x-index": 1003,
        "x-sample-data-url": "/companies/AAPL/daily_metrics",
        "x-documentation-url": "https://intrinio.com/docs/company-daily-metrics",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Company identifier (Ticker, CIK, LEI, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "company"
            ]
          },
          {
            "in": "query",
            "name": "on_date",
            "type": "string",
            "format": "date",
            "description": "Date of the metric"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseCompanyDailyMetrics"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/companies/{identifier}/data_point/{tag}/number": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Data Point (Number) for Company",
        "operationId": "get_company_data_point_number",
        "description": "Returns latest value for calculations, metrics, and financial data points for a company.",
        "x-group": "Standardized & As-Reported Financial Statement Data",
        "x-history": "N/A",
        "x-data-type": "End of Day",
        "x-update-freq": "Rolling Basis ~ 20 to 30 Minutes After Filing Accepted by SEC",
        "x-data-source": "SEC",
        "x-additional-comments": "For a list of all data tags available, please find the data tag dictionary [here](https://data.intrinio.com/data-tags).",
        "x-index": 1010,
        "x-sample-data-url": "/companies/AAPL/data_point/marketcap/number",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/standardized-as-reported-financial-statement-data",
        "produces": [
          "text/plain; charset=utf-8"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Company identifier (Ticker, CIK, LEI, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "company"
            ]
          },
          {
            "in": "path",
            "name": "tag",
            "description": "An Intrinio data tag ID or code (<a href='https://data.intrinio.com/data-tags'>reference</a>)",
            "type": "string",
            "required": true,
            "x-example": "marketcap",
            "x-example-value": "marketcap",
            "x-default-value": "marketcap",
            "x-lookup-mode": "data_tag"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "number",
              "description": "The latest numeric value for an identifier/item combination"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        }
      }
    },
    "/companies/{identifier}/data_point/{tag}/text": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Data Point (Text) for Company",
        "operationId": "get_company_data_point_text",
        "description": "Returns latest value for metadata items for a company.",
        "x-data-type": "End of Day",
        "x-update-freq": "Rolling Basis ~ 20 to 30 Minutes After Filing Accepted by SEC",
        "x-data-source": "SEC",
        "x-additional-comments": "For a list of all data tags available, please find the data tag dictionary [here](https://data.intrinio.com/data-tags).",
        "x-group": "Standardized & As-Reported Financial Statement Data",
        "x-index": 1910,
        "x-sample-data-url": "/companies/AAPL/data_point/ceo/text",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/standardized-as-reported-financial-statement-data",
        "produces": [
          "text/plain; charset=utf-8"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Company identifier (Ticker, CIK, LEI, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "company"
            ]
          },
          {
            "in": "path",
            "name": "tag",
            "description": "An Intrinio data tag ID or code (<a href='https://data.intrinio.com/data-tags'>reference</a>)",
            "type": "string",
            "required": true,
            "x-example": "ceo",
            "x-example-value": "ceo",
            "x-default-value": "ceo",
            "x-lookup-mode": "data_tag"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "string",
              "description": "The latest text value for an identifier/item combination"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        }
      }
    },
    "/companies/{identifier}/filings": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "All Filings by Company",
        "operationId": "get_company_filings",
        "description": "Returns a complete list of SEC filings for the Company with the given `identifier`",
        "x-group": "Standardized & As-Reported Financial Statement Data",
        "x-index": 1001,
        "x-sample-data-url": "/companies/AAPL/filings",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/standardized-as-reported-financial-statement-data",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Company identifier (Ticker, CIK, LEI, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "company"
            ]
          },
          {
            "in": "query",
            "name": "report_type",
            "description": "Filter by <a href=\"https://docs.intrinio.com/documentation/sec_filing_report_types\" target=\"_blank\">report type</a>. Separate values with commas to return multiple report types.",
            "type": "string",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Filed on or after the given date",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "2015-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Filed before or after the given date",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "thea_enabled",
            "description": "Return filings that have been read by our Thea NLP and are ready for our answers endpoint",
            "type": "boolean",
            "required": false,
            "x-example": "~null",
            "x-example-value": true
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseCompanyFilings"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/companies/{identifier}/fundamentals": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "All Fundamentals by Company",
        "operationId": "get_company_fundamentals",
        "description": "Returns a list of fundamentals with unique fundamental IDs associated with a particular company. Useful to obtain all historical and/or latest fundamental IDs for a given company to then use to loop through and pull all fundamental data available.",
        "x-group": "Standardized & As-Reported Financial Statement Data",
        "x-note": "Companies restate prior fiscal periods on each 10-K and 10-Q for comparison with their latest completed period. We specify whether each fundamental returned is restated or reported (meaning the original, non-restated fundamental) with the `type` field located in the fundamental array.",
        "x-history": "Quarterly Fundamentals from 2009 | Yearly Fundamentals from 2007",
        "x-data-type": "End of Day",
        "x-update-freq": "Rolling Basis ~ 20 to 30 Minutes After Filing Accepted by SEC",
        "x-data-source": "SEC",
        "x-additional-comments": "Try using this endpoint in tandem with the `Standardized Financials` endpoint to pull standardized financial statement data for a specific fundamental ID. | Try using the filing_after date parameter to pull a list of fundamental IDs posted after your last database update.",
        "x-index": 1006,
        "x-sample-data-url": "/companies/AAPL/fundamentals?fiscal_year=2017",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/standardized-as-reported-financial-statement-data",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Company identifier (Ticker, CIK, LEI, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "company"
            ]
          },
          {
            "in": "query",
            "name": "filed_after",
            "description": "Filed on or after this date",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "filed_before",
            "description": "Filed on or before this date",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "reported_only",
            "description": "Only as-reported fundamentals",
            "type": "boolean",
            "required": false,
            "x-example": false
          },
          {
            "in": "query",
            "name": "fiscal_year",
            "description": "Only for the given fiscal year",
            "type": "integer",
            "required": false,
            "x-example": "~null",
            "x-example-value": 2017,
            "x-default-value": 2017
          },
          {
            "in": "query",
            "name": "statement_code",
            "description": "Only of the given statement code",
            "enum": [
              "income_statement",
              "balance_sheet_statement",
              "cash_flow_statement",
              "calculations"
            ],
            "type": "string",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "type",
            "description": "Only of the given type",
            "enum": [
              "QTR",
              "YTD",
              "FY",
              "TTM"
            ],
            "type": "string",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "fundamental_type",
            "description": "Only of the given fundamental type",
            "type": "string",
            "required": false,
            "enum": [
              "reported",
              "restated",
              "calculated"
            ],
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Only on or after the given date",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Only on or before the given date",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "updated_after",
            "description": "Only include fundamentals where it was updated after this date.",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "2022-12-01",
            "x-example-value": "2022-12-01",
            "x-default-value": "2022-12-01"
          },
          {
            "in": "query",
            "name": "latest_only",
            "type": "boolean",
            "required": false,
            "description": "Only the most-recently reported fundamental for the period",
            "x-default-value": true
          },
          {
            "in": "query",
            "name": "updated_before",
            "description": "Only include fundamentals where it was updated before this date.",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "2022-12-01",
            "x-example-value": "2022-12-01",
            "x-default-value": "2022-12-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseCompanyFundamentals"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/companies/{identifier}/fundamentals/lookup/{statement_code}/{fiscal_year}/{fiscal_period}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Lookup Fundamental by Company",
        "operationId": "lookup_company_fundamental",
        "description": "Returns the Fundamental for the Company with the given `identifier` and with the given parameters",
        "x-sample-data-url": "/companies/AAPL/fundamentals/lookup/income_statement/2017/FY",
        "x-index": 1220,
        "x-group": "Standardized & As-Reported Financial Statement Data",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/standardized-as-reported-financial-statement-data",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Company identifier (Ticker, CIK, LEI, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "company"
            ]
          },
          {
            "in": "path",
            "name": "statement_code",
            "description": "The statement code",
            "type": "string",
            "enum": [
              "income_statement",
              "balance_sheet_statement",
              "cash_flow_statement",
              "calculations"
            ],
            "required": true,
            "x-example": "income_statement"
          },
          {
            "in": "path",
            "name": "fiscal_period",
            "description": "The fiscal period",
            "enum": [
              "Q1TTM",
              "Q2TTM",
              "Q3TTM",
              "FY",
              "Q1",
              "Q2",
              "Q3",
              "Q4",
              "Q2YTD",
              "Q3YTD"
            ],
            "type": "string",
            "required": true,
            "x-example": "FY"
          },
          {
            "in": "path",
            "name": "fiscal_year",
            "description": "The fiscal year",
            "type": "integer",
            "required": true,
            "x-example": 2017
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Fundamental"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/companies/{identifier}/historical_data/{tag}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Historical Data for Company",
        "operationId": "get_company_historical_data",
        "description": "Returns historical values for the given `tag` and the Company with the given `identifier`",
        "x-group": "Standardized & As-Reported Financial Statement Data",
        "x-index": 1009,
        "x-sample-data-url": "/companies/AAPL/historical_data/marketcap",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/standardized-as-reported-financial-statement-data",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "type": "string",
            "description": "A Company identifier (Ticker, CIK, LEI, Intrinio ID)",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "company"
            ]
          },
          {
            "in": "path",
            "name": "tag",
            "type": "string",
            "description": "An Intrinio data tag ID or code (<a href='https://data.intrinio.com/data-tags'>reference</a>)",
            "required": true,
            "x-example": "marketcap",
            "x-example-value": "marketcap",
            "x-default-value": "marketcap",
            "x-lookup-mode": "data_tag"
          },
          {
            "in": "query",
            "name": "frequency",
            "description": "Return historical data in the given frequency",
            "type": "string",
            "enum": [
              "daily",
              "weekly",
              "monthly",
              "quarterly",
              "yearly"
            ],
            "default": "daily",
            "x-example": "daily",
            "x-available": "true",
            "required": false
          },
          {
            "in": "query",
            "name": "type",
            "type": "string",
            "description": "Return historical data for given fiscal period type",
            "enum": [
              "FY",
              "QTR",
              "TTM"
            ],
            "required": false,
            "x-example": "~null",
            "x-available": "true"
          },
          {
            "in": "query",
            "name": "start_date",
            "type": "string",
            "format": "date",
            "required": false,
            "description": "Return historical data on or after this date",
            "x-example": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "type": "string",
            "description": "Return historical data on or before this date",
            "format": "date",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "sort_order",
            "type": "string",
            "description": "Sort by date `asc` or `desc`",
            "enum": [
              "asc",
              "desc"
            ],
            "default": "desc",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseCompanyHistoricalData"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/companies/{identifier}/insider_transaction_filings": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Insider Transaction Filings by Company",
        "operationId": "insider_transaction_filings_by_company",
        "description": "Returns a list of all insider transaction filings in a company. Criteria for being an insider include being a director, officer, or 10%+ owner in the company. Transactions are detailed for both non-derivative and derivative transactions by the insider.",
        "x-group": "Insider & Institutional Holdings Data",
        "x-index": 1004,
        "x-sample-data-url": "/companies/AAPL/insider_transaction_filings",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/insider-institutional-holdings",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Company identifier (Ticker, CIK, LEI, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "company"
            ]
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return Company's insider transaction filings on or after this date",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "2018-01-01",
            "x-example-value": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return Company's insider transaction filings on or before this date",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "ownership_type",
            "description": "The type of ownership to return transaction filings for. 'D' is for direct transactions. 'I' is for indirect transactions. Omit for both types.",
            "type": "string",
            "required": false,
            "x-example": "D"
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 1000,
            "default": 1000,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "sort_by",
            "description": "The field to sort by.  Default is 'filing_date'.",
            "type": "string",
            "enum": [
              "filing_date",
              "updated_on"
            ],
            "required": false,
            "x-example": "updated_on",
            "x-example-value": "updated_on"
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseInsiderTransactionFilings"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/companies/{identifier}/insider_transaction_filings/latest": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Latest Insider Transaction Filing by Company",
        "operationId": "latest_insider_transaction_filing_by_company",
        "description": "Returns the latest insider transaction filing for a company.",
        "x-group": "Insider & Institutional Holdings Data",
        "x-index": 1005,
        "x-sample-data-url": "/companies/AAPL/insider_transaction_filings/latest",
        "x-documentation-url": "https://intrinio.com/docs/insider-institutional-holdings",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Company identifier (Ticker, CIK, LEI, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "company"
            ]
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/InsiderTransactionFiling"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/companies/{identifier}/news": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "All News by Company",
        "operationId": "get_company_news",
        "description": "Returns the latest and historical news article links, headlines and summaries for a specified US traded company.",
        "x-history": "May 2017 to Present",
        "x-data-type": "15-Min Delayed",
        "x-update-freq": "Rolling Basis - Intraday",
        "x-data-source": "Public RSS Feeds",
        "x-group": "Company News",
        "x-index": 1001,
        "x-sample-data-url": "/companies/AAPL/news",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/company-news",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Company identifier (Ticker, CIK, LEI, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "company"
            ]
          },
          {
            "in": "query",
            "name": "specific_source",
            "description": "Only news from this source. Defaults to highest available if not present.",
            "enum": [
              "yahoo",
              "moody",
              "moody_us_news",
              "moody_us_press_releases"
            ],
            "type": "string",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The maximum number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "sentiment",
            "description": "Filter by sentiment.  Unsupported for yahoo source.",
            "enum": [
              "positive",
              "neutral",
              "negative"
            ],
            "type": "string",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "topic",
            "description": "Filter by topic.  Unsupported for yahoo source.",
            "type": "string",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "security",
            "description": "Filter by `security` identifier (ticker, figi, isin, cusip, Intrinio ID).  Unsupported for yahoo source.",
            "type": "string",
            "required": false,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security"
            ]
          },
          {
            "in": "query",
            "name": "start_date",
            "type": "string",
            "format": "date",
            "description": "Limit news stories to those on or after this date. Defaults to yesterday if unspecified.",
            "required": false,
            "x-example": "~null",
            "x-example-value": "2024-01-01",
            "x-default-value": "2024-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "type": "string",
            "format": "date",
            "description": "Limit news stories to those on or before this date",
            "required": false,
            "x-example": "~null",
            "x-example-value": "2024-01-01",
            "x-default-value": "2024-01-01"
          },
          {
            "in": "query",
            "name": "language",
            "description": "Filter by language.  Unsupported for yahoo source.",
            "type": "string",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "word_count_greater_than",
            "description": "News stories will have a word count greater than this value.  Unsupported for yahoo source.",
            "type": "integer",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "word_count_less_than",
            "description": "News stories will have a word count less than this value.  Unsupported for yahoo source.",
            "type": "integer",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "is_spam",
            "description": "Filter whether it is marked as spam or not.  Unsupported for yahoo source.",
            "type": "boolean",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "business_relevance_greater_than",
            "description": "News stories will have a business relevance score more than this value.  Unsupported for yahoo source.",
            "type": "number",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "business_relevance_less_than",
            "description": "News stories will have a business relevance score less than this value.  Unsupported for yahoo source.",
            "type": "number",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseCompanyNews"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/companies/{identifier}/public_float": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Get Company's public float",
        "operationId": "get_company_public_float",
        "description": "Returns a list of public float data tied to a given company identifier.",
        "x-data-type": "End of Day",
        "x-update-freq": "Processed throughout the day after being accepted by the SEC",
        "x-data-source": "SEC | OpenFIGI",
        "x-group": "Company Reference & Metadata",
        "x-index": 1004,
        "x-sample-data-url": "/companies/AAPL/public_float",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/get_company_public_float",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Company identifier (Ticker, CIK, LEI, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "company"
            ]
          },
          {
            "in": "query",
            "name": "float_date_greater_than",
            "description": "The lower-bound date for the data being requested.",
            "type": "string",
            "format": "date",
            "x-example": "~null",
            "x-example-value": "2022-07-05",
            "required": false
          },
          {
            "in": "query",
            "name": "float_date_less_than",
            "description": "The upper-bound date for the data being requested.",
            "type": "string",
            "format": "date",
            "x-example": "~null",
            "x-example-value": "2023-07-05",
            "required": false
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseCompanyPublicFloatResult"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/companies/{identifier}/securities": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "All Securities by Company",
        "operationId": "get_company_securities",
        "description": "Returns a list of underlying securities with associated reference data tied to a given company identifier.",
        "x-note": "We maintain two distinct entity databases. A Companies database, and a separate Securities database. Companies are the top level entity filing with the SEC, and thus organized around the SEC CIK identifier. Securities are the underlying share classes associated with a company entity and are organized around the OpenFIGI identifier. For example, Alphabet, Inc. is the top level company entity, while GOOG and GOOGL are two securities associated with the company.",
        "x-data-type": "End of Day",
        "x-update-freq": "Rolling Basis ~ 20 to 30 Minutes After Filing Accepted by SEC",
        "x-data-source": "SEC | OpenFIGI",
        "x-group": "Company Reference & Metadata",
        "x-index": 1003,
        "x-sample-data-url": "/companies/AAPL/securities",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/company-reference-metadata",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Company identifier (Ticker, CIK, LEI, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "company"
            ]
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseCompanySecurities"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/companies/{identifier}/shares_outstanding": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Shares Outstanding by Company",
        "operationId": "shares_outstanding_by_company",
        "description": "Returns the shares outstanding reported on the front cover of the SEC 10-K and 10-Q filings.",
        "x-history": "2009 to Present",
        "x-data-type": "End of Day",
        "x-update-freq": "Rolling Basis ~ 20 to 30 Minutes After Filing Accepted by SEC",
        "x-data-source": "SEC",
        "x-additional-comments": "Historical shares outstanding are unadjusted, exactly as the company reported it. For adjusted shares outstanding, try the adjweightedavedilutedsharesos data tag using the `Historical Data` endpoint.",
        "x-group": "Standardized & As-Reported Financial Statement Data",
        "x-index": 1920,
        "x-sample-data-url": "/companies/AAPL/shares_outstanding",
        "x-sandbox": false,
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Company identifier (Ticker, CIK, LEI, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "company"
            ]
          },
          {
            "in": "query",
            "name": "end_date_greater_than",
            "description": "Returns shares outstanding after this date.",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "~null",
            "x-example-value": "2022-01-01"
          },
          {
            "in": "query",
            "name": "end_date_less_than",
            "description": "Returns shares outstanding before this date.",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "~null",
            "x-example-value": "2023-01-01"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseCompanySharesOutstanding"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/data_point/{identifier}/{tag}/number": {
      "get": {
        "produces": [
          "text/plain; charset=utf-8"
        ],
        "tags": [
          "DataPoint"
        ],
        "summary": "Data Point (Number)",
        "operationId": "get_data_point_number",
        "description": "Returns a numeric value for the given `tag` and the entity with the given `identifier`",
        "x-group": "Generic",
        "x-index": 1003,
        "x-sample-data-url": "/data_point/AAPL/marketcap/number",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/generic-fundamentals",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "An identifier for an entity such as a Company, Security, Index, etc (Ticker, FIGI, ISIN, CUSIP, CIK, LEI, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "company"
            ]
          },
          {
            "in": "path",
            "name": "tag",
            "description": "An Intrinio data tag ID or code (<a href='https://data.intrinio.com/data-tags'>reference</a>)",
            "type": "string",
            "required": true,
            "x-example": "marketcap",
            "x-example-value": "marketcap",
            "x-default-value": "marketcap",
            "x-lookup-mode": "data_tag"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "number",
              "description": "The latest numeric value for the identifier/item combination"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        }
      }
    },
    "/data_point/{identifier}/{tag}/text": {
      "get": {
        "produces": [
          "text/plain; charset=utf-8"
        ],
        "tags": [
          "DataPoint"
        ],
        "summary": "Data Point (Text)",
        "operationId": "get_data_point_text",
        "description": "Returns a text value for the given `tag` for the Security with the given `identifier`",
        "x-group": "Generic",
        "x-index": 1004,
        "x-sample-data-url": "/data_point/AAPL/ceo/text",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/generic-fundamentals",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "An identifier for an entity such as a Company, Security, Index, etc (Ticker, FIGI, ISIN, CUSIP, CIK, LEI, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "company"
            ]
          },
          {
            "in": "path",
            "name": "tag",
            "description": "An Intrinio data tag ID or code (<a href='https://data.intrinio.com/data-tags'>reference</a>)",
            "type": "string",
            "required": true,
            "x-example": "ceo",
            "x-example-value": "ceo",
            "x-default-value": "ceo",
            "x-lookup-mode": "data_tag"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "string",
              "description": "The latest text value for the identifier/item combination"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        }
      }
    },
    "/data_tags": {
      "get": {
        "tags": [
          "Data Tag"
        ],
        "summary": "All Data Tags",
        "operationId": "get_all_data_tags",
        "description": "Returns all Data Tags. Returns Data Tags matching parameters when specified.",
        "x-group": "Generic",
        "x-index": 1000,
        "x-sample-data-url": "/data_tags?statement_code=income_statement",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/generic-fundamentals",
        "parameters": [
          {
            "in": "query",
            "name": "tag",
            "description": "Tag",
            "type": "string",
            "required": false,
            "x-example": "~null",
            "x-lookup-mode": "data_tag"
          },
          {
            "in": "query",
            "name": "type",
            "description": "Type",
            "type": "string",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "parent",
            "description": "ID of tag parent",
            "type": "string",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "statement_code",
            "description": "Statement Code",
            "enum": [
              "income_statement",
              "balance_sheet_statement",
              "cash_flow_statement",
              "calculations"
            ],
            "type": "string",
            "required": false,
            "x-example": "income_statement",
            "x-example-value": "income_statement",
            "x-default-value": "income_statement"
          },
          {
            "in": "query",
            "name": "fs_template",
            "description": "Template",
            "type": "string",
            "enum": [
              "industrial",
              "financial"
            ],
            "default": "industrial",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseDataTags"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/data_tags/search": {
      "get": {
        "tags": [
          "Data Tag"
        ],
        "summary": "Search Data Tags",
        "operationId": "search_data_tags",
        "description": "Searches for Data Tags matching the text `query`",
        "x-group": "Generic",
        "x-index": 1001,
        "x-sample-data-url": "/data_tags/search?query=revenue",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/generic-fundamentals",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "type": "string",
            "required": true,
            "x-example": "revenue",
            "x-example-value": "revenue",
            "x-default-value": "revenue"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseDataTagsSearch"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/data_tags/{identifier}": {
      "get": {
        "tags": [
          "Data Tag"
        ],
        "summary": "Lookup Data Tag",
        "operationId": "get_data_tag_by_id",
        "description": "Returns the Data Tag with the given `identifier`",
        "x-group": "Generic",
        "x-index": 1002,
        "x-sample-data-url": "/data_tags/marketcap",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/generic-fundamentals",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "The Intrinio ID or the code-name of the Data Tag",
            "type": "string",
            "required": true,
            "x-example": "marketcap",
            "x-example-value": "marketcap",
            "x-default-value": "marketcap",
            "x-lookup-mode": "data_tag"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DataTag"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/esg": {
      "get": {
        "tags": [
          "ESG"
        ],
        "summary": "ESG Latest",
        "operationId": "get_esg_latest",
        "description": null,
        "x-note": null,
        "x-history": "N/A",
        "x-data-type": null,
        "x-update-freq": "Data is on a 2 month lag.",
        "x-data-source": "CSRHub",
        "x-additional-comments": null,
        "x-group": "ESG",
        "x-index": 1000,
        "x-sample-data-url": "/esg",
        "x-sandbox": false,
        "parameters": [
          {
            "in": "query",
            "name": "country",
            "description": null,
            "type": "string",
            "required": false,
            "x-example": "USA",
            "x-example-value": "USA",
            "x-default-value": "USA"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseESGLatest"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/esg/companies": {
      "get": {
        "tags": [
          "ESG"
        ],
        "summary": "ESG Companies",
        "operationId": "get_esg_companies",
        "description": null,
        "x-note": null,
        "x-history": "N/A",
        "x-data-type": null,
        "x-update-freq": "Data is on a 2 month lag.",
        "x-data-source": "CSRHub",
        "x-additional-comments": null,
        "x-group": "ESG",
        "x-index": 1000,
        "x-sample-data-url": "/esg/companies",
        "x-sandbox": false,
        "parameters": [
          {
            "in": "query",
            "name": "country",
            "description": null,
            "type": "string",
            "required": false,
            "x-example": "Canada",
            "x-example-value": "Canada",
            "x-default-value": "USA"
          },
          {
            "in": "query",
            "name": "industry",
            "description": null,
            "type": "string",
            "required": false,
            "x-example": "Retail",
            "x-example-value": "Retail",
            "x-default-value": "Retail"
          },
          {
            "in": "query",
            "name": "ticker",
            "description": null,
            "type": "string",
            "required": false,
            "x-example": "SHOP",
            "x-example-value": "SHOP",
            "x-default-value": "SHOP"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseESGCompanies"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/esg/comprehensive": {
      "get": {
        "tags": [
          "ESG"
        ],
        "summary": "ESG Latest Comprehensive",
        "operationId": "get_esg_latest_comprehensive",
        "description": null,
        "x-note": null,
        "x-history": "N/A",
        "x-data-type": null,
        "x-update-freq": "Data is on a 2 month lag.",
        "x-data-source": "CSRHub",
        "x-additional-comments": null,
        "x-group": "ESG",
        "x-index": 1000,
        "x-sample-data-url": "/esg/comprehensive",
        "x-sandbox": false,
        "parameters": [
          {
            "in": "query",
            "name": "country",
            "description": null,
            "type": "string",
            "required": false,
            "x-example": "USA",
            "x-example-value": "USA",
            "x-default-value": "USA"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseESGLatestComprehensive"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/esg/{identifier}": {
      "get": {
        "tags": [
          "ESG"
        ],
        "summary": "ESG Company Ratings History",
        "operationId": "get_esg_company_ratings",
        "description": null,
        "x-note": null,
        "x-history": "N/A",
        "x-data-type": null,
        "x-update-freq": "Data is on a 2 month lag.",
        "x-data-source": "CSRHub",
        "x-additional-comments": null,
        "x-group": "ESG",
        "x-index": 1000,
        "x-sample-data-url": "/esg/AAPL",
        "x-sandbox": false,
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "ISIN, Intrinio ID, or Ticker",
            "type": "string",
            "required": false,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseESGCompanyRatingHistory"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/esg/{identifier}/comprehensive": {
      "get": {
        "tags": [
          "ESG"
        ],
        "summary": "ESG Company Comprehensive Ratings History",
        "operationId": "get_esg_company_comprehensive_ratings",
        "description": null,
        "x-note": null,
        "x-history": "N/A",
        "x-data-type": null,
        "x-update-freq": "Data is on a 2 month lag.",
        "x-data-source": "CSRHub",
        "x-additional-comments": null,
        "x-group": "ESG",
        "x-index": 1000,
        "x-sample-data-url": "/esg/AAPL/comprehensive",
        "x-sandbox": false,
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "ISIN, Intrinio ID, or Ticker",
            "type": "string",
            "required": false,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseESGCompanyComprehensiveRatingHistory"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/etfs": {
      "get": {
        "tags": [
          "ETFs"
        ],
        "summary": "All ETFs",
        "operationId": "get_all_etfs",
        "description": "Returns a list of all currently listed ETFs, with relevant identification information including the ETF Name, Ticker, FIGI Ticker, and Exchange MIC for further usage with our ETF Metadata, Holdings, Stats, and Analytics offerings.",
        "x-note": "While this endpoint returns all listed ETFs across all exchanges around the world, our current ETF Holdings, Stats, and Analytics offerings are limited to US listed ETFs only. Our ETF Metadata offering is the sole global database at this time.",
        "x-history": "N/A",
        "x-data-type": "End of Day",
        "x-update-freq": "Updated every 15 minutes. Data is on a 2-3 day lag.",
        "x-data-source": "CFRA",
        "x-additional-comments": "Useful for building and maintaining an ETF specific database. | Useful for viewing a list of ETFs trading on a specific exchange.",
        "x-group": "Reference & Metadata",
        "x-index": 1000,
        "x-sample-data-url": "/etfs",
        "x-sandbox": false,
        "parameters": [
          {
            "in": "query",
            "name": "exchange",
            "description": null,
            "type": "string",
            "required": false,
            "x-example": "XNAS",
            "x-example-value": "XNAS",
            "x-default-value": "XNAS",
            "x-lookup-mode": "identifier"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseETFs"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/etfs/search": {
      "get": {
        "tags": [
          "ETFs"
        ],
        "summary": "Search ETFs",
        "operationId": "search_etfs",
        "description": "Accepts a string of keyword combinations, and searches across the ETF name and ticker and returns a list of ETFs with related keywords.",
        "x-history": "N/A",
        "x-data-type": "End of Day",
        "x-update-freq": "Updated every 15 minutes. Data is on a 2-3 day lag.",
        "x-data-source": "CFRA",
        "x-additional-comments": "Useful for locating the symbol for an ETF based on its name or constituent holding objectives, i.e., “mid cap value” | Helpful for powering ETF search boxes within platforms.",
        "x-group": "Reference & Metadata",
        "x-index": 1001,
        "x-sample-data-url": "/etfs/search?query=iShares",
        "x-sandbox": false,
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "description": null,
            "type": "string",
            "required": true,
            "x-example": "iShares",
            "x-example-value": "iShares",
            "x-default-value": "iShares"
          },
          {
            "in": "query",
            "name": "mode",
            "description": "When set, changes search mode to the specified mode. Paging is not available in rank_order.",
            "enum": [
              "rank_order",
              "starts_with"
            ],
            "type": "string",
            "required": false,
            "x-example": "~null",
            "x-example-value": "~null"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseETFs"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/etfs/{identifier}": {
      "get": {
        "tags": [
          "ETFs"
        ],
        "summary": "Lookup ETF",
        "operationId": "get_etf",
        "description": "Returns classifications and reference data which consists of ~90 columns that give detailed information about an ETF. These granular details include asset class, expense ratio, index name, index weighting scheme, smart beta type and specific investment objectives.",
        "x-history": "N/A",
        "x-data-type": "End of Day",
        "x-update-freq": "Updated every 15 minutes. Data is on a 2-3 day lag.",
        "x-data-source": "CFRA",
        "x-additional-comments": "Useful for powering an ETF overview page within a platform; provides all requisite characteristics of an ETF and allows users to generate meaningful peer groups. | Useful for building a complete global, ETF reference database.",
        "x-group": "Reference & Metadata",
        "x-index": 1002,
        "x-sample-data-url": "/etfs/SPY",
        "x-sandbox": false,
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "An ETF identifier (Ticker, Figi Ticker, ISIN, RIC, Intrinio ID)",
            "type": "string",
            "required": false,
            "x-example": "SPY",
            "x-example-value": "SPY",
            "x-default-value": "SPY"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ETF"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/etfs/{identifier}/analytics": {
      "get": {
        "tags": [
          "ETFs"
        ],
        "summary": "ETF Analytics",
        "operationId": "get_etf_analytics",
        "description": "Returns latest market analytics for a specified US ETF, including volume, trailing volume, market cap, 52 week high, and 52 week low.",
        "x-history": "N/A",
        "x-data-type": "End of Day",
        "x-update-freq": "Updated every 15 minutes. Data is on a 2-3 day lag.",
        "x-data-source": "CFRA",
        "x-additional-comments": "Useful for grabbing key market analytics for a snapshot view on ETF pages in a platform.",
        "x-group": "Returns & Analytics",
        "x-index": 1001,
        "x-sample-data-url": "/etfs/SPY/analytics",
        "x-sandbox": false,
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "An ETF identifier (Ticker, Figi Ticker, ISIN, RIC, Intrinio ID)",
            "type": "string",
            "required": false,
            "x-example": "SPY",
            "x-example-value": "SPY",
            "x-default-value": "SPY"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ETFAnalytics"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/etfs/{identifier}/historical_stats": {
      "get": {
        "tags": [
          "ETFs"
        ],
        "summary": "Exchange Traded Fund (ETF) stats",
        "operationId": "get_etf_historical_stats",
        "description": "Returns comprehensive key US ETF historical performance statistics, including prices, NAVs, flows, returns, and much more for both trailing and calendar year periods.",
        "x-history": "N/A",
        "x-data-type": "End of Day",
        "x-update-freq": "Updated every 15 minutes. Data is on a 2-3 day lag.",
        "x-data-source": "CFRA",
        "x-additional-comments": "Useful for building performance views on ETF pages in a platform with a single API request.",
        "x-group": "Returns & Analytics",
        "x-index": 1000,
        "x-sample-data-url": "/etfs/SPY/historical_stats",
        "x-sandbox": false,
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "An ETF identifier (Ticker, Figi Ticker, ISIN, RIC, Intrinio ID)",
            "type": "string",
            "required": false,
            "x-example": "SPY",
            "x-example-value": "SPY",
            "x-default-value": "SPY"
          },
          {
            "in": "query",
            "name": "start_date",
            "type": "string",
            "format": "date",
            "description": "The start date for the historical stats data in YYYY-MM-DD format.",
            "required": false,
            "x-example": "2020-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "type": "string",
            "format": "date",
            "description": "The end date for the historical stats data in YYYY-MM-DD format.",
            "required": false,
            "x-example": "2020-12-31"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The maximum number of results to return per page.",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ETFHistoricalStats"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/etfs/{identifier}/holdings": {
      "get": {
        "tags": [
          "ETFs"
        ],
        "summary": "ETF Holdings",
        "operationId": "get_etf_holdings",
        "description": "Returns holdings data that details all the constituent securities in each ETF with names, identifiers, and the weights for each security providing granular level transparency.",
        "x-note": "Most other ETF holdings providers update their database once a month. Our holdings database updates daily on a 2-3 day lag.",
        "x-history": "N/A",
        "x-data-type": "End of Day",
        "x-update-freq": "Updated every 15 minutes. Data is on a 2-3 day lag.",
        "x-data-source": "CFRA",
        "x-additional-comments": "This endpoint is perfect for getting a transparent, complete view of holdings across ETFs and allowing a user to see the aggregated weights of securities held in multiple ETFs and the diversity (or lack thereof) of their holdings across the security universe.",
        "x-group": "Holdings",
        "x-index": 1000,
        "x-sample-data-url": "/etfs/SPY/holdings",
        "x-sandbox": false,
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "An ETF identifier (Ticker, Figi Ticker, ISIN, RIC, Intrinio ID)",
            "type": "string",
            "required": false,
            "x-example": "SPY",
            "x-example-value": "SPY",
            "x-default-value": "SPY"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseETFHoldings"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/etfs/{identifier}/stats": {
      "get": {
        "tags": [
          "ETFs"
        ],
        "summary": "Exchange Traded Fund (ETF) stats",
        "operationId": "get_etf_stats",
        "description": "Returns comprehensive key US ETF performance statistics, including prices, NAVs, flows, returns, and much more for both trailing and calendar year periods.",
        "x-history": "N/A",
        "x-data-type": "End of Day",
        "x-update-freq": "Updated every 15 minutes. Data is on a 2-3 day lag.",
        "x-data-source": "CFRA",
        "x-additional-comments": "Useful for building performance views on ETF pages in a platform with a single API request.",
        "x-group": "Returns & Analytics",
        "x-index": 1000,
        "x-sample-data-url": "/etfs/SPY/stats",
        "x-sandbox": false,
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "An ETF identifier (Ticker, Figi Ticker, ISIN, RIC, Intrinio ID)",
            "type": "string",
            "required": false,
            "x-example": "SPY",
            "x-example-value": "SPY",
            "x-default-value": "SPY"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ETFStats"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/filings": {
      "get": {
        "tags": [
          "Filing"
        ],
        "summary": "All Filings",
        "operationId": "get_all_filings",
        "description": "Returns pertinent filing reference data for a specific company filing or latest filings for all companies. Useful for tracking the latest filings submitted and updating your database accordingly with the new information.",
        "x-history": "Quarterly Fundamentals from 2009 | Yearly Fundamentals from 2007",
        "x-data-type": "End of Day",
        "x-update-freq": "Rolling Basis ~ 20 to 30 Minutes After Filing Accepted by SEC",
        "x-data-source": "SEC",
        "x-additional-comments": "Try using the report_type parameter to filter on specific filing types. | Try setting the start_date parameter to the current day to return only those filings filed today.",
        "x-group": "Standardized & As-Reported Financial Statement Data",
        "x-index": 1000,
        "x-sample-data-url": "/filings?company=AAPL",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/standardized-as-reported-financial-statement-data",
        "parameters": [
          {
            "in": "query",
            "name": "company",
            "description": "Filings for the given `company` identifier (ticker, CIK, LEI, Intrinio ID)",
            "type": "string",
            "required": false,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "company"
            ]
          },
          {
            "in": "query",
            "name": "report_type",
            "description": "Filter by report type. Separate values with commas to return multiple The filing <a href=\"https://docs.intrinio.com/documentation/sec_filing_report_types\" target=\"_blank\">report types</a>.",
            "type": "string",
            "required": false,
            "x-example": "10-Q"
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Filed on or after the given date",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "2015-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Filed before or after the given date",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "industry_category",
            "description": "Return companies in the given industry category",
            "type": "string",
            "required": false,
            "x-example": "~null",
            "x-example-value": "Metals & Mining"
          },
          {
            "in": "query",
            "name": "industry_group",
            "description": "Return companies in the given industry group",
            "type": "string",
            "required": false,
            "x-example": "~null",
            "x-example-value": "Aluminum"
          },
          {
            "in": "query",
            "name": "thea_enabled",
            "description": "Return filings that have been read by our Thea NLP and are ready for our answers endpoint",
            "type": "boolean",
            "required": false,
            "x-example": "~null",
            "x-example-value": true
          },
          {
            "in": "query",
            "name": "earnings_release",
            "description": "Return filings that have been tagged as having Results of Operations and Financial Conditions",
            "type": "boolean",
            "required": false,
            "x-example": "~null",
            "x-example-value": true
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseFilings"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/filings/notes": {
      "get": {
        "tags": [
          "Filing"
        ],
        "summary": "All Filing Notes",
        "operationId": "get_all_notes",
        "description": "Returns a list of the latest XBRL filing note sections from the SEC 10-K and 10-Q statements. The returned Intrinio XBRL filing note ID can then be utilized with the “Filing Note by ID” endpoint to retrieve the contents of the note in HTML or text format.",
        "x-note": "Over 6.4 million notes from 10Q, 10K, 10Q/A, and 10K/A all searchable by keyword.",
        "x-history": "Quarterly Fundamentals from 2009 | Yearly Fundamentals from 2007",
        "x-data-type": "End of Day",
        "x-update-freq": "Rolling Basis ~ 20 to 30 Minutes After Filing Accepted by SEC",
        "x-data-source": "SEC",
        "x-additional-comments": "Try using the company, report_type, and date filters to limit results to specific companies, report types and date ranges, respectively.",
        "x-group": "XBRL Searchable Financial Statement Notes",
        "x-index": 1000,
        "x-sample-data-url": "/filings/notes?company=AAPL&report_type=10-K",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/xbrl-searchable-financial-statement-notes",
        "parameters": [
          {
            "in": "query",
            "name": "company",
            "description": "A Company identifier (Ticker, CIK, LEI, Intrinio ID)",
            "type": "string",
            "required": false,
            "x-example-value": "AAPL",
            "x-example": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "company"
            ]
          },
          {
            "in": "query",
            "name": "report_type",
            "description": "Notes contained in filings that match the given <a href=\"https://docs.intrinio.com/documentation/sec_filing_report_types\" target=\"_blank\">report type</a>",
            "type": "string",
            "x-example-value": "10-Q",
            "x-example": "10-Q",
            "enum": [
              "10-Q",
              "10-K"
            ]
          },
          {
            "in": "query",
            "name": "filing_start_date",
            "description": "Limit search to filings on or after this date",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example-value": "2018-07-15",
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "filing_end_date",
            "description": "Limit search to filings on or before this date",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example-value": "2018-11-15",
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "period_ended_start_date",
            "description": "Limit search to filings with a period end date on or after this date",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example-value": "2018-07-15",
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "period_ended_end_date",
            "description": "Limit search to filings with a period end date on or before this date",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example-value": "2018-11-15",
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseFilingNotes"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/filings/notes/search": {
      "get": {
        "tags": [
          "Filing"
        ],
        "summary": "Search Filing Notes",
        "operationId": "search_notes",
        "description": "Search the XBRL note database and return a list of XBRL note sections containing text from the text query parameter passed through.",
        "x-history": "Quarterly Fundamentals from 2009 | Yearly Fundamentals from 2007",
        "x-data-type": "End of Day",
        "x-update-freq": "Rolling Basis ~ 20 to 30 Minutes After Filing Accepted by SEC",
        "x-data-source": "SEC",
        "x-additional-comments": "The returned Intrinio XBRL filing note ID can then be utilized with the `Filing Note by ID` endpoint to retrieve the contents of the note in HTML or text format. | Great for quickly searching for topics or specific items across the entire universe and seeing what each company is saying about it.",
        "x-group": "XBRL Searchable Financial Statement Notes",
        "x-index": 1001,
        "x-sample-data-url": "/filings/notes/search?query=hyperinflation",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/xbrl-searchable-financial-statement-notes",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "description": "Search for notes that contain all or parts of this text",
            "type": "string",
            "required": true,
            "x-example-value": "inflation",
            "x-example": "inflation"
          },
          {
            "in": "query",
            "name": "filing_start_date",
            "description": "Limit search to filings on or after this date",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "2018-07-15",
            "x-example-value": "2018-07-15"
          },
          {
            "in": "query",
            "name": "filing_end_date",
            "type": "string",
            "format": "date",
            "description": "Limit search to filings on or before this date",
            "required": false,
            "x-example": "2018-11-30",
            "x-example-value": "2018-11-30"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseFilingNotesSearch"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/filings/notes/{identifier}": {
      "get": {
        "tags": [
          "Filing"
        ],
        "summary": "Filing Note by ID",
        "operationId": "get_note",
        "description": "Returns the XBRL filing note contents in HTML or text format for a specified Intrinio XBRL filing note ID.",
        "x-history": "Quarterly Fundamentals from 2009 | Yearly Fundamentals from 2007",
        "x-data-type": "End of Day",
        "x-update-freq": "Rolling Basis ~ 20 to 30 Minutes After Filing Accepted by SEC",
        "x-data-source": "SEC",
        "x-additional-comments": "Try using the `All Filing Notes` or `Search Filing Notes` endpoints to first retrieve the unique Intrinio XBRL filing note ID.",
        "x-group": "XBRL Searchable Financial Statement Notes",
        "x-index": 1230,
        "x-sample-data-url": "/filings/notes/xbn_ydK3QL",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/xbrl-searchable-financial-statement-notes",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "The Intrinio ID of the filing note",
            "type": "string",
            "required": true,
            "x-example-value": "xbn_ydK3QL",
            "x-example": "xbn_ydK3QL"
          },
          {
            "in": "query",
            "name": "content_format",
            "description": "Returns content in html (as filed) or plain text",
            "type": "string",
            "x-example-value": "html",
            "x-example": "text",
            "default": "text",
            "enum": [
              "text",
              "html"
            ]
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/FilingNote"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/filings/notes/{identifier}/html": {
      "get": {
        "tags": [
          "Filing"
        ],
        "summary": "Filing Note HTML",
        "operationId": "get_note_html",
        "x-group": "XBRL Searchable Financial Statement Notes",
        "x-index": 1003,
        "x-sample-data-url": "/filings/notes/xbn_ydK3QL/html",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/xbrl-searchable-financial-statement-notes",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "The Intrinio ID of the filing note",
            "type": "string",
            "required": true,
            "x-example-value": "xbn_ydK3QL",
            "x-example": "xbn_ydK3QL"
          }
        ],
        "produces": [
          "text/plain; charset=utf-8"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        }
      }
    },
    "/filings/notes/{identifier}/text": {
      "get": {
        "tags": [
          "Filing"
        ],
        "summary": "Filing Note Text",
        "operationId": "get_note_text",
        "x-group": "XBRL Searchable Financial Statement Notes",
        "x-index": 1002,
        "x-sample-data-url": "/filings/notes/xbn_ydK3QL/text",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/xbrl-searchable-financial-statement-notes",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "The Intrinio ID of the filing note",
            "type": "string",
            "required": true,
            "x-example-value": "xbn_ydK3QL",
            "x-example": "xbn_ydK3QL"
          }
        ],
        "produces": [
          "text/plain; charset=utf-8"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        }
      }
    },
    "/filings/{identifier}/answers": {
      "get": {
        "tags": [
          "Filing"
        ],
        "summary": "Filing Answers",
        "operationId": "get_filing_answers",
        "x-group": "Thea Answers API",
        "x-index": 1001,
        "x-sample-data-url": "/filings/fil_GrRLwe/answers",
        "x-sandbox": false,
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Filing identifier",
            "type": "string",
            "required": true,
            "x-example": "fil_B73xBG",
            "x-example-value": "fil_GrRLwe",
            "x-default-value": "fil_GrRLwe"
          },
          {
            "in": "query",
            "name": "query",
            "type": "string",
            "required": true,
            "description": "The query to ask the Thea API",
            "x-example": "What do they believe in?",
            "x-example-value": "What do they believe in?",
            "x-default-value": "What do they believe in?"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseFilingAnswers"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/filings/{identifier}/fundamentals": {
      "get": {
        "tags": [
          "Filing"
        ],
        "summary": "All Fundamentals by Filing",
        "operationId": "get_filing_fundamentals",
        "description": "Returns a list of fundamentals with unique fundamental IDs associated with a particular `Intrinio Filing ID` (if applicable) that have been updated or created as a result of a company`s latest SEC filing. Useful to ensure your database is up to date with the latest fundamentals.",
        "x-note": "Companies restate prior fiscal periods on each 10-K and 10-Q for comparison with their latest completed period. We specify whether each fundamental returned is restated or reported (meaning the original, non-restated fundamental) with the `type` field located in the fundamental array.",
        "x-history": "Quarterly Fundamentals from 2009 | Yearly Fundamentals from 2007",
        "x-data-type": "End of Day",
        "x-update-freq": "Rolling Basis ~ 20 to 30 Minutes After Filing Accepted by SEC",
        "x-data-source": "SEC",
        "x-additional-comments": "Use the “All Filings” endpoint first to obtain the filing ID of interest. | Try using the statement_code and type parameters to return the fundamental associated with a specific statement and period.",
        "x-group": "Standardized & As-Reported Financial Statement Data",
        "x-index": 1003,
        "x-sample-data-url": "/filings/fil_B73xBG/fundamentals",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/standardized-as-reported-financial-statement-data",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Filing identifier",
            "type": "string",
            "required": true,
            "x-example": "fil_B73xBG",
            "x-example-value": "fil_B73xBG",
            "x-default-value": "fil_B73xBG",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "filing"
            ]
          },
          {
            "in": "query",
            "name": "statement_code",
            "description": "Filters fundamentals by statement code",
            "enum": [
              "income_statement",
              "balance_sheet_statement",
              "cash_flow_statement",
              "calculations"
            ],
            "type": "string",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "type",
            "description": "Filters fundamentals by type",
            "enum": [
              "QTR",
              "YTD",
              "FY",
              "TTM"
            ],
            "type": "string",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "fiscal_year",
            "description": "Filters fundamentals by fiscal year",
            "type": "integer",
            "required": false,
            "x-example": "~null",
            "x-example-value": "~null",
            "x-default-value": 2017
          },
          {
            "in": "query",
            "name": "fiscal_period",
            "description": "Filters fundamentals by fiscal period",
            "enum": [
              "FY",
              "Q1",
              "Q2",
              "Q3",
              "Q4",
              "Q2YTD",
              "Q3YTD",
              "Q1TTM",
              "Q2TTM",
              "Q3TTM"
            ],
            "type": "string",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Returns fundamentals on or after the given date",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Returns fundamentals on or before the given date",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseFilingFundamentals"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/filings/{identifier}/html": {
      "get": {
        "tags": [
          "Filing"
        ],
        "summary": "Filing Html",
        "operationId": "get_filing_html",
        "description": "Returns a SEC filing in HTML Format for a specified filing ID.",
        "x-note": "Covers 10-K, 10-Q, 10-KT, 10-QT, 8-K, 20-F, and 40-F filings.",
        "x-history": "Quarterly Filings from 2009 | Yearly Filings from 2007",
        "x-data-type": "End of Day",
        "x-update-freq": "Rolling Basis ~ 20 to 30 Minutes After Filing Accepted by SEC",
        "x-data-source": "SEC",
        "x-additional-comments": "Try using the `All Filings` endpoint first to obtain the filing ID of interest where you can filter by company, date, report type, and industry.",
        "x-group": "Raw Text Filings",
        "x-index": 1002,
        "x-sample-data-url": "/filings/fil_B73xBG/html",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/raw-text-filings",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Filing identifier",
            "type": "string",
            "required": true,
            "x-example": "fil_B73xBG",
            "x-example-value": "fil_B73xBG",
            "x-default-value": "fil_B73xBG"
          }
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        }
      }
    },
    "/filings/{identifier}/text": {
      "get": {
        "tags": [
          "Filing"
        ],
        "summary": "Filing Text",
        "operationId": "get_filing_text",
        "x-group": "Raw Text Filings",
        "x-index": 1003,
        "x-sample-data-url": "/filings/fil_B73xBG/text",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/raw-text-filings",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Filing identifier",
            "type": "string",
            "required": true,
            "x-example": "fil_B73xBG",
            "x-example-value": "fil_B73xBG",
            "x-default-value": "fil_B73xBG"
          }
        ],
        "produces": [
          "text/plain; charset=utf-8"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        }
      }
    },
    "/filings/{id}": {
      "get": {
        "tags": [
          "Filing"
        ],
        "summary": "Lookup Filing",
        "operationId": "get_filing_by_id",
        "description": "Returns the Filing with the given `identifier`",
        "x-group": "Standardized & As-Reported Financial Statement Data",
        "x-index": 1002,
        "x-sample-data-url": "/filings/fil_7Kn2P6",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/standardized-as-reported-financial-statement-data",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The Intrinio ID of the Filing",
            "type": "string",
            "required": true,
            "x-example": "fil_7Kn2P6",
            "x-example-value": "fil_7Kn2P6",
            "x-default-value": "fil_7Kn2P6"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Filing"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/forex/currencies": {
      "get": {
        "tags": [
          "Forex"
        ],
        "summary": "Forex Currencies",
        "operationId": "get_forex_currencies",
        "description": "Returns a list of forex currencies for which prices are available.",
        "x-group": "Forex",
        "x-index": 1500,
        "x-sample-data-url": "/forex/currencies",
        "x-sandbox": true,
        "x-hidden": true,
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseForexCurrencies"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/forex/pairs": {
      "get": {
        "tags": [
          "Forex"
        ],
        "summary": "Forex Currency Pairs",
        "operationId": "get_forex_pairs",
        "description": "Returns a list of currency pairs used to request foreign exchange (forex) market price data. The currency that is used as the reference is called quote currency and the currency that is quoted in relation is called the base currency. For example, in the pair code “EURGBP” with a price of 0.88, one Euro (base currency) can be exchanged for 0.88 British Pounds (quote currency).",
        "x-group": "Forex",
        "x-index": 1501,
        "x-sample-data-url": "/forex/pairs",
        "x-sandbox": true,
        "x-hidden": true,
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseForexPairs"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/forex/prices/{pair}/{timeframe}": {
      "get": {
        "tags": [
          "Forex"
        ],
        "summary": "Forex Currency Prices",
        "description": "Provides a list of forex price quotes for a given forex currency pair and timeframe.",
        "operationId": "get_forex_prices",
        "x-group": "Forex",
        "x-index": 1502,
        "x-sample-data-url": "/forex/prices/EURUSD/D1",
        "x-sandbox": true,
        "x-hidden": true,
        "x-datetime-parse": true,
        "parameters": [
          {
            "in": "path",
            "name": "pair",
            "type": "string",
            "description": "The Forex Currency Pair code",
            "required": true,
            "x-example": "EURUSD",
            "x-example-value": "EURUSD",
            "x-default-value": "EURUSD"
          },
          {
            "in": "path",
            "name": "timeframe",
            "type": "string",
            "description": "The time interval for the quotes",
            "required": true,
            "enum": [
              "m1",
              "m5",
              "m15",
              "m30",
              "H1",
              "H2",
              "H3",
              "H4",
              "H6",
              "H8",
              "D1",
              "W1",
              "M1"
            ],
            "x-example": "D1",
            "x-example-value": "D1",
            "x-default-value": "D1"
          },
          {
            "in": "query",
            "name": "timezone",
            "type": "string",
            "description": "Returns trading times in this timezone",
            "required": false,
            "enum": [
              "Africa/Algiers",
              "Africa/Cairo",
              "Africa/Casablanca",
              "Africa/Harare",
              "Africa/Johannesburg",
              "Africa/Monrovia",
              "Africa/Nairobi",
              "America/Argentina/Buenos_Aires",
              "America/Bogota",
              "America/Caracas",
              "America/Chicago",
              "America/Chihuahua",
              "America/Denver",
              "America/Godthab",
              "America/Guatemala",
              "America/Guyana",
              "America/Halifax",
              "America/Indiana/Indianapolis",
              "America/Juneau",
              "America/La_Paz",
              "America/Lima",
              "America/Lima",
              "America/Los_Angeles",
              "America/Mazatlan",
              "America/Mexico_City",
              "America/Mexico_City",
              "America/Monterrey",
              "America/Montevideo",
              "America/New_York",
              "America/Phoenix",
              "America/Regina",
              "America/Santiago",
              "America/Sao_Paulo",
              "America/St_Johns",
              "America/Tijuana",
              "Asia/Almaty",
              "Asia/Baghdad",
              "Asia/Baku",
              "Asia/Bangkok",
              "Asia/Bangkok",
              "Asia/Chongqing",
              "Asia/Colombo",
              "Asia/Dhaka",
              "Asia/Dhaka",
              "Asia/Hong_Kong",
              "Asia/Irkutsk",
              "Asia/Jakarta",
              "Asia/Jerusalem",
              "Asia/Kabul",
              "Asia/Kamchatka",
              "Asia/Karachi",
              "Asia/Karachi",
              "Asia/Kathmandu",
              "Asia/Kolkata",
              "Asia/Kolkata",
              "Asia/Kolkata",
              "Asia/Kolkata",
              "Asia/Krasnoyarsk",
              "Asia/Kuala_Lumpur",
              "Asia/Kuwait",
              "Asia/Magadan",
              "Asia/Muscat",
              "Asia/Muscat",
              "Asia/Novosibirsk",
              "Asia/Rangoon",
              "Asia/Riyadh",
              "Asia/Seoul",
              "Asia/Shanghai",
              "Asia/Singapore",
              "Asia/Srednekolymsk",
              "Asia/Taipei",
              "Asia/Tashkent",
              "Asia/Tbilisi",
              "Asia/Tehran",
              "Asia/Tokyo",
              "Asia/Tokyo",
              "Asia/Tokyo",
              "Asia/Ulaanbaatar",
              "Asia/Urumqi",
              "Asia/Vladivostok",
              "Asia/Yakutsk",
              "Asia/Yekaterinburg",
              "Asia/Yerevan",
              "Atlantic/Azores",
              "Atlantic/Cape_Verde",
              "Atlantic/South_Georgia",
              "Australia/Adelaide",
              "Australia/Brisbane",
              "Australia/Darwin",
              "Australia/Hobart",
              "Australia/Melbourne",
              "Australia/Melbourne",
              "Australia/Perth",
              "Australia/Sydney",
              "Etc/UTC",
              "UTC",
              "Europe/Amsterdam",
              "Europe/Athens",
              "Europe/Belgrade",
              "Europe/Berlin",
              "Europe/Berlin",
              "Europe/Bratislava",
              "Europe/Brussels",
              "Europe/Bucharest",
              "Europe/Budapest",
              "Europe/Copenhagen",
              "Europe/Dublin",
              "Europe/Helsinki",
              "Europe/Istanbul",
              "Europe/Kaliningrad",
              "Europe/Kiev",
              "Europe/Lisbon",
              "Europe/Ljubljana",
              "Europe/London",
              "Europe/London",
              "Europe/Madrid",
              "Europe/Minsk",
              "Europe/Moscow",
              "Europe/Moscow",
              "Europe/Paris",
              "Europe/Prague",
              "Europe/Riga",
              "Europe/Rome",
              "Europe/Samara",
              "Europe/Sarajevo",
              "Europe/Skopje",
              "Europe/Sofia",
              "Europe/Stockholm",
              "Europe/Tallinn",
              "Europe/Vienna",
              "Europe/Vilnius",
              "Europe/Volgograd",
              "Europe/Warsaw",
              "Europe/Zagreb",
              "Pacific/Apia",
              "Pacific/Auckland",
              "Pacific/Auckland",
              "Pacific/Chatham",
              "Pacific/Fakaofo",
              "Pacific/Fiji",
              "Pacific/Guadalcanal",
              "Pacific/Guam",
              "Pacific/Honolulu",
              "Pacific/Majuro",
              "Pacific/Midway",
              "Pacific/Midway",
              "Pacific/Noumea",
              "Pacific/Pago_Pago",
              "Pacific/Port_Moresby",
              "Pacific/Tongatapu"
            ],
            "default": "UTC",
            "x-example": "UTC",
            "x-example-value": "UTC",
            "x-default-value": "UTC"
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return Forex Prices on or after this date",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "2018-01-01",
            "x-example-value": "2018-01-01"
          },
          {
            "in": "query",
            "name": "start_time",
            "description": "Return Forex Prices at or after this time (24-hour in 'hh:mm' format, UTC timezone)",
            "type": "string",
            "required": false,
            "x-example": "~null",
            "x-example-value": "14:20:00"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return Forex Prices on or before this date",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "end_time",
            "description": "Return Forex Prices at or before this time (24-hour in 'hh:mm' format, UTC timezone)",
            "type": "string",
            "required": false,
            "x-example": "~null",
            "x-example-value": "21:01:21"
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of results to return",
            "type": "integer",
            "maximum": 10000,
            "default": 100,
            "x-example": 100,
            "x-example-value": 100,
            "x-default-value": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseForexPrices"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/fundamentals": {
      "get": {
        "tags": [
          "Fundamentals"
        ],
        "summary": "Filter Fundamental",
        "operationId": "filter_fundamental",
        "description": "Returns fundamentals that meet the set of filters specified in parameters.",
        "x-note": "Companies restate prior fiscal periods on each 10-K and 10-Q for comparison with their latest completed period. We specify whether each fundamental returned is restated or reported (meaning the original, non-restated fundamental) with the `type` field located in the fundamental array.",
        "x-history": "Quarterly Fundamentals from 2009 | Yearly Fundamentals from 2007",
        "x-data-type": "End of Day",
        "x-update-freq": "Rolling Basis ~ 20 to 30 Minutes After Filing Accepted by SEC",
        "x-data-source": "SEC",
        "x-group": "Standardized & As-Reported Financial Statement Data",
        "x-index": 1006,
        "x-sample-data-url": "/fundamentals?filed_after=20200101&filed_before=20220801&reported_only=true&fiscal_year=2021&statement_code=income_statement&type=QTR&fiscal_period=Q1&start_date=20200101&end_date=20220801",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/standardized-as-reported-financial-statement-data",
        "parameters": [
          {
            "in": "query",
            "name": "filed_after",
            "description": "Only include fundamentals that were filed on or after this date.",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "2022-01-01",
            "x-example-value": "2022-01-01",
            "x-default-value": "2022-01-01"
          },
          {
            "in": "query",
            "name": "filed_before",
            "description": "Only include fundamentals that were filed on or before this date.",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "2022-12-01",
            "x-example-value": "2022-12-01",
            "x-default-value": "2022-12-01"
          },
          {
            "in": "query",
            "name": "reported_only",
            "description": "Only as-reported fundamentals",
            "type": "boolean",
            "required": false,
            "x-example": false,
            "x-example-value": false,
            "x-default-value": false
          },
          {
            "in": "query",
            "name": "fiscal_year",
            "description": "Only for the given fiscal year",
            "type": "integer",
            "required": false,
            "x-example": 2017,
            "x-example-value": 2017,
            "x-default-value": 2017
          },
          {
            "in": "query",
            "name": "statement_code",
            "description": "Only of the given statement code",
            "enum": [
              "income_statement",
              "balance_sheet_statement",
              "cash_flow_statement",
              "calculations"
            ],
            "type": "string",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "type",
            "description": "Only of the given type",
            "enum": [
              "QTR",
              "YTD",
              "FY",
              "TTM"
            ],
            "type": "string",
            "required": false,
            "x-example": false
          },
          {
            "in": "query",
            "name": "fiscal_period",
            "description": "The fiscal period",
            "enum": [
              "Q1TTM",
              "Q2TTM",
              "Q3TTM",
              "FY",
              "Q1",
              "Q2",
              "Q3",
              "Q4",
              "Q2YTD",
              "Q3YTD"
            ],
            "type": "string",
            "required": false,
            "x-example": "FY",
            "x-example-value": "FY",
            "x-default-value": "FY"
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Only include fundamentals where covered period is on or after this date.",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "2022-01-01",
            "x-example-value": "2022-01-01",
            "x-default-value": "2022-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Only include fundamentals where covered period is on or before this date.",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "2022-12-01",
            "x-example-value": "2022-12-01",
            "x-default-value": "2022-12-01"
          },
          {
            "in": "query",
            "name": "updated_after",
            "description": "Only include fundamentals where it was updated after this date.",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "2022-12-01",
            "x-example-value": "2022-12-01",
            "x-default-value": "2022-12-01"
          },
          {
            "in": "query",
            "name": "updated_before",
            "description": "Only include fundamentals where it was updated before this date.",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "2022-12-01",
            "x-example-value": "2022-12-01",
            "x-default-value": "2022-12-01"
          },
          {
            "in": "query",
            "name": "template",
            "description": "The financial statement template used by Intrinio to standardize the as reported data",
            "type": "string",
            "enum": [
              "fin",
              "indu"
            ],
            "required": false,
            "x-example": "indu"
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Fundamental"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/fundamentals/lookup/{identifier}/{statement_code}/{fiscal_year}/{fiscal_period}": {
      "get": {
        "tags": [
          "Fundamentals"
        ],
        "summary": "Lookup Fundamental",
        "operationId": "lookup_fundamental",
        "description": "Returns a specific fundamental with unique fundamental ID associated with a particular company, year, period and statement. Useful for pulling the unique fundamental ID and reference data for a specific fundamental.",
        "x-note": "Companies restate prior fiscal periods on each 10-K and 10-Q for comparison with their latest completed period. We specify whether each fundamental returned is restated or reported (meaning the original, non-restated fundamental) with the `type` field located in the fundamental array.",
        "x-history": "Quarterly Fundamentals from 2009 | Yearly Fundamentals from 2007",
        "x-data-type": "End of Day",
        "x-update-freq": "Rolling Basis ~ 20 to 30 Minutes After Filing Accepted by SEC",
        "x-data-source": "SEC",
        "x-group": "Standardized & As-Reported Financial Statement Data",
        "x-index": 1004,
        "x-sample-data-url": "/fundamentals/lookup/AAPL/income_statement/2017/FY",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/standardized-as-reported-financial-statement-data",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Company identifier (Ticker, CIK, LEI, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "company"
            ]
          },
          {
            "in": "path",
            "name": "statement_code",
            "description": "The statement code",
            "type": "string",
            "enum": [
              "income_statement",
              "balance_sheet_statement",
              "cash_flow_statement",
              "calculations"
            ],
            "required": true,
            "x-example": "income_statement",
            "x-example-value": "income_statement",
            "x-default-value": "income_statement"
          },
          {
            "in": "path",
            "name": "fiscal_year",
            "description": "The fiscal year",
            "type": "integer",
            "required": true,
            "x-example": 2017,
            "x-example-value": 2017,
            "x-default-value": 2017
          },
          {
            "in": "path",
            "name": "fiscal_period",
            "description": "The fiscal period",
            "enum": [
              "Q1TTM",
              "Q2TTM",
              "Q3TTM",
              "FY",
              "Q1",
              "Q2",
              "Q3",
              "Q4",
              "Q2YTD",
              "Q3YTD"
            ],
            "type": "string",
            "required": true,
            "x-example": "FY",
            "x-example-value": "FY",
            "x-default-value": "FY"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Fundamental"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/fundamentals/{id}": {
      "get": {
        "tags": [
          "Fundamentals"
        ],
        "summary": "Fundamental by ID",
        "operationId": "get_fundamental_by_id",
        "description": "Returns a specific fundamental associated with a particular unique fundamental ID. Useful for pulling reference data for a specific fundamental.",
        "x-note": "Companies restate prior fiscal periods on each 10-K and 10-Q for comparison with their latest completed period. We specify whether each fundamental returned is restated or reported (meaning the original, non-restated fundamental) with the `type` field located in the fundamental array.",
        "x-history": "Quarterly Fundamentals from 2009 | Yearly Fundamentals from 2007",
        "x-data-type": "End of Day",
        "x-update-freq": "Rolling Basis ~ 20 to 30 Minutes After Filing Accepted by SEC",
        "x-data-source": "SEC",
        "x-additional-comments": "Try using the `Lookup Fundamental` or `All Fundamentals by Filing` endpoints to first pull the unique fundamental ID.",
        "x-group": "Standardized & As-Reported Financial Statement Data",
        "x-index": 1005,
        "x-sample-data-url": "/fundamentals/fun_ge9LlE",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/standardized-as-reported-financial-statement-data",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The Intrinio ID for the Fundamental",
            "type": "string",
            "required": true,
            "x-example": "fun_ge9LlE",
            "x-example-value": "fun_ge9LlE",
            "x-default-value": "fun_ge9LlE"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Fundamental"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/fundamentals/{id}/reported_financials": {
      "get": {
        "tags": [
          "Fundamentals"
        ],
        "summary": "Reported Financials",
        "operationId": "get_fundamental_reported_financials",
        "description": "Returns as-reported financial statement data for income statement, balance sheet, and cash flow statement. Data for income statement and cash flow statement is available on a FY, QTR (Q1, Q2, Q3, Q4), TTM (Q1TTM, Q2TTM, Q3TTM), and YTD (Q2YTD, Q3YTD) basis. Data for the balance sheet is available on a FY or QTR (Q1, Q2, Q3, Q4) basis only due its point-in-time nature.",
        "x-note": "As-reported financial statement data is extracted directly from 10-K and 10-Q (or 20F and 40F where applicable) SEC filings and returned exactly in the format and naming convention in which they were filed by the company.",
        "x-history": "Quarterly Fundamentals from 2009 | Yearly Fundamentals from 2007",
        "x-data-type": "End of Day",
        "x-update-freq": "Rolling Basis ~ 20 to 30 Minutes After Filing Accepted by SEC",
        "x-data-source": "SEC",
        "x-additional-comments": "Try using the `All Fundamentals by Company`, `Lookup Fundamental`, or `All Fundamentals by Filing` endpoints to first pull the unique fundamental ID. | If you prefer not to use the fundamental ID, pass through the unique combination of ticker-statement-year-period instead. | If you need to compare company financial statement data apples to apples, please use the `Standardized Financials` endpoint instead.",
        "x-group": "Standardized & As-Reported Financial Statement Data",
        "x-index": 1008,
        "x-sample-data-url": "/fundamentals/AAPL-income_statement-2018-Q1/reported_financials",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/standardized-as-reported-financial-statement-data",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The Intrinio ID or lookup code (ticker-statement-year-period) for the Fundamental",
            "type": "string",
            "required": true,
            "x-example": "AAPL-income_statement-2018-Q1",
            "x-example-value": "AAPL-income_statement-2018-Q1",
            "x-default-value": "AAPL-income_statement-2018-Q1"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseReportedFinancials"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/fundamentals/{id}/standardized_financials": {
      "get": {
        "tags": [
          "Fundamentals"
        ],
        "summary": "Standardized Financials",
        "operationId": "get_fundamental_standardized_financials",
        "description": "Returns standardized financial statement data for income statement, balance sheet, cash flow statement and over 100 associated calculations for a given company. Data for income statement, cash flow statement, and calculations is available on a FY, QTR (Q1, Q2, Q3, Q4), TTM (Q1TTM, Q2TTM, Q3TTM), and YTD (Q2YTD, Q3YTD) basis. Data for the balance sheet is available on a FY or QTR (Q1, Q2, Q3, Q4) basis only due its point-in-time nature.",
        "x-note": "Due to how differently financial type companies operate and report, we currently offer two distinct standardized templates - one for financial type companies and the other for non-financial type companies (which we broadly call industrials). Most companies are standardized into the industrial template, while banks and other financial type companies are standardized into the financial template.",
        "x-history": "Quarterly Fundamentals from 2009 | Yearly Fundamentals from 2007",
        "x-data-type": "End of Day",
        "x-update-freq": "Rolling Basis ~ 20 to 30 Minutes After Filing Accepted by SEC",
        "x-data-source": "SEC",
        "x-additional-comments": "Try using the `All Fundamentals by Company`, `Lookup Fundamental`, or `All Fundamentals by Filing` endpoints to first pull the unique fundamental ID. | If you prefer not to use the fundamental ID, pass through the unique combination of ticker-statement-year-period instead. | Available statement codes are `income_statement`, `balance_sheet_statement`, `cash_flow_statement` or `calculations`.",
        "x-group": "Standardized & As-Reported Financial Statement Data",
        "x-index": 1007,
        "x-sample-data-url": "/fundamentals/AAPL-income_statement-2018-Q1/standardized_financials",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/standardized-as-reported-financial-statement-data",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The Intrinio ID or lookup code (ticker-statement-year-period) for the Fundamental",
            "type": "string",
            "required": true,
            "x-example": "AAPL-income_statement-2018-Q1",
            "x-example-value": "AAPL-income_statement-2018-Q1",
            "x-default-value": "AAPL-income_statement-2018-Q1"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseStandardizedFinancials"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/fundamentals/{id}/standardized_financials/dimensions/{tag}": {
      "get": {
        "tags": [
          "Fundamentals"
        ],
        "summary": "Standardized Financials Dimensions",
        "operationId": "get_fundamental_standardized_financials_dimensions",
        "description": "Returns as reported dimensionality of a data tag",
        "x-group": "Standardized & As-Reported Financial Statement Data",
        "x-index": 1009,
        "x-sample-data-url": "/fundamentals/AAPL-income_statement-2020-FY/standardized_financials/dimensions/rdexpense",
        "x-sandbox": false,
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The Intrinio ID or lookup code (ticker-statement-year-period) for the Fundamental",
            "type": "string",
            "required": true,
            "x-example": "AAPL-income_statement-2020-FY",
            "x-example-value": "AAPL-income_statement-2020-FY",
            "x-default-value": "AAPL-income_statement-2020-FY"
          },
          {
            "in": "path",
            "name": "tag",
            "description": "An Intrinio data tag ID or code (<a href='https://data.intrinio.com/data-tags'>reference</a>)",
            "type": "string",
            "required": true,
            "x-example": "ceo",
            "x-example-value": "ceo",
            "x-default-value": "ceo",
            "x-lookup-mode": "data_tag"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseStandardizedFinancialsDimensions"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/historical_data/{identifier}/{tag}": {
      "get": {
        "tags": [
          "HistoricalData"
        ],
        "summary": "Historical Data",
        "operationId": "get_historical_data",
        "description": "Returns historical values for the given `tag` and the entity represented by the given `identifier`",
        "x-group": "Generic",
        "x-index": 1005,
        "x-sample-data-url": "/historical_data/AAPL/marketcap",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/generic-fundamentals",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "An identifier for an entity such as a Company, Security, Index, etc (Ticker, FIGI, ISIN, CUSIP, CIK, LEI, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "company"
            ]
          },
          {
            "in": "path",
            "name": "tag",
            "description": "An Intrinio data tag ID or code (<a href='https://data.intrinio.com/data-tags'>reference</a>)",
            "type": "string",
            "required": true,
            "x-example": "marketcap",
            "x-example-value": "marketcap",
            "x-default-value": "marketcap",
            "x-lookup-mode": "data_tag"
          },
          {
            "in": "query",
            "name": "frequency",
            "description": "Return historical data in the given frequency",
            "type": "string",
            "enum": [
              "daily",
              "weekly",
              "monthly",
              "quarterly",
              "yearly"
            ],
            "default": "daily",
            "x-example": "daily",
            "x-available": "true",
            "required": false
          },
          {
            "in": "query",
            "name": "type",
            "type": "string",
            "description": "Filter by type, when applicable",
            "required": false,
            "x-example": "~null",
            "x-available": "true"
          },
          {
            "in": "query",
            "name": "start_date",
            "type": "string",
            "format": "date",
            "required": false,
            "description": "Get historical data on or after this date",
            "x-example": "2015-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "type": "string",
            "description": "Get historical date on or before this date",
            "format": "date",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "sort_order",
            "type": "string",
            "description": "Sort by date `asc` or `desc`",
            "enum": [
              "asc",
              "desc"
            ],
            "default": "desc",
            "required": false,
            "x-example": "desc"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseHistoricalData"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/indices": {
      "get": {
        "tags": [
          "Index"
        ],
        "summary": "All Index Summaries",
        "operationId": "get_all_index_summaries",
        "x-group": "Index Summary",
        "x-index": 1000,
        "x-sample-data-url": "/indices",
        "x-sandbox": false,
        "parameters": [
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseIndices"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/indices/economic": {
      "get": {
        "tags": [
          "Index"
        ],
        "summary": "All Economic Indices",
        "operationId": "get_all_economic_indices",
        "description": "Returns a list of reference data on more than 200,000 economic indices from the Federal Reserve Economic Data (FRED) database.",
        "x-history": "1785 to Present (where applicable)",
        "x-data-type": "End of Day",
        "x-update-freq": "Rolling Basis ~ 15 to 30 Minutes After Posting on the FRED site.",
        "x-data-source": "Federal Reserve Economic Data (FRED)",
        "x-additional-comments": "Useful for building and maintaining an Economic Indices specific database.",
        "x-group": "Economic Data",
        "x-index": 1000,
        "x-sample-data-url": "/indices/economic",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/economic-data",
        "parameters": [
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseEconomicIndices"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/indices/economic/search": {
      "get": {
        "tags": [
          "Index"
        ],
        "summary": "Search Economic Indices",
        "operationId": "search_economic_indices",
        "description": "Search the Federal Reserve Economic Data (FRED) database and return a list of economic indices matching the text query parameter passed through.",
        "x-history": "1785 to Present (where applicable)",
        "x-data-type": "End of Day",
        "x-update-freq": "Rolling Basis ~ 15 to 30 Minutes After Posting on the FRED site.",
        "x-data-source": "Federal Reserve Economic Data (FRED)",
        "x-additional-comments": "Useful for building and maintaining an Economic Indices specific database.",
        "x-index": 1001,
        "x-group": "Economic Data",
        "x-sample-data-url": "/indices/economic/search?query=GDP",
        "x-documentation-url": "https://intrinio.com/docs/economic-data",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "description": "Search query",
            "type": "string",
            "required": true,
            "x-example": "GDP",
            "x-example-value": "GDP",
            "x-default-value": "GDP"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseEconomicIndicesSearch"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/indices/economic/{identifier}": {
      "get": {
        "tags": [
          "Index"
        ],
        "summary": "Lookup Economic Index",
        "operationId": "get_economic_index_by_id",
        "description": "Returns reference data for a specified Federal Reserve Economic Data (FRED) series ID.",
        "x-history": "1785 to Present (where applicable)",
        "x-data-type": "End of Day",
        "x-update-freq": "Rolling Basis ~ 15 to 30 Minutes After Posting on the FRED site.",
        "x-data-source": "Federal Reserve Economic Data (FRED)",
        "x-additional-comments": "Try using the `All Economic Indices` or `Search Economic Indices` endpoint to obtain the FRED series ID.",
        "x-group": "Economic Data",
        "x-index": 1002,
        "x-sample-data-url": "/indices/economic/$GDP",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/economic-data",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "An Index Identifier (symbol, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "$GDP",
            "x-example-value": "$GDP",
            "x-default-value": "$GDP",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "index"
            ]
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EconomicIndex"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/indices/economic/{identifier}/data_point/{tag}/number": {
      "get": {
        "tags": [
          "Index"
        ],
        "summary": "Data Point (Number) for an Economic Index",
        "operationId": "get_economic_index_data_point_number",
        "description": "Returns latest data for a specified Federal Reserve Economic Data (FRED) ID.",
        "x-data-type": "End of Day",
        "x-update-freq": "Rolling Basis ~ 15 to 30 Minutes After Posting on the FRED site.",
        "x-data-source": "Federal Reserve Economic Data (FRED)",
        "x-additional-comments": "Try using the `All Economic Indices` or `Search Economic Indices` endpoint to obtain the FRED series ID.",
        "x-group": "Economic Data",
        "x-index": 1005,
        "x-sample-data-url": "/indices/economic/$GDP/data_point/level/number",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/economic-data",
        "produces": [
          "text/plain; charset=utf-8"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "An Index Identifier (symbol, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "$GDP",
            "x-example-value": "$GDP",
            "x-default-value": "$GDP",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "index"
            ]
          },
          {
            "in": "path",
            "name": "tag",
            "description": "An Intrinio data tag <a href='https://data.intrinio.com/data-tags/economic'>reference</a>",
            "type": "string",
            "required": true,
            "x-example": "level",
            "x-example-value": "level",
            "x-default-value": "level",
            "x-lookup-mode": "data_tag"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "number",
              "description": "The latest numeric value for an identifier/item combination"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        }
      }
    },
    "/indices/economic/{identifier}/data_point/{tag}/text": {
      "get": {
        "tags": [
          "Index"
        ],
        "summary": "Data Point (Text) for an Economic Index",
        "operationId": "get_economic_index_data_point_text",
        "description": "Returns a text value for the given `tag` for the Economic Index with the given `identifier`",
        "x-group": "Economic Data",
        "x-index": 1004,
        "x-sample-data-url": "/indices/economic/$GDP/data_point/level/text",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/economic-data",
        "produces": [
          "text/plain; charset=utf-8"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "An Index Identifier (symbol, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "$GDP",
            "x-example-value": "$GDP",
            "x-default-value": "$GDP",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "index"
            ]
          },
          {
            "in": "path",
            "name": "tag",
            "description": "An Intrinio data tag ID or code-name",
            "type": "string",
            "required": true,
            "x-example": "level",
            "x-example-value": "level",
            "x-default-value": "level",
            "x-lookup-mode": "data_tag"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "string",
              "description": "The latest text value for an identifier/item combination"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        }
      }
    },
    "/indices/economic/{identifier}/historical_data/{tag}": {
      "get": {
        "tags": [
          "Index"
        ],
        "summary": "Historical Data for an Economic Index",
        "operationId": "get_economic_index_historical_data",
        "description": "Returns historical data for a specified Federal Reserve Economic Data (FRED) ID over a period of time.",
        "x-history": "1785 to Present (where applicable)",
        "x-data-type": "End of Day",
        "x-update-freq": "Rolling Basis ~ 15 to 30 Minutes After Posting on the FRED site.",
        "x-data-source": "Federal Reserve Economic Data (FRED)",
        "x-additional-comments": "Try using the `All Economic Indices` or `Search Economic Indices` endpoint to obtain the FRED series ID. | Use macroeconomic insights to enhance microeconomic analyses, sector-level momentum, and correlational research.",
        "x-group": "Economic Data",
        "x-index": 1003,
        "x-sample-data-url": "/indices/economic/$GDP/historical_data/level",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/economic-data",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "An Index Identifier (symbol, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "$GDP",
            "x-example-value": "$GDP",
            "x-default-value": "$GDP",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "index"
            ]
          },
          {
            "in": "path",
            "name": "tag",
            "description": "An Intrinio data tag <a href='https://data.intrinio.com/data-tags/economic'>reference</a>",
            "type": "string",
            "required": true,
            "x-example": "level",
            "x-example-value": "level",
            "x-default-value": "level",
            "x-lookup-mode": "data_tag"
          },
          {
            "in": "query",
            "name": "type",
            "type": "string",
            "description": "Filter by type, when applicable",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "start_date",
            "type": "string",
            "format": "date",
            "required": false,
            "description": "Get historical data on or after this date",
            "x-example": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "type": "string",
            "description": "Get historical data on or before this date",
            "format": "date",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "sort_order",
            "type": "string",
            "description": "Sort by date `asc` or `desc`",
            "enum": [
              "asc",
              "desc"
            ],
            "default": "desc",
            "required": false,
            "x-example": "desc"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseEconomicIndexHistoricalData"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/indices/prices/eod": {
      "get": {
        "tags": [
          "Index"
        ],
        "summary": "All End of Day Index Prices",
        "operationId": "get_all_eod_index_prices",
        "x-group": "Index Prices",
        "x-index": 1000,
        "x-sample-data-url": "/indices/prices/eod",
        "x-sandbox": false,
        "parameters": [
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "start_date",
            "type": "string",
            "format": "date",
            "description": "Limit prices to those on or after this date",
            "required": false,
            "x-example": "~null",
            "x-example-value": "2024-01-01",
            "x-default-value": "2024-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "type": "string",
            "format": "date",
            "description": "Limit prices to those on or before this date",
            "required": false,
            "x-example": "~null",
            "x-example-value": "2024-01-01",
            "x-default-value": "2024-01-01"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseEodIndexPricesAll"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/indices/prices/realtime": {
      "get": {
        "tags": [
          "Index"
        ],
        "summary": "All Realtime Index Prices",
        "operationId": "get_all_realtime_index_prices",
        "x-group": "Index Prices",
        "x-index": 1000,
        "x-sample-data-url": "/indices/prices/realtime",
        "x-sandbox": false,
        "parameters": [
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseRealtimeIndexPrices"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/indices/sic": {
      "get": {
        "tags": [
          "Index"
        ],
        "summary": "All SIC Indices",
        "operationId": "get_all_sic_indices",
        "x-group": "Aggregate Standardized Financial Statement Data by SIC Codes",
        "x-index": 1000,
        "x-sample-data-url": "/indices/sic",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/aggregate-standardized-financial-statement-data-by-sic-codes",
        "parameters": [
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSICIndices"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/indices/sic/search": {
      "get": {
        "tags": [
          "Index"
        ],
        "summary": "Search SIC Indices",
        "operationId": "search_sic_indices",
        "description": "Searches for indices using the text in `query`",
        "x-group": "Aggregate Standardized Financial Statement Data by SIC Codes",
        "x-index": 1001,
        "x-sample-data-url": "/indices/sic/search?query=agriculture",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/aggregate-standardized-financial-statement-data-by-sic-codes",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "description": "Search query",
            "type": "string",
            "required": true,
            "x-example": "agriculture",
            "x-example-value": "agriculture",
            "x-default-value": "agriculture"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSICIndicesSearch"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/indices/sic/{identifier}": {
      "get": {
        "tags": [
          "Index"
        ],
        "summary": "Lookup SIC Index",
        "operationId": "get_sic_index_by_id",
        "x-group": "Aggregate Standardized Financial Statement Data by SIC Codes",
        "x-index": 1002,
        "x-sample-data-url": "/indices/sic/$SIC.2911",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/aggregate-standardized-financial-statement-data-by-sic-codes",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "An Index Identifier (symbol, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "$SIC.2911",
            "x-example-value": "$SIC.2911",
            "x-default-value": "$SIC.2911",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "index"
            ]
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SICIndex"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/indices/sic/{identifier}/data_point/{tag}/number": {
      "get": {
        "tags": [
          "Index"
        ],
        "summary": "Data Point (Number) for an SIC Index",
        "operationId": "get_sic_index_data_point_number",
        "description": "Returns a numeric value for the given `tag` for the SIC Index with the given `identifier`",
        "x-group": "Aggregate Standardized Financial Statement Data by SIC Codes",
        "x-index": 1005,
        "x-sample-data-url": "/indices/sic/$SIC.2911/data_point/marketcap/number",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/aggregate-standardized-financial-statement-data-by-sic-codes",
        "produces": [
          "text/plain; charset=utf-8"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "An Index Identifier (symbol, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "$SIC.2911",
            "x-example-value": "$SIC.2911",
            "x-default-value": "$SIC.2911",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "index"
            ]
          },
          {
            "in": "path",
            "name": "tag",
            "description": "An Intrinio data tag ID or code-name",
            "type": "string",
            "required": true,
            "x-example": "marketcap",
            "x-example-value": "marketcap",
            "x-default-value": "marketcap",
            "x-lookup-mode": "data_tag"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "number",
              "description": "The latest numeric value for an identifier/item combination"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        }
      }
    },
    "/indices/sic/{identifier}/data_point/{tag}/text": {
      "get": {
        "tags": [
          "Index"
        ],
        "summary": "Data Point (Text) for an SIC Index",
        "operationId": "get_sic_index_data_point_text",
        "description": "Returns a text value for the given `tag` for the SIC Index with the given `identifier`",
        "x-group": "Aggregate Standardized Financial Statement Data by SIC Codes",
        "x-index": 1004,
        "x-sample-data-url": "/indices/sic/$SIC.2911/data_point/name/text",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/aggregate-standardized-financial-statement-data-by-sic-codes",
        "produces": [
          "text/plain; charset=utf-8"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "An Index Identifier (symbol, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "$SIC.2911",
            "x-example-value": "$SIC.2911",
            "x-default-value": "$SIC.2911",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "index"
            ]
          },
          {
            "in": "path",
            "name": "tag",
            "description": "An Intrinio data tag ID or code-name",
            "type": "string",
            "required": true,
            "x-example": "marketcap",
            "x-example-value": "marketcap",
            "x-default-value": "marketcap",
            "x-lookup-mode": "data_tag"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "string",
              "description": "The latest text value for an identifier/item combination"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        }
      }
    },
    "/indices/sic/{identifier}/historical_data/{tag}": {
      "get": {
        "tags": [
          "Index"
        ],
        "summary": "Historical Data for an SIC Index",
        "operationId": "get_sic_index_historical_data",
        "description": "Returns historical values for the given `tag` and the SIC Index with the given `identifier`",
        "x-group": "Aggregate Standardized Financial Statement Data by SIC Codes",
        "x-index": 1003,
        "x-sample-data-url": "/indices/sic/$SIC.1/historical_data/marketcap",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/aggregate-standardized-financial-statement-data-by-sic-codes",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "An Index Identifier (symbol, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "$SIC.1",
            "x-example-value": "$SIC.1",
            "x-default-value": "$SIC.1",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "index"
            ]
          },
          {
            "in": "path",
            "name": "tag",
            "description": "An Intrinio data tag ID or code-name",
            "type": "string",
            "required": true,
            "x-example": "marketcap",
            "x-example-value": "marketcap",
            "x-default-value": "marketcap",
            "x-lookup-mode": "data_tag"
          },
          {
            "in": "query",
            "name": "type",
            "type": "string",
            "description": "Filter by type, when applicable",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "start_date",
            "type": "string",
            "format": "date",
            "required": false,
            "description": "Get historical data on or after this date",
            "x-example": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "type": "string",
            "description": "Get historical data on or before this date",
            "format": "date",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "sort_order",
            "type": "string",
            "description": "Sort by date `asc` or `desc`",
            "enum": [
              "asc",
              "desc"
            ],
            "default": "desc",
            "required": false,
            "x-example": "desc"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSICIndexHistoricalData"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/indices/stock_market": {
      "get": {
        "tags": [
          "Index"
        ],
        "summary": "All Stock Market Indices",
        "operationId": "get_all_stock_market_indices",
        "x-group": "Historical End of Day Prices",
        "x-index": 1000,
        "x-sample-data-url": "/indices/stock_market",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/us-historical-end-of-day-prices",
        "parameters": [
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseStockMarketIndices"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/indices/stock_market/search": {
      "get": {
        "tags": [
          "Index"
        ],
        "summary": "Search Stock Market Indices",
        "operationId": "search_stock_markets_indices",
        "description": "Searches for indices using the text in `query`",
        "x-group": "Historical End of Day Index Prices",
        "x-index": 1001,
        "x-sample-data-url": "/indices/stock_market/search?query=dow",
        "x-sandbox": true,
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "description": "Search query",
            "type": "string",
            "required": true,
            "x-example": "dow",
            "x-example-value": "dow",
            "x-default-value": "dow"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseStockMarketIndicesSearch"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/indices/stock_market/{identifier}": {
      "get": {
        "tags": [
          "Index"
        ],
        "summary": "Lookup Stock Market Index",
        "operationId": "get_stock_market_index_by_id",
        "x-group": "Historical End of Day Index Prices",
        "x-index": 1002,
        "x-sample-data-url": "/indices/stock_market/$DJI",
        "x-sandbox": true,
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "An Index Identifier (symbol, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "$DJI",
            "x-example-value": "$DJI",
            "x-default-value": "$DJI",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "stock_exchange"
            ]
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/StockMarketIndex"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/indices/stock_market/{identifier}/data_point/{tag}/number": {
      "get": {
        "tags": [
          "Index"
        ],
        "summary": "Data Point (Number) for Stock Market Index",
        "operationId": "get_stock_market_index_data_point_number",
        "description": "Returns a numeric value for the given `tag` for the Stock Market Index with the given `identifier`",
        "x-group": "Indices",
        "x-index": 1030,
        "x-sample-data-url": "/indices/stock_market/$DJI/data_point/level/number",
        "x-sandbox": true,
        "x-hidden": true,
        "produces": [
          "text/plain; charset=utf-8"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "An Index Identifier (symbol, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "$DJI",
            "x-example-value": "$DJI",
            "x-default-value": "$DJI",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "stock_exchange"
            ]
          },
          {
            "in": "path",
            "name": "tag",
            "description": "An Intrinio data tag ID or code-name",
            "type": "string",
            "required": true,
            "x-example": "level",
            "x-example-value": "level",
            "x-default-value": "level",
            "x-lookup-mode": "data_tag"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "number",
              "description": "The latest numeric value for an identifier/item combination"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        }
      }
    },
    "/indices/stock_market/{identifier}/data_point/{tag}/text": {
      "get": {
        "tags": [
          "Index"
        ],
        "summary": "Data Point (Text) for Stock Market Index",
        "operationId": "get_stock_market_index_data_point_text",
        "description": "Returns a text value for the given `tag` for the Stock Market Index with the given `identifier`",
        "x-group": "Indices",
        "x-index": 1040,
        "x-sample-data-url": "/indices/stock_market/$DJI/data_point/level/text",
        "x-sandbox": true,
        "x-hidden": true,
        "produces": [
          "text/plain; charset=utf-8"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "An Index Identifier (symbol, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "$DJI",
            "x-example-value": "$DJI",
            "x-default-value": "$DJI",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "stock_exchange"
            ]
          },
          {
            "in": "path",
            "name": "tag",
            "description": "An Intrinio data tag ID or code-name",
            "type": "string",
            "required": true,
            "x-example": "level",
            "x-example-value": "level",
            "x-default-value": "level",
            "x-lookup-mode": "data_tag"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "string",
              "description": "The latest text value for an identifier/item combination"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        }
      }
    },
    "/indices/stock_market/{identifier}/historical_data/{tag}": {
      "get": {
        "tags": [
          "Index"
        ],
        "summary": "Historical Data for Stock Market Index",
        "operationId": "get_stock_market_index_historical_data",
        "description": "Returns historical values for the given `tag` and the Stock Market Index with the given `identifier`",
        "x-group": "Historical End of Day Index Prices",
        "x-index": 1003,
        "x-sample-data-url": "/indices/stock_market/$DJI/historical_data/level",
        "x-sandbox": true,
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "An Index Identifier (symbol, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "$DJI",
            "x-example-value": "$DJI",
            "x-default-value": "$DJI",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "stock_exchange"
            ]
          },
          {
            "in": "path",
            "name": "tag",
            "description": "An Intrinio data tag ID or code-name",
            "type": "string",
            "required": true,
            "x-example": "level",
            "x-example-value": "level",
            "x-default-value": "level",
            "x-lookup-mode": "data_tag"
          },
          {
            "in": "query",
            "name": "type",
            "type": "string",
            "description": "Filter by type, when applicable",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "start_date",
            "type": "string",
            "format": "date",
            "required": false,
            "description": "Get historical data on or after this date",
            "x-example": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "type": "string",
            "description": "Get historical data on or before this date",
            "format": "date",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "sort_order",
            "type": "string",
            "description": "Sort by date `asc` or `desc`",
            "enum": [
              "asc",
              "desc"
            ],
            "default": "desc",
            "required": false,
            "x-example": "desc"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseStockMarketIndexHistoricalData"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/indices/{identifier}": {
      "get": {
        "tags": [
          "Index"
        ],
        "summary": "Index Summary By Identifier",
        "operationId": "get_index_summary_by_id",
        "x-group": "Index Summary",
        "x-index": 1000,
        "x-sample-data-url": "/indices/SPX",
        "x-sandbox": false,
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "The index symbol",
            "type": "string",
            "required": true,
            "x-example": "SPX",
            "x-example-value": "SPX",
            "x-default-value": "SPX",
            "x-lookup-mode": "identifier"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseIndex"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/indices/{identifier}/constituents": {
      "get": {
        "tags": [
          "Index"
        ],
        "summary": "Index Constituents By Index Identifier",
        "operationId": "get_index_constituents_by_id",
        "x-group": "Index Prices",
        "x-index": 1000,
        "x-sample-data-url": "/indices/SPX/constituents",
        "x-sandbox": false,
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "The index symbol",
            "type": "string",
            "required": true,
            "x-example": "DJI",
            "x-example-value": "DJI",
            "x-default-value": "DJI",
            "x-lookup-mode": "identifier"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseIndexConstituents"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/indices/{identifier}/eod": {
      "get": {
        "tags": [
          "Index"
        ],
        "summary": "End of Day Index Prices By Identifier",
        "operationId": "get_eod_index_price_by_id",
        "x-group": "Index Prices",
        "x-index": 1000,
        "x-sample-data-url": "/indices/SPX/eod",
        "x-sandbox": false,
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "The index symbol",
            "type": "string",
            "required": true,
            "x-example": "SPX",
            "x-example-value": "SPX",
            "x-default-value": "SPX",
            "x-lookup-mode": "identifier"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "start_date",
            "type": "string",
            "format": "date",
            "description": "Limit prices to those on or after this date",
            "required": false,
            "x-example": "~null",
            "x-example-value": "2024-01-01",
            "x-default-value": "2024-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "type": "string",
            "format": "date",
            "description": "Limit prices to those on or before this date",
            "required": false,
            "x-example": "~null",
            "x-example-value": "2024-01-01",
            "x-default-value": "2024-01-01"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseEodIndexPrices"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/indices/{identifier}/intervals": {
      "get": {
        "tags": [
          "Index"
        ],
        "summary": "Index Intervals",
        "description": "Returns a list of interval data points for a specified index, including open, close, high, low, volume, and average price. Intervals are available in 60-minute, 30-minute, 15-minute, 10-minute, 5-minute, and 1-minute increments.",
        "operationId": "get_index_intervals",
        "x-group": "Index Prices",
        "x-history": "N/A",
        "x-data-type": "Realtime | Historical",
        "x-update-freq": "Intraday",
        "x-index": 1000,
        "x-sample-data-url": "/indices/SPX/intervals",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/indices-intervals",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "The index identifier",
            "type": "string",
            "required": true,
            "x-example": "SPX",
            "x-example-value": "SPX"
          },
          {
            "in": "query",
            "name": "interval_size",
            "description": "The interval size to return in minutes (m) or hour (h).",
            "type": "string",
            "enum": [
              "1m",
              "5m",
              "10m",
              "15m",
              "30m",
              "60m",
              "1h"
            ],
            "required": true,
            "default": "5m",
            "x-example": "15m",
            "x-example-value": "60m"
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return intervals starting at the specified date",
            "type": "string",
            "format": "date",
            "x-example": "2023-01-01",
            "x-example-value": "2023-01-01",
            "required": false
          },
          {
            "in": "query",
            "name": "start_time",
            "description": "Return intervals starting at the specified time on the `start_date` (24-hour in 'hh:mm:ss' format)",
            "type": "string",
            "x-example": 33300,
            "x-example-value": 33300,
            "required": false
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return intervals stopping at the specified date",
            "type": "string",
            "format": "date",
            "x-example": "2023-02-01",
            "x-example-value": "2023-02-01",
            "required": false
          },
          {
            "in": "query",
            "name": "end_time",
            "description": "Return intervals stopping at the specified time on the `end_date` (24-hour in 'hh:mm:ss' format)",
            "type": "string",
            "x-example": 33300,
            "x-example-value": 33300,
            "required": false
          },
          {
            "in": "query",
            "name": "timezone",
            "type": "string",
            "description": "Interprets the input times in this time zone, as well as returns times in this timezone.",
            "required": false,
            "enum": [
              "Africa/Algiers",
              "Africa/Cairo",
              "Africa/Casablanca",
              "Africa/Harare",
              "Africa/Johannesburg",
              "Africa/Monrovia",
              "Africa/Nairobi",
              "America/Argentina/Buenos_Aires",
              "America/Bogota",
              "America/Caracas",
              "America/Chicago",
              "America/Chihuahua",
              "America/Denver",
              "America/Godthab",
              "America/Guatemala",
              "America/Guyana",
              "America/Halifax",
              "America/Indiana/Indianapolis",
              "America/Juneau",
              "America/La_Paz",
              "America/Lima",
              "America/Lima",
              "America/Los_Angeles",
              "America/Mazatlan",
              "America/Mexico_City",
              "America/Mexico_City",
              "America/Monterrey",
              "America/Montevideo",
              "America/New_York",
              "America/Phoenix",
              "America/Regina",
              "America/Santiago",
              "America/Sao_Paulo",
              "America/St_Johns",
              "America/Tijuana",
              "Asia/Almaty",
              "Asia/Baghdad",
              "Asia/Baku",
              "Asia/Bangkok",
              "Asia/Bangkok",
              "Asia/Chongqing",
              "Asia/Colombo",
              "Asia/Dhaka",
              "Asia/Dhaka",
              "Asia/Hong_Kong",
              "Asia/Irkutsk",
              "Asia/Jakarta",
              "Asia/Jerusalem",
              "Asia/Kabul",
              "Asia/Kamchatka",
              "Asia/Karachi",
              "Asia/Karachi",
              "Asia/Kathmandu",
              "Asia/Kolkata",
              "Asia/Kolkata",
              "Asia/Kolkata",
              "Asia/Kolkata",
              "Asia/Krasnoyarsk",
              "Asia/Kuala_Lumpur",
              "Asia/Kuwait",
              "Asia/Magadan",
              "Asia/Muscat",
              "Asia/Muscat",
              "Asia/Novosibirsk",
              "Asia/Rangoon",
              "Asia/Riyadh",
              "Asia/Seoul",
              "Asia/Shanghai",
              "Asia/Singapore",
              "Asia/Srednekolymsk",
              "Asia/Taipei",
              "Asia/Tashkent",
              "Asia/Tbilisi",
              "Asia/Tehran",
              "Asia/Tokyo",
              "Asia/Tokyo",
              "Asia/Tokyo",
              "Asia/Ulaanbaatar",
              "Asia/Urumqi",
              "Asia/Vladivostok",
              "Asia/Yakutsk",
              "Asia/Yekaterinburg",
              "Asia/Yerevan",
              "Atlantic/Azores",
              "Atlantic/Cape_Verde",
              "Atlantic/South_Georgia",
              "Australia/Adelaide",
              "Australia/Brisbane",
              "Australia/Darwin",
              "Australia/Hobart",
              "Australia/Melbourne",
              "Australia/Melbourne",
              "Australia/Perth",
              "Australia/Sydney",
              "Etc/UTC",
              "UTC",
              "Europe/Amsterdam",
              "Europe/Athens",
              "Europe/Belgrade",
              "Europe/Berlin",
              "Europe/Berlin",
              "Europe/Bratislava",
              "Europe/Brussels",
              "Europe/Bucharest",
              "Europe/Budapest",
              "Europe/Copenhagen",
              "Europe/Dublin",
              "Europe/Helsinki",
              "Europe/Istanbul",
              "Europe/Kaliningrad",
              "Europe/Kiev",
              "Europe/Lisbon",
              "Europe/Ljubljana",
              "Europe/London",
              "Europe/London",
              "Europe/Madrid",
              "Europe/Minsk",
              "Europe/Moscow",
              "Europe/Moscow",
              "Europe/Paris",
              "Europe/Prague",
              "Europe/Riga",
              "Europe/Rome",
              "Europe/Samara",
              "Europe/Sarajevo",
              "Europe/Skopje",
              "Europe/Sofia",
              "Europe/Stockholm",
              "Europe/Tallinn",
              "Europe/Vienna",
              "Europe/Vilnius",
              "Europe/Volgograd",
              "Europe/Warsaw",
              "Europe/Zagreb",
              "Pacific/Apia",
              "Pacific/Auckland",
              "Pacific/Auckland",
              "Pacific/Chatham",
              "Pacific/Fakaofo",
              "Pacific/Fiji",
              "Pacific/Guadalcanal",
              "Pacific/Guam",
              "Pacific/Honolulu",
              "Pacific/Majuro",
              "Pacific/Midway",
              "Pacific/Midway",
              "Pacific/Noumea",
              "Pacific/Pago_Pago",
              "Pacific/Port_Moresby",
              "Pacific/Tongatapu"
            ],
            "default": "UTC",
            "x-example": "UTC",
            "x-example-value": "UTC",
            "x-default-value": "UTC"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return per page.",
            "default": 100,
            "x-example": 100
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseIndexIntervals"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json",
          "application/json"
        ]
      }
    },
    "/indices/{identifier}/realtime": {
      "get": {
        "tags": [
          "Index"
        ],
        "summary": "Realtime Index Price By Identifier",
        "description": "Returns the realtime price for an index.",
        "operationId": "get_realtime_index_price_by_id",
        "x-group": "Index Prices",
        "x-index": 1000,
        "x-sample-data-url": "/indices/SPX/realtime",
        "x-sandbox": false,
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "The index symbol",
            "type": "string",
            "required": true,
            "x-example": "SPX",
            "x-example-value": "SPX",
            "x-default-value": "SPX",
            "x-lookup-mode": "identifier"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RealtimeIndexPrice"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/insider_transaction_filings": {
      "get": {
        "tags": [
          "Insider Transaction Filings"
        ],
        "summary": "All Insider Transactions Filings",
        "operationId": "get_all_insider_transaction_filings",
        "description": "Returns all insider transactions filings fitting the optional supplied start and end date.",
        "x-group": "Insider & Institutional Holdings Data",
        "x-index": 1003,
        "x-sample-data-url": "/insider_transaction_filings?start_date=2019-01-01",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/insider-institutional-holdings",
        "parameters": [
          {
            "in": "query",
            "name": "start_date",
            "description": "Filed on or after the given date",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "2015-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Filed before or after the given date",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "sort_by",
            "description": "The field to sort by.  Default is 'filing_date'.  Valid values are - 'filing_date', 'updated_on'.",
            "type": "string",
            "required": false,
            "x-example": "updated_on"
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseOwnerInsiderTransactionFilings"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/market/status": {
      "get": {
        "tags": [
          "Market"
        ],
        "summary": "Market Status",
        "operationId": "get_market_status",
        "description": "Returns the market status.",
        "x-history": "N/A",
        "x-data-type": "Realtime",
        "x-update-freq": "Intraday",
        "x-data-source": "NYSE",
        "x-additional-comments": null,
        "x-group": "Reference & Metadata",
        "x-index": 1010,
        "x-sample-data-url": "/market/status",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/get_market_status",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/MarketStatusResult"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/municipalities": {
      "get": {
        "tags": [
          "Municipality"
        ],
        "summary": "All Municipalities",
        "description": "Returns all Municipalities. When parameters are specified, returns matching municipalities.",
        "operationId": "get_all_municipalities",
        "x-group": "Municipalities",
        "x-index": 1000,
        "x-sample-data-url": "/municipalities",
        "x-sandbox": false,
        "x-hidden": true,
        "parameters": [
          {
            "in": "query",
            "name": "has_financials",
            "description": "Return municipalities with financials",
            "type": "boolean",
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "government_name",
            "description": "Return municipalities with a government name matching the given query",
            "type": "string",
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "government_type",
            "description": "Return municipalities with the given government type",
            "type": "string",
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "area_name",
            "description": "Return municipalities with an area name matching the given query",
            "type": "string",
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "area_type",
            "description": "Return municipalities with the given area type",
            "enum": [
              "Borough",
              "Census Borough",
              "Census County",
              "Census Division",
              "Census Parish",
              "City",
              "City And County",
              "County",
              "Municipality",
              "Parish"
            ],
            "type": "string",
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "city",
            "description": "Return municipalities in the given city",
            "type": "string",
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "state",
            "description": "Return municipalities in the given state",
            "type": "string",
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "zipcode",
            "description": "Return municipalities in the given zipcode",
            "type": "number",
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "population_greater_than",
            "description": "Return municipalities with a population greater than the given number",
            "type": "number",
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "population_less_than",
            "description": "Return municipalities with a population less than the given number",
            "type": "number",
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "enrollment_greater_than",
            "description": "Return municipalities with an enrollment greater than the given number",
            "type": "number",
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "enrollment_less_than",
            "description": "Return municipalities with an enrollment less than the given number",
            "type": "number",
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseMunicipalities"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/municipalities/{id}": {
      "get": {
        "tags": [
          "Municipality"
        ],
        "summary": "Municipality by ID",
        "operationId": "get_municipality_by_id",
        "description": "Returns the Municipality with the given ID",
        "x-sample-data-url": "/municipalities/mun_Xn7x4z",
        "x-sandbox": false,
        "x-hidden": true,
        "x-group": "Municipalities",
        "x-index": 1100,
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "An Intrinio ID of a Municipality",
            "type": "string",
            "required": true,
            "x-example": "mun_Xn7x4z",
            "x-example-value": "mun_Xn7x4z",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "municipality"
            ]
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Municipality"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/municipalities/{id}/financials": {
      "get": {
        "tags": [
          "Municipality"
        ],
        "summary": "Financials for a Municipality",
        "operationId": "get_municipality_financials",
        "description": "Returns financial statement data for the Municipality with the given ID",
        "x-group": "Municipalities",
        "x-index": 1200,
        "x-sample-data-url": "/municipalities/mun_Xn7x4z/financials",
        "x-sandbox": false,
        "x-hidden": true,
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "An Intrinio ID of a Municipality",
            "type": "string",
            "required": true,
            "x-example": "mun_Xn7x4z",
            "x-example-value": "mun_Xn7x4z",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "municipality"
            ]
          },
          {
            "in": "query",
            "name": "fiscal_year",
            "description": "Return financials for the given fiscal year",
            "type": "number",
            "x-example": 2017,
            "x-example-value": 2017
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseMunicipalitiyFinancials"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/options/aggregates": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Total open interest and volume aggregated by ticker",
        "operationId": "get_option_aggregates",
        "description": "Returns total open interest and volume by ticker",
        "x-data-type": "Realtime | 15-Min Delayed",
        "x-update-freq": "Intraday",
        "x-data-source": "Options Reporting and Authority (OPRA) | Office of the Comptroller of the Currency (OCC)",
        "x-group": "Options Real-Time",
        "x-index": 1011,
        "x-sample-data-url": "/options/aggregates",
        "x-sandbox": false,
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Return aggregated data for this date",
            "type": "date",
            "x-example": "2024-04-24",
            "required": false
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseOptionsAggregates"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/options/chain/{symbol}/{expiration}": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Options Chain",
        "operationId": "get_options_chain",
        "description": "Returns a list of the historical end-of-day top of the order book size and premium (bid / ask), the latest trade size and premium as well as the greeks and implied volatility for all option contracts currently associated with the option chain.  Available via a 3rd party, contact sales for a trial.",
        "x-history": "2008 to Present | Historical Data is sold by the Year",
        "x-data-type": "End of Day",
        "x-update-freq": "1AM EST Daily",
        "x-data-source": "Options Reporting and Authority (OPRA)",
        "x-additional-comments": "Try using the `Options Symbols` and `Options Symbol Expiration` endpoints to explore the universe of available option chain data. | Utilize the wide variety of query parameters available with this endpoint to filter the data for your applications specifications. For example the in-the-money, out-of-the-money, and near-the-money query parameters are useful for platforms looking to provide quick and easy filtering to their end users.",
        "x-group": "Options Historical End of Day (Trade Alert)",
        "x-index": 1003,
        "x-sample-data-url": "/options/chain/MSFT/2019-04-05",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/us-historical-end-of-day-options-prices",
        "parameters": [
          {
            "in": "path",
            "name": "symbol",
            "description": "The option symbol, corresponding to the underlying security.",
            "type": "string",
            "required": true,
            "x-example": "MSFT",
            "x-example-value": "MSFT",
            "x-default-value": "MSFT",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "path",
            "name": "expiration",
            "description": "The expiration date of the options contract",
            "type": "string",
            "required": true,
            "x-example": "2019-04-05",
            "x-example-value": "2019-04-05",
            "x-default-value": "2019-04-05"
          },
          {
            "in": "query",
            "name": "date",
            "description": "The date of the option price. Returns option prices on this date.",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "~null",
            "x-example-value": "2019-04-05"
          },
          {
            "in": "query",
            "name": "type",
            "description": "The option contract type.",
            "type": "string",
            "enum": [
              "call",
              "put"
            ],
            "x-example": "~null",
            "x-example-value": "put",
            "required": false
          },
          {
            "in": "query",
            "name": "strike",
            "description": "The strike price of the option contract. This will return options contracts with strike price equal to this price.",
            "type": "number",
            "x-example": "~null",
            "x-example-value": 170,
            "required": false,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "strike_greater_than",
            "description": "The strike price of the option contract. This will return options contracts with strike prices greater than this price.",
            "type": "number",
            "x-example": "~null",
            "x-example-value": 190,
            "required": false,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "strike_less_than",
            "description": "The strike price of the option contract. This will return options contracts with strike prices less than this price.",
            "type": "number",
            "x-example": "~null",
            "x-example-value": 150,
            "required": false,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "moneyness",
            "description": "The moneyness of the options contracts to return. 'all' will return all options contracts. 'in_the_money' will return options contracts that are in the money (call options with strike prices below the current price, put options with strike prices above the current price). 'out_of_they_money' will return options contracts that are out of the money (call options with strike prices above the current price, put options with strike prices below the current price). 'near_the_money' will return options contracts that are $0.50 or less away from being in the money.",
            "type": "string",
            "enum": [
              "all",
              "in_the_money",
              "out_of_the_money",
              "near_the_money"
            ],
            "x-example": "~null",
            "x-example-value": "in_the_money",
            "required": false
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": "~null"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseOptionsChain"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/options/chain/{symbol}/{expiration}/eod": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Options Chain EOD",
        "operationId": "get_options_chain_eod",
        "description": "Returns all EOD options contracts and their prices for the given symbol and expiration date.",
        "x-group": "Options Historical End of Day (Intrinio)",
        "x-index": 1005,
        "x-sample-data-url": "/options/chain/AAPL/2023-01-20/eod",
        "x-sandbox": false,
        "parameters": [
          {
            "in": "path",
            "name": "symbol",
            "description": "The option symbol, corresponding to the underlying security.",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "path",
            "name": "expiration",
            "description": "The expiration date of the options contract",
            "type": "string",
            "required": true,
            "x-example": "2023-01-20",
            "x-example-value": "2023-01-20",
            "x-default-value": "2023-01-20"
          },
          {
            "in": "query",
            "name": "type",
            "description": "The option contract type.",
            "type": "string",
            "enum": [
              "call",
              "put"
            ],
            "x-example": "~null",
            "x-example-value": "put",
            "required": false
          },
          {
            "in": "query",
            "name": "strike",
            "description": "The strike price of the option contract. This will return options contracts with strike price equal to this price.",
            "type": "number",
            "x-example": "~null",
            "x-example-value": 170,
            "required": false,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "strike_greater_than",
            "description": "The strike price of the option contract. This will return options contracts with strike prices greater than this price.",
            "type": "number",
            "x-example": "~null",
            "x-example-value": 190,
            "required": false,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "strike_less_than",
            "description": "The strike price of the option contract. This will return options contracts with strike prices less than this price.",
            "type": "number",
            "x-example": "~null",
            "x-example-value": 150,
            "required": false,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "date",
            "description": "The date to retrieve prices for",
            "type": "string",
            "format": "date",
            "x-example": "~null",
            "x-example-value": "2022-04-01",
            "required": false,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "include_related_symbols",
            "description": "Include related symbols that end in a 1 or 2 because of a corporate action.",
            "type": "boolean",
            "required": false,
            "x-example": false,
            "x-example-value": false,
            "x-default-value": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseOptionsChainEod"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/options/chain/{symbol}/{expiration}/realtime": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Options Chain Realtime",
        "operationId": "get_options_chain_realtime",
        "description": "Returns a list of the latest National Best Bid & Offer (NBBO) top of the order book size and premium (bid / ask), the latest trade size and premium as well as the greeks and implied volatility for all option contracts currently associated with the option chain.",
        "x-history": "N/A",
        "x-data-type": "Realtime | 15-Min Delayed",
        "x-update-freq": "Intraday",
        "x-data-source": "Options Reporting and Authority (OPRA) | Office of the Comptroller of the Currency (OCC)",
        "x-additional-comments": "Try using the `Options Symbols` and `Options Symbol Expirations` endpoints to explore the universe of available option chain data. | Utilize the wide variety of query parameters available with this endpoint to filter the data for your applications specifications. For example the in-the-money, out-of-the-money, and near-the-money query parameters are useful for platforms looking to provide quick and easy filtering to their end users.",
        "x-group": "Options Real-Time",
        "x-index": 1001,
        "x-sample-data-url": "/options/chain/MSFT/2023-01-20/realtime",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/us-real-time-delayed-options-prices",
        "parameters": [
          {
            "in": "path",
            "name": "symbol",
            "description": "The option symbol, corresponding to the underlying security.",
            "type": "string",
            "required": true,
            "x-example": "MSFT",
            "x-example-value": "MSFT",
            "x-default-value": "MSFT",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "path",
            "name": "expiration",
            "description": "The expiration date of the options contract",
            "type": "string",
            "required": true,
            "x-example": "2023-01-20",
            "x-example-value": "2023-01-20",
            "x-default-value": "2023-01-20"
          },
          {
            "in": "query",
            "name": "source",
            "description": "Realtime or 15-minute delayed contracts.",
            "type": "string",
            "enum": [
              "realtime",
              "delayed"
            ],
            "x-example": "~null",
            "x-example-value": "realtime",
            "required": false
          },
          {
            "in": "query",
            "name": "type",
            "description": "The option contract type.",
            "type": "string",
            "enum": [
              "call",
              "put"
            ],
            "x-example": "~null",
            "x-example-value": "put",
            "required": false
          },
          {
            "in": "query",
            "name": "strike",
            "description": "The strike price of the option contract. This will return options contracts with strike price equal to this price.",
            "type": "number",
            "x-example": "~null",
            "x-example-value": 170,
            "required": false,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "strike_greater_than",
            "description": "The strike price of the option contract. This will return options contracts with strike prices greater than this price.",
            "type": "number",
            "x-example": "~null",
            "x-example-value": 190,
            "required": false,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "strike_less_than",
            "description": "The strike price of the option contract. This will return options contracts with strike prices less than this price.",
            "type": "number",
            "x-example": "~null",
            "x-example-value": 150,
            "required": false,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "volume_greater_than",
            "description": "The volume of the option contract. This will return options contracts with volumes greater than this amount.",
            "type": "number",
            "x-example": "~null",
            "x-example-value": 2000,
            "required": false,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "volume_less_than",
            "description": "The volume of the option contract. This will return options contracts with volumes less than this amout.",
            "type": "number",
            "x-example": "~null",
            "x-example-value": 2000,
            "required": false,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "open_interest_greater_than",
            "description": "The open interest of the option contract. This will return options contracts with open interest greater than this amount.",
            "type": "number",
            "x-example": "~null",
            "x-example-value": 2000,
            "required": false,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "open_interest_less_than",
            "description": "The open interest of the option contract. This will return options contracts with open interest less than this amount.",
            "type": "number",
            "x-example": "~null",
            "x-example-value": 2000,
            "required": false,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "moneyness",
            "description": "The moneyness of the options contracts to return. 'all' will return all options contracts. 'in_the_money' will return options contracts that are in the money (call options with strike prices below the current price, put options with strike prices above the current price). 'out_of_they_money' will return options contracts that are out of the money (call options with strike prices above the current price, put options with strike prices below the current price). 'near_the_money' will return options contracts that are $0.50 or less away from being in the money.  Requires subscription to realtime stock price data.",
            "type": "string",
            "enum": [
              "all",
              "in_the_money",
              "out_of_the_money",
              "near_the_money"
            ],
            "x-example": "~null",
            "x-example-value": "in_the_money",
            "required": false
          },
          {
            "in": "query",
            "name": "stock_price_source",
            "description": "Source for underlying price for calculating Greeks.",
            "type": "string",
            "enum": [
              "iex",
              "delayed_sip",
              "utp_delayed",
              "otc_delayed",
              "cta_a_delayed",
              "cta_b_delayed",
              "nasdaq_basic",
              "cboe_one_delayed",
              "iex_delayed"
            ],
            "x-example": "~null",
            "x-example-value": "iex",
            "required": false
          },
          {
            "in": "query",
            "name": "model",
            "description": "Model for calculating Greek values. Default is black_scholes.",
            "type": "string",
            "enum": [
              "black_scholes",
              "bjerk"
            ],
            "x-example": "~null",
            "x-example-value": "black_scholes",
            "required": false
          },
          {
            "in": "query",
            "name": "show_extended_price",
            "description": "Whether to include open close high low type fields.",
            "type": "boolean",
            "x-example": "~null",
            "x-example-value": false,
            "required": false
          },
          {
            "in": "query",
            "name": "include_related_symbols",
            "description": "Include related symbols that end in a 1 or 2 because of a corporate action.",
            "type": "boolean",
            "required": false,
            "x-example": false,
            "x-example-value": false,
            "x-default-value": false
          },
          {
            "in": "query",
            "name": "show_stats",
            "description": "Whether to include Greek calculations or not.",
            "type": "boolean",
            "x-example": "~null",
            "x-example-value": false,
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseOptionsChainRealtime"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/options/expirations/{symbol}": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Options Expirations",
        "x-group": "Options Historical End of Day (Trade Alert)",
        "operationId": "get_options_expirations",
        "description": "Returns a list of all current and upcoming option contract expiration dates for a particular symbol.  Available via a 3rd party, contact sales for a trial.",
        "x-note": "Options with a leading or trailing integer are no longer optionable securities.",
        "x-history": "N/A",
        "x-data-type": "End of Day",
        "x-update-freq": "12PM UTC Daily",
        "x-data-source": "Options Reporting and Authority (OPRA)",
        "x-additional-comments": "Useful endpoint to populate a dropdown menu for option expirations as well as to loop through and retrieve Real-Time or 15-Minute Delayed Option Chain Pricing Data for a particular symbol.",
        "x-index": 1001,
        "x-sample-data-url": "/options/expirations/MSFT",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/us-historical-options-prices-eod-trade-alert",
        "parameters": [
          {
            "in": "path",
            "name": "symbol",
            "description": "The option symbol, corresponding to the underlying security.",
            "type": "string",
            "required": true,
            "x-example": "MSFT",
            "x-example-value": "MSFT",
            "x-default-value": "MSFT",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "after",
            "description": "Return option contract expiration dates after this date.",
            "type": "string",
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01",
            "required": false
          },
          {
            "in": "query",
            "name": "before",
            "description": "Return option contract expiration dates before this date.",
            "type": "string",
            "x-example": "2019-12-31",
            "x-example-value": "2019-12-31",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseOptionsExpirations"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/options/expirations/{symbol}/eod": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Options Expirations",
        "x-group": "Options Historical End of Day (Intrinio)",
        "operationId": "get_options_expirations_eod",
        "description": "Returns a list of all current and upcoming option contract expiration dates for a particular symbol.",
        "x-note": "Options with a leading or trailing integer are no longer optionable securities.",
        "x-history": "N/A",
        "x-data-type": "End of Day",
        "x-update-freq": "12PM UTC Daily",
        "x-data-source": "Options Reporting and Authority (OPRA)",
        "x-additional-comments": "Useful endpoint to populate a dropdown menu for option expirations as well as to loop through and retrieve Real-Time or 15-Minute Delayed Option Chain Pricing Data for a particular symbol.",
        "x-index": 1004,
        "x-sample-data-url": "/options/expirations/MSFT/eod",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/us-historical-options-prices-eod",
        "parameters": [
          {
            "in": "path",
            "name": "symbol",
            "description": "The option symbol, corresponding to the underlying security.",
            "type": "string",
            "required": true,
            "x-example": "MSFT",
            "x-example-value": "MSFT",
            "x-default-value": "MSFT",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "after",
            "description": "Return option contract expiration dates after this date.",
            "type": "string",
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01",
            "required": false
          },
          {
            "in": "query",
            "name": "before",
            "description": "Return option contract expiration dates before this date.",
            "type": "string",
            "x-example": "2019-12-31",
            "x-example-value": "2019-12-31",
            "required": false
          },
          {
            "in": "query",
            "name": "include_related_symbols",
            "description": "Include related symbols that end in a 1 or 2 because of a corporate action.",
            "type": "boolean",
            "required": false,
            "x-example": false,
            "x-example-value": false,
            "x-default-value": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseOptionsExpirations"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/options/expirations/{symbol}/realtime": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Options Expirations",
        "x-group": "Options Real-Time",
        "operationId": "get_option_expirations_realtime",
        "description": "Returns a list of all current and upcoming option contract expiration dates for a particular symbol.",
        "x-note": "Options with a leading or trailing integer are no longer optionable securities.",
        "x-history": "N/A",
        "x-data-type": "Realtime",
        "x-data-source": "Options Reporting and Authority (OPRA)",
        "x-additional-comments": "Useful endpoint to populate a dropdown menu for option expirations as well as to loop through and retrieve Real-Time or 15-Minute Delayed Option Chain Pricing Data for a particular symbol.",
        "x-index": 1004,
        "x-sample-data-url": "/options/expirations/MSFT/realtime",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/us-real-time-delayed-options-prices",
        "parameters": [
          {
            "in": "path",
            "name": "symbol",
            "description": "The option symbol, corresponding to the underlying security.",
            "type": "string",
            "required": true,
            "x-example": "MSFT",
            "x-example-value": "MSFT",
            "x-default-value": "MSFT",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "after",
            "description": "Return option contract expiration dates after this date.",
            "type": "string",
            "x-example": "2022-01-01",
            "x-example-value": "2022-01-01",
            "required": false
          },
          {
            "in": "query",
            "name": "before",
            "description": "Return option contract expiration dates before this date.",
            "type": "string",
            "x-example": "2023-04-01",
            "x-example-value": "2023-04-01",
            "required": false
          },
          {
            "in": "query",
            "name": "source",
            "description": "Realtime or 15-minute delayed contracts.",
            "type": "string",
            "enum": [
              "realtime",
              "delayed"
            ],
            "x-example": "~null",
            "x-example-value": "realtime",
            "required": false
          },
          {
            "in": "query",
            "name": "include_related_symbols",
            "description": "Include related symbols that end in a 1 or 2 because of a corporate action.",
            "type": "boolean",
            "required": false,
            "x-example": false,
            "x-example-value": false,
            "x-default-value": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseOptionsExpirations"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/options/greeks/by_ticker/{identifier}/realtime": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Options Realtime Greeks & Derived Price by Ticker",
        "description": "Retrieves realtime options greeks data for all contracts of a given ticker symbol",
        "operationId": "get_options_greeks_by_ticker",
        "x-note": null,
        "x-history": "N/A",
        "x-data-type": "Realtime | 15-Min Delayed",
        "x-update-freq": "Intraday",
        "x-data-source": "Options Reporting and Authority (OPRA)",
        "x-additional-comments": "The calculated greek data points for all contracts within a ticker, with a derived synthesized underlying price.",
        "x-group": "Options Real-Time",
        "x-index": 1007,
        "x-sample-data-url": "/options/greeks/by_ticker/MSFT/realtime",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/get_options_greeks_by_ticker",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ticker symbol to get options greeks for"
          },
          {
            "name": "source",
            "in": "query",
            "type": "string",
            "enum": [
              "realtime",
              "delayed"
            ],
            "description": "The data source to use for options data"
          },
          {
            "name": "model",
            "in": "query",
            "type": "string",
            "enum": [
              "black_scholes",
              "bjerk"
            ],
            "default": "black_scholes",
            "description": "The options pricing model to use for greeks calculations"
          },
          {
            "name": "iv_mode",
            "in": "query",
            "type": "string",
            "enum": [
              "out_of_the_money"
            ],
            "description": "The implied volatility calculation mode"
          },
          {
            "name": "stock_price_source",
            "in": "query",
            "type": "string",
            "description": "The data source to use for underlying stock prices",
            "enum": [
              "iex",
              "nasdaq_basic",
              "nasdaq_basic_last_sale",
              "utp_delayed",
              "cta_a_delayed",
              "cta_b_delayed",
              "otc_delayed",
              "delayed_sip",
              "iex_delayed",
              "cboe_one_delayed"
            ]
          },
          {
            "name": "expiration_start_date",
            "in": "query",
            "type": "string",
            "format": "date",
            "description": "Filter options by expiration date (start)"
          },
          {
            "name": "expiration_end_date",
            "in": "query",
            "type": "string",
            "format": "date",
            "description": "Filter options by expiration date (end)"
          },
          {
            "name": "strike",
            "in": "query",
            "type": "number",
            "format": "float",
            "description": "Filter options by strike price"
          },
          {
            "name": "strike_greater_than",
            "in": "query",
            "type": "number",
            "format": "float",
            "description": "Filter options by minimum strike price"
          },
          {
            "name": "strike_less_than",
            "in": "query",
            "type": "number",
            "format": "float",
            "description": "Filter options by maximum strike price"
          },
          {
            "name": "page_size",
            "in": "query",
            "type": "integer",
            "default": 250,
            "maximum": 2500,
            "description": "Number of results to return per page"
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ApiResponseOptionsGreeksByTickerRealtime"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "No matching contracts found"
          },
          "401": {
            "description": "Unauthorized."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/options/greeks/{contract}/realtime": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Option Greeks & Derived Price by Contract",
        "description": "Retrieves realtime options greeks data for a specific options contract",
        "operationId": "get_options_greeks_by_contract",
        "x-note": null,
        "x-history": "N/A",
        "x-data-type": "Realtime | 15-Min Delayed",
        "x-update-freq": "Intraday",
        "x-data-source": "Options Reporting and Authority (OPRA)",
        "x-additional-comments": "The calculated greek data points for a contract, with a derived synthesized underlying price.",
        "x-group": "Options Real-Time",
        "x-index": 1007,
        "x-sample-data-url": "/options/greeks/MSFT__190405C00118000",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/get_options_greeks_by_contract",
        "parameters": [
          {
            "name": "contract",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The options contract identifier"
          },
          {
            "name": "source",
            "in": "query",
            "type": "string",
            "enum": [
              "realtime",
              "delayed"
            ],
            "description": "The data source to use for options data"
          },
          {
            "name": "model",
            "in": "query",
            "type": "string",
            "enum": [
              "black_scholes",
              "bjerk"
            ],
            "default": "black_scholes",
            "description": "The options pricing model to use for greeks calculations"
          },
          {
            "name": "iv_mode",
            "in": "query",
            "type": "string",
            "enum": [
              "out_of_the_money"
            ],
            "description": "The implied volatility calculation mode"
          },
          {
            "name": "stock_price_source",
            "in": "query",
            "type": "string",
            "description": "The data source to use for underlying stock prices",
            "enum": [
              "iex",
              "nasdaq_basic",
              "nasdaq_basic_last_sale",
              "utp_delayed",
              "cta_a_delayed",
              "cta_b_delayed",
              "otc_delayed",
              "delayed_sip",
              "iex_delayed",
              "cboe_one_delayed"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ApiResponseOptionsGreekContractRealtime"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Option contract not found"
          },
          "401": {
            "description": "Unauthorized."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/options/implied_move/{symbol}/{expiration_date}": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Options Implied Move By Symbol",
        "operationId": "get_options_implied_move_by_symbol",
        "description": "Returns the implied move data points for a ticker symbol.",
        "x-note": null,
        "x-history": "N/A",
        "x-data-type": "Realtime | 15-Min Delayed",
        "x-update-freq": "Intraday",
        "x-data-source": "Options Reporting and Authority (OPRA)",
        "x-additional-comments": "The implied move of a stock represents how much the price is expected to move over a period of time.",
        "x-group": "Options Real-Time",
        "x-index": 1007,
        "x-sample-data-url": "/options/implied_move/TSLA/2025-05-30",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/get_options_implied_move_by_symbol",
        "parameters": [
          {
            "in": "path",
            "name": "symbol",
            "description": "The ticker symbol for the contracts.",
            "type": "string",
            "required": true,
            "x-example": "TSLA",
            "x-example-value": "TSLA",
            "x-default-value": null
          },
          {
            "in": "path",
            "name": "expiration_date",
            "description": "The expiration date for the contracts to consider.",
            "type": "string",
            "format": "date",
            "x-example": "2025-05-30",
            "x-example-value": "2025-05-30",
            "required": true
          },
          {
            "in": "query",
            "name": "percentage",
            "description": "Percentage to multiply the straddle by. Defaults to 0.85.",
            "type": "float",
            "required": false,
            "x-example": 0.85,
            "x-example-value": 0.85
          },
          {
            "in": "query",
            "name": "source",
            "description": "Realtime or 15-minute delayed contracts.",
            "type": "string",
            "enum": [
              "realtime",
              "delayed"
            ],
            "x-example": "~null",
            "x-example-value": "realtime",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseOptionsImpliedMove"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/options/interval/movers": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Options Intervals Movers",
        "operationId": "get_options_interval_movers",
        "description": "Returns a list of intervals for the biggest movers over the last hour interval.",
        "x-note": "Options with a leading or trailing integer are no longer optionable securities.",
        "x-history": "N/A",
        "x-data-type": "Realtime | 15-Min Delayed",
        "x-update-freq": "Intraday",
        "x-data-source": "Options Reporting and Authority (OPRA)",
        "x-additional-comments": "This endpoint is commonly used by users to create candlestick graphs.",
        "x-group": "Options Real-Time",
        "x-index": 1006,
        "x-sample-data-url": "/options/interval/movers",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/get_options_interval_movers",
        "parameters": [
          {
            "in": "query",
            "name": "source",
            "description": "Realtime or 15-minute delayed contracts.",
            "type": "string",
            "enum": [
              "realtime",
              "delayed"
            ],
            "x-example": "~null",
            "x-example-value": "realtime",
            "required": false
          },
          {
            "in": "query",
            "name": "open_time",
            "description": "The inclusive UTC date and time the interval opens at.",
            "type": "string",
            "format": "date-time",
            "x-example": "~null",
            "x-example-value": "2023-01-03T15:00:00.000+00:00",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/OptionIntervalsMoversResult"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/options/interval/movers/change": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Options Intervals Movers By Change",
        "operationId": "get_options_interval_movers_change",
        "description": "Returns a list of intervals for the biggest movers by change over the last hour interval.",
        "x-note": "Options with a leading or trailing integer are no longer optionable securities.",
        "x-history": "N/A",
        "x-data-type": "Realtime | 15-Min Delayed",
        "x-update-freq": "Intraday",
        "x-data-source": "Options Reporting and Authority (OPRA)",
        "x-additional-comments": "This endpoint is commonly used by users to create candlestick graphs.",
        "x-group": "Options Real-Time",
        "x-index": 1006,
        "x-sample-data-url": "/options/interval/movers/change",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/get_options_interval_movers_change",
        "parameters": [
          {
            "in": "query",
            "name": "source",
            "description": "Realtime or 15-minute delayed contracts.",
            "type": "string",
            "enum": [
              "realtime",
              "delayed"
            ],
            "x-example": "~null",
            "x-example-value": "realtime",
            "required": false
          },
          {
            "in": "query",
            "name": "open_time",
            "description": "The inclusive UTC date and time the interval opens at.",
            "type": "string",
            "format": "date-time",
            "x-example": "~null",
            "x-example-value": "2023-01-03T15:00:00.000+00:00",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/OptionIntervalsMoversResult"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/options/interval/movers/volume": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Options Intervals Movers By Volume",
        "operationId": "get_options_interval_movers_volume",
        "description": "Returns a list of intervals for the biggest movers by volume over the last hour interval.",
        "x-note": "Options with a leading or trailing integer are no longer optionable securities.",
        "x-history": "N/A",
        "x-data-type": "Realtime | 15-Min Delayed",
        "x-update-freq": "Intraday",
        "x-data-source": "Options Reporting and Authority (OPRA)",
        "x-additional-comments": "This endpoint is commonly used by users to create candlestick graphs.",
        "x-group": "Options Real-Time",
        "x-index": 1006,
        "x-sample-data-url": "/options/interval/movers/volume",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/get_options_interval_movers_volume",
        "parameters": [
          {
            "in": "query",
            "name": "source",
            "description": "Realtime or 15-minute delayed contracts.",
            "type": "string",
            "enum": [
              "realtime",
              "delayed"
            ],
            "x-example": "~null",
            "x-example-value": "realtime",
            "required": false
          },
          {
            "in": "query",
            "name": "open_time",
            "description": "The inclusive UTC date and time the interval opens at.",
            "type": "string",
            "format": "date-time",
            "x-example": "~null",
            "x-example-value": "2023-01-03T15:00:00.000+00:00",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/OptionIntervalsMoversResult"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/options/interval/{identifier}": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Options Intervals By Contract",
        "operationId": "get_options_interval_by_contract",
        "description": "Returns a list of interval data points for a contract.",
        "x-note": "Options with a leading or trailing integer are no longer optionable securities.",
        "x-history": "N/A",
        "x-data-type": "Realtime | 15-Min Delayed",
        "x-update-freq": "Intraday",
        "x-data-source": "Options Reporting and Authority (OPRA)",
        "x-additional-comments": "This endpoint is commonly used by users to create candlestick graphs.",
        "x-group": "Options Real-Time",
        "x-index": 1005,
        "x-sample-data-url": "/options/interval/SPY___230103P00380000?interval_size=5m",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/get_options_interval_by_contract",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "The Intrinio ID or code of the options contract to request intervals for.",
            "type": "string",
            "required": true,
            "x-example": "SPY___230103P00380000",
            "x-example-value": "SPY___230103P00380000",
            "x-default-value": null
          },
          {
            "in": "query",
            "name": "interval_size",
            "description": "The time length of the interval.",
            "type": "string",
            "enum": [
              "SixtyMinute",
              "60m",
              "1h",
              "ThirtyMinute",
              "30m",
              "FifteenMinute",
              "15m",
              "TenMinute",
              "10m",
              "FiveMinute",
              "5m",
              "OneMinute",
              "1m"
            ],
            "x-example": "5m",
            "x-example-value": "5m",
            "required": true
          },
          {
            "in": "query",
            "name": "source",
            "description": "Realtime or 15-minute delayed contracts.",
            "type": "string",
            "enum": [
              "realtime",
              "delayed"
            ],
            "x-example": "~null",
            "x-example-value": "realtime",
            "required": false
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 300,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "end_time",
            "description": "The inclusive UTC date and time the intervals end at.",
            "type": "string",
            "format": "date-time",
            "x-example": "~null",
            "x-example-value": "2023-01-03T15:00:00.000+00:00",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/OptionIntervalsResult"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/options/prices/by_ticker/{symbol}/eod": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Option Prices End of Day By Ticker",
        "operationId": "get_options_prices_eod_by_ticker",
        "description": "Returns a list of end of day pricing information for all option contracts currently associated with the ticker.",
        "x-history": "N/A",
        "x-data-type": "End of Day",
        "x-update-freq": "12PM UTC Daily",
        "x-data-source": "Options Reporting and Authority (OPRA) | Office of the Comptroller of the Currency (OCC)",
        "x-additional-comments": "Try using the `Options Symbols` endpoint to explore the universe of available option data.",
        "x-group": "Options Historical End of Day (Intrinio)",
        "x-index": 1006,
        "x-sample-data-url": "/options/prices/by_ticker/AAPL/eod",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/us-historical-options-prices-eod",
        "parameters": [
          {
            "in": "path",
            "name": "symbol",
            "description": "The equities ticker symbol, corresponding to the underlying security.",
            "type": "string",
            "required": true,
            "x-example": "MSFT",
            "x-example-value": "MSFT",
            "x-default-value": "MSFT",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 1000,
            "default": 250,
            "x-example": 250
          },
          {
            "in": "query",
            "name": "date",
            "description": "The date to get pricing data for. Defaults to today in Eastern time zone.",
            "type": "date",
            "x-example": "2024-01-01",
            "x-example-value": "2024-01-01",
            "required": false
          },
          {
            "in": "query",
            "name": "type",
            "description": "The option contract type.",
            "type": "string",
            "enum": [
              "call",
              "put"
            ],
            "x-example": "~null",
            "x-example-value": "put",
            "required": false
          },
          {
            "in": "query",
            "name": "strike",
            "description": "The strike price of the option contract. This will return options contracts with strike price equal to this price.",
            "type": "number",
            "x-example": "~null",
            "x-example-value": 170,
            "required": false,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "strike_greater_than",
            "description": "The strike price of the option contract. This will return options contracts with strike prices greater than this price.",
            "type": "number",
            "x-example": "~null",
            "x-example-value": 190,
            "required": false,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "strike_less_than",
            "description": "The strike price of the option contract. This will return options contracts with strike prices less than this price.",
            "type": "number",
            "x-example": "~null",
            "x-example-value": 150,
            "required": false,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "include_related_symbols",
            "description": "Include related symbols that end in a 1 or 2 because of a corporate action.",
            "type": "boolean",
            "required": false,
            "x-example": false,
            "x-example-value": false,
            "x-default-value": false
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseOptionsPricesByTickerEod"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/options/prices/by_ticker/{symbol}/realtime": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Option Prices Realtime By Ticker",
        "operationId": "get_options_prices_realtime_by_ticker",
        "description": "Returns a list of the latest National Best Bid & Offer (NBBO) top of the order book size and premium (bid / ask), the latest trade size and premium as well as the greeks and implied volatility for all option contracts currently associated with the ticker.",
        "x-history": "N/A",
        "x-data-type": "Realtime | 15-Min Delayed",
        "x-update-freq": "Intraday",
        "x-data-source": "Options Reporting and Authority (OPRA) | Office of the Comptroller of the Currency (OCC)",
        "x-additional-comments": "Try using the `Options Symbols` endpoint to explore the universe of available option data.",
        "x-group": "Options Real-Time",
        "x-index": 1002,
        "x-sample-data-url": "/options/prices/by_ticker/AAPL/realtime",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/us-real-time-delayed-options-prices",
        "parameters": [
          {
            "in": "path",
            "name": "symbol",
            "description": "The equities ticker symbol, corresponding to the underlying security.",
            "type": "string",
            "required": true,
            "x-example": "MSFT",
            "x-example-value": "MSFT",
            "x-default-value": "MSFT",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "source",
            "description": "Realtime or 15-minute delayed contracts.",
            "type": "string",
            "enum": [
              "realtime",
              "delayed"
            ],
            "x-example": "~null",
            "x-example-value": "realtime",
            "required": false
          },
          {
            "in": "query",
            "name": "iv_mode",
            "description": "Change the mode for the implied volatility calculation to out of the money.",
            "type": "string",
            "enum": [
              "out_of_the_money"
            ],
            "x-example": "~null",
            "x-example-value": "out_of_the_money",
            "required": false
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 1000,
            "default": 250,
            "x-example": 250
          },
          {
            "in": "query",
            "name": "stock_price_source",
            "description": "Source for underlying price for calculating Greeks.",
            "type": "string",
            "enum": [
              "iex",
              "delayed_sip",
              "utp_delayed",
              "otc_delayed",
              "cta_a_delayed",
              "cta_b_delayed",
              "nasdaq_basic",
              "cboe_one_delayed",
              "iex_delayed"
            ],
            "x-example": "~null",
            "x-example-value": "iex",
            "required": false
          },
          {
            "in": "query",
            "name": "model",
            "description": "Model for calculating Greek values. Default is black_scholes.",
            "type": "string",
            "enum": [
              "black_scholes",
              "bjerk"
            ],
            "x-example": "~null",
            "x-example-value": "black_scholes",
            "required": false
          },
          {
            "in": "query",
            "name": "show_extended_price",
            "description": "Whether to include open close high low type fields.",
            "type": "boolean",
            "x-example": "~null",
            "x-example-value": false,
            "required": false
          },
          {
            "in": "query",
            "name": "expiration_start_date",
            "description": "Filter out contracts that expire before this date.",
            "type": "date",
            "x-example": "2024-01-01",
            "x-example-value": "2024-01-01",
            "required": false
          },
          {
            "in": "query",
            "name": "expiration_end_date",
            "description": "Filter out contracts that expire after this date.",
            "type": "date",
            "x-example": "2024-02-02",
            "x-example-value": "2024-02-02",
            "required": false
          },
          {
            "in": "query",
            "name": "strike",
            "type": "number",
            "description": "Filter out contracts that have this strike price.",
            "x-example": 100.0,
            "x-example-value": false,
            "required": false
          },
          {
            "in": "query",
            "name": "show_stats",
            "description": "Whether to include Greek calculations or not.",
            "type": "boolean",
            "x-example": "~null",
            "x-example-value": false,
            "required": false
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseOptionsPricesByTickerRealtime"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/options/prices/realtime/batch": {
      "post": {
        "tags": [
          "Options"
        ],
        "summary": "Option Prices Batch Realtime",
        "operationId": "get_options_prices_batch_realtime",
        "description": "Returns a list of latest price data for up to 250 option contracts per request.",
        "x-note": "One of Intrinio’s few POST request endpoints. | Greeks and Implied Volatility not included with return data, only latest price data.",
        "x-history": "N/A",
        "x-data-type": "Realtime | 15-Min Delayed",
        "x-update-freq": "Intraday",
        "x-data-source": "Options Reporting and Authority (OPRA) | Office of the Comptroller of the Currency (OCC)",
        "x-additional-comments": "Useful for allowing users on your platform to track their current option holdings or creating an option’s watchlist for particular contracts.",
        "x-group": "Options Real-Time",
        "x-index": 1006,
        "x-sample-data-url": "/options/prices/realtime/batch",
        "x-sandbox": false,
        "x-batch-post-body": true,
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The contract symbols for which to return options prices for.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OptionContractsList"
            },
            "x-alt-render": true,
            "x-example": {
              "contracts": [
                "A220121P00055000",
                "A220121P00057500",
                "A220121P00060000"
              ]
            },
            "x-example-value": {
              "contracts": [
                "A220121P00055000",
                "A220121P00057500",
                "A220121P00060000"
              ]
            }
          },
          {
            "in": "query",
            "name": "source",
            "description": "Realtime or 15-minute delayed contracts.",
            "type": "string",
            "enum": [
              "realtime",
              "delayed"
            ],
            "x-example": "~null",
            "x-example-value": "realtime",
            "required": false
          },
          {
            "in": "query",
            "name": "show_stats",
            "description": "Whether to include Greek calculations or not.",
            "type": "boolean",
            "x-example": "~null",
            "x-example-value": false,
            "required": false
          },
          {
            "in": "query",
            "name": "stock_price_source",
            "description": "Source for underlying price for calculating Greeks.",
            "type": "string",
            "enum": [
              "iex",
              "delayed_sip",
              "utp_delayed",
              "otc_delayed",
              "cta_a_delayed",
              "cta_b_delayed",
              "nasdaq_basic",
              "iex_delayed",
              "cboe_one_delayed"
            ],
            "x-example": "~null",
            "x-example-value": "iex",
            "required": false
          },
          {
            "in": "query",
            "name": "model",
            "description": "Model for calculating Greek values. Default is black_scholes.",
            "type": "string",
            "enum": [
              "black_scholes",
              "bjerk"
            ],
            "x-example": "~null",
            "x-example-value": "black_scholes",
            "required": false
          },
          {
            "in": "query",
            "name": "show_extended_price",
            "description": "Whether to include open close high low type fields.",
            "type": "boolean",
            "x-example": "~null",
            "x-example-value": false,
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseOptionsPricesBatchRealtime"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/options/prices/{identifier}": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Option Prices",
        "operationId": "get_options_prices",
        "description": "Returns all price data from inception to expiration for a particular contract.",
        "x-history": "2008 to Present | Historical Data is sold by the Year",
        "x-data-type": "End of Day",
        "x-update-freq": "1AM EST Daily",
        "x-data-source": "Options Reporting and Authority (OPRA)",
        "x-group": "Options Historical End of Day (Trade Alert)",
        "x-index": 1002,
        "x-sample-data-url": "/options/prices/MSFT190405C00118000",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/us-historical-end-of-day-options-prices",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "The Intrinio ID or code of the options contract to request prices for.",
            "type": "string",
            "required": true,
            "x-example": "MSFT190405C00118000",
            "x-example-value": "MSFT190405C00118000",
            "x-default-value": null
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return option contract prices on or after this date.",
            "type": "string",
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01",
            "required": false
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return option contract prices on or before this date.",
            "type": "string",
            "x-example": "2019-12-31",
            "x-example-value": "2019-12-31",
            "required": false
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseOptionPrices"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/options/prices/{identifier}/eod": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Option Prices EOD",
        "operationId": "get_options_prices_eod",
        "description": "Returns all option prices for a given option contract identifier.",
        "x-group": "Options Historical End of Day (Intrinio)",
        "x-index": 1004,
        "x-sample-data-url": "/options/prices/AAPL230120C00090000/eod",
        "x-sandbox": false,
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "The Intrinio ID or code of the options contract to request prices for.",
            "type": "string",
            "required": true,
            "x-example": "AAPL230616P00190000",
            "x-example-value": "AAPL230616P00190000",
            "x-default-value": null
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "The start date to retrieve prices for",
            "type": "string",
            "format": "date",
            "x-example": "~null",
            "x-example-value": "2022-04-01",
            "required": false,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "The end date to retrieve prices for",
            "type": "string",
            "format": "date",
            "x-example": "~null",
            "x-example-value": "2022-07-01",
            "required": false,
            "x-remove-param": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseOptionsPricesEod"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/options/prices/{identifier}/realtime": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Option Prices Realtime",
        "operationId": "get_options_prices_realtime",
        "description": "Returns all option prices for a given option contract identifier.",
        "x-group": "Options Real-Time",
        "x-index": 1000,
        "x-sample-data-url": "/options/prices/AAPL230120C00090000/realtime",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/us-real-time-delayed-options-prices",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "The Intrinio ID or code of the options contract to request prices for.",
            "type": "string",
            "required": true,
            "x-example": "AAPL__261218C00230000",
            "x-example-value": "AAPL__261218C00230000",
            "x-default-value": "AAPL__261218C00230000"
          },
          {
            "in": "query",
            "name": "source",
            "description": "Realtime or 15-minute delayed contracts.",
            "type": "string",
            "enum": [
              "realtime",
              "delayed"
            ],
            "x-example": "~null",
            "x-example-value": "realtime",
            "required": false
          },
          {
            "in": "query",
            "name": "stock_price_source",
            "description": "Source for underlying price for calculating Greeks.",
            "type": "string",
            "enum": [
              "iex",
              "delayed_sip",
              "utp_delayed",
              "otc_delayed",
              "cta_a_delayed",
              "cta_b_delayed",
              "nasdaq_basic",
              "cboe_one_delayed",
              "iex_delayed"
            ],
            "x-example": "~null",
            "x-example-value": "iex",
            "required": false
          },
          {
            "in": "query",
            "name": "model",
            "description": "Model for calculating Greek values. Default is black_scholes.",
            "type": "string",
            "enum": [
              "black_scholes",
              "bjerk"
            ],
            "x-example": "~null",
            "x-example-value": "black_scholes",
            "required": false
          },
          {
            "in": "query",
            "name": "show_extended_price",
            "description": "Whether to include open close high low type fields.",
            "type": "boolean",
            "x-example": "~null",
            "x-example-value": false,
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseOptionsPriceRealtime"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/options/prices/{identifier}/realtime/stats": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Option Stats Realtime",
        "operationId": "get_options_stats_realtime",
        "description": "Returns all option stats (greeks and implied volatility) as well as the underlying factors used to calculate them, for a particular option contract.",
        "x-history": "N/A",
        "x-data-type": "Realtime | 15-Min Delayed",
        "x-update-freq": "Intraday",
        "x-data-source": "Options Reporting and Authority (OPRA) | Office of the Comptroller of the Currency (OCC)",
        "x-additional-comments": "Try using the `Options Chain by Symbol` or `Options Contracts by Symbol` endpoints to identify the option contract you are looking to track.",
        "x-group": "Options Real-Time",
        "x-index": 1002,
        "x-sample-data-url": "/options/prices/AAPL230120C00090000/realtime",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/us-real-time-delayed-options-prices",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "The Intrinio ID or code of the options contract to request prices for.",
            "type": "string",
            "required": true,
            "x-example": "AAPL230120C00090000",
            "x-example-value": "AAPL230120C00090000",
            "x-default-value": null
          },
          {
            "in": "query",
            "name": "source",
            "description": "Realtime or 15-minute delayed contracts.",
            "type": "string",
            "enum": [
              "realtime",
              "delayed"
            ],
            "x-example": "~null",
            "x-example-value": "realtime",
            "required": false
          },
          {
            "in": "query",
            "name": "show_extended_price",
            "description": "Whether to include open close high low type fields.",
            "type": "boolean",
            "x-example": "~null",
            "x-example-value": false,
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseOptionsStatsRealtime"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/options/snapshots": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Option Prices Realtime Snapshot",
        "description": "Returns all options snapshots for the queried interval with links to download.",
        "operationId": "get_options_snapshots",
        "x-group": "Options Real-Time",
        "x-index": 1014,
        "x-sample-data-url": "/options/snapshots",
        "x-data-type": "Realtime | 15-Min Delayed",
        "x-update-freq": "Intraday",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/options-snapshot",
        "parameters": [
          {
            "in": "query",
            "name": "source",
            "description": "Realtime or 15-minute delayed contracts.",
            "type": "string",
            "enum": [
              "realtime",
              "delayed"
            ],
            "x-example": "~null",
            "x-example-value": "realtime",
            "required": false
          },
          {
            "in": "query",
            "name": "at_datetime",
            "description": "The UTC date and time (with url-encoded spaces) the snapshot will cover.",
            "type": "string",
            "format": "date-time",
            "x-example": "~null",
            "x-example-value": "2022-01-01T04:00:00.000-06:00",
            "required": false
          },
          {
            "in": "query",
            "name": "with_greeks",
            "description": "Whether to include Greek calculations fields when available.",
            "type": "boolean",
            "x-example": "~null",
            "x-example-value": false,
            "required": false
          },
          {
            "in": "query",
            "name": "stock_price_source",
            "description": "Source for underlying price for calculating Greeks.",
            "type": "string",
            "enum": [
              "iex",
              "nasdaq_basic",
              "nasdaq_basic_last_sale"
            ],
            "x-example": "~null",
            "x-example-value": "iex",
            "required": false
          },
          {
            "in": "query",
            "name": "with_underlying_price",
            "description": "Whether to include the underlying price of the security in the file.",
            "type": "boolean",
            "x-example": "~null",
            "x-example-value": false,
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/OptionSnapshotsResult"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/options/strikes/{symbol}/{strike}/realtime": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Option Strikes Realtime",
        "operationId": "get_option_strikes_realtime",
        "description": "Returns a list of the latest top of the order book size and premium (bid / ask), the latest trade size and premium as well as the greeks and implied volatility for all call/put contracts that match the strike and symbol specified.",
        "x-history": "N/A",
        "x-data-type": "Realtime | 15-Min Delayed",
        "x-update-freq": "Intraday",
        "x-data-source": "Options Reporting and Authority (OPRA) | Office of the Comptroller of the Currency (OCC)",
        "x-additional-comments": "Try using the `Options Chain by Symbol` or `Options Contracts by Symbol` endpoints to identify the strike’s available for a specific symbol.",
        "x-group": "Options Real-Time",
        "x-index": 1013,
        "x-sample-data-url": "/options/strikes/MSFT/95/realtime",
        "parameters": [
          {
            "in": "path",
            "name": "symbol",
            "description": "The option symbol, corresponding to the underlying security.",
            "type": "string",
            "required": true,
            "x-example": "MSFT",
            "x-example-value": "MSFT",
            "x-default-value": "MSFT",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "path",
            "name": "strike",
            "description": "The strike price of the option contract. This will return options contracts with strike price equal to this price.",
            "type": "number",
            "x-example": 95,
            "x-example-value": 95,
            "required": false
          },
          {
            "in": "query",
            "name": "source",
            "description": "Realtime or delayed.",
            "type": "string",
            "enum": [
              "realtime",
              "delayed"
            ],
            "x-example": "~null",
            "x-example-value": "realtime",
            "required": false
          },
          {
            "in": "query",
            "name": "stock_price_source",
            "description": "Source for underlying price for calculating Greeks.",
            "type": "string",
            "enum": [
              "iex",
              "delayed_sip",
              "utp_delayed",
              "otc_delayed",
              "cta_a_delayed",
              "cta_b_delayed",
              "nasdaq_basic",
              "cboe_one_delayed",
              "iex_delayed"
            ],
            "x-example": "~null",
            "x-example-value": "iex",
            "required": false
          },
          {
            "in": "query",
            "name": "model",
            "description": "Model for calculating Greek values. Default is black_scholes.",
            "type": "string",
            "enum": [
              "black_scholes",
              "bjerk"
            ],
            "x-example": "~null",
            "x-example-value": "black_scholes",
            "required": false
          },
          {
            "in": "query",
            "name": "show_extended_price",
            "description": "Whether to include open close high low type fields.",
            "type": "boolean",
            "x-example": "~null",
            "x-example-value": false,
            "required": false
          },
          {
            "in": "query",
            "name": "include_related_symbols",
            "description": "Include related symbols that end in a 1 or 2 because of a corporate action.",
            "type": "boolean",
            "required": false,
            "x-example": false,
            "x-example-value": false,
            "x-default-value": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseOptionsChainRealtime"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/options/tickers": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Options Tickers",
        "operationId": "get_all_options_tickers",
        "description": "Returns all tickers that have existing options contracts.",
        "x-group": "Options Real-Time",
        "x-index": 1007,
        "x-sample-data-url": "/options/tickers",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/us-historical-end-of-day-options-prices",
        "parameters": [
          {
            "in": "query",
            "name": "use_underlying_symbols",
            "type": "boolean",
            "required": false,
            "description": "Use underlying symbol vs contract symbol",
            "default": false,
            "x-example": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseOptionsTickers"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/options/trades": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Option Trades",
        "operationId": "get_option_trades",
        "description": "Returns all trades between start time and end time, up to seven days ago for the specified source.",
        "x-history": "N/A",
        "x-data-type": "Realtime | 15-Min Delayed",
        "x-update-freq": "Intraday",
        "x-data-source": "OPRA",
        "x-additional-comments": "This endpoint pages in time descending order to make gap resolution more efficient.",
        "x-group": "Options Real-Time",
        "x-index": 1010,
        "x-sample-data-url": "/options/trades?source=realtime&start_date=2024-07-01&start_time=11:00:00.000&end_date=2025-07-01&end_time=12:00:00.000&timezone=UTC&page_size=100",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/get_option_trades",
        "parameters": [
          {
            "in": "query",
            "name": "source",
            "description": "The specific source of the data being requested.",
            "type": "string",
            "enum": [
              "realtime",
              "delayed"
            ],
            "x-example": "~null",
            "x-example-value": "realtime",
            "required": false
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "The start date for the data being requested.",
            "type": "string",
            "format": "date",
            "x-example": "~null",
            "x-example-value": "2023-07-05",
            "required": false
          },
          {
            "in": "query",
            "name": "start_time",
            "description": "The start time for the data being requested.",
            "type": "string",
            "x-example": "~null",
            "x-example-value": 39600.0,
            "required": false
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "The end date for the data being requested.",
            "type": "string",
            "format": "date",
            "x-example": "~null",
            "x-example-value": "2023-07-05",
            "required": false
          },
          {
            "in": "query",
            "name": "end_time",
            "description": "The end time for the data being requested.",
            "type": "string",
            "x-example": "~null",
            "x-example-value": 39600.0,
            "required": false
          },
          {
            "in": "query",
            "name": "timezone",
            "type": "string",
            "description": "The timezone the start and end date/times use.",
            "required": false,
            "enum": [
              "Africa/Algiers",
              "Africa/Cairo",
              "Africa/Casablanca",
              "Africa/Harare",
              "Africa/Johannesburg",
              "Africa/Monrovia",
              "Africa/Nairobi",
              "America/Argentina/Buenos_Aires",
              "America/Bogota",
              "America/Caracas",
              "America/Chicago",
              "America/Chihuahua",
              "America/Denver",
              "America/Godthab",
              "America/Guatemala",
              "America/Guyana",
              "America/Halifax",
              "America/Indiana/Indianapolis",
              "America/Juneau",
              "America/La_Paz",
              "America/Lima",
              "America/Lima",
              "America/Los_Angeles",
              "America/Mazatlan",
              "America/Mexico_City",
              "America/Mexico_City",
              "America/Monterrey",
              "America/Montevideo",
              "America/New_York",
              "America/Phoenix",
              "America/Regina",
              "America/Santiago",
              "America/Sao_Paulo",
              "America/St_Johns",
              "America/Tijuana",
              "Asia/Almaty",
              "Asia/Baghdad",
              "Asia/Baku",
              "Asia/Bangkok",
              "Asia/Bangkok",
              "Asia/Chongqing",
              "Asia/Colombo",
              "Asia/Dhaka",
              "Asia/Dhaka",
              "Asia/Hong_Kong",
              "Asia/Irkutsk",
              "Asia/Jakarta",
              "Asia/Jerusalem",
              "Asia/Kabul",
              "Asia/Kamchatka",
              "Asia/Karachi",
              "Asia/Karachi",
              "Asia/Kathmandu",
              "Asia/Kolkata",
              "Asia/Kolkata",
              "Asia/Kolkata",
              "Asia/Kolkata",
              "Asia/Krasnoyarsk",
              "Asia/Kuala_Lumpur",
              "Asia/Kuwait",
              "Asia/Magadan",
              "Asia/Muscat",
              "Asia/Muscat",
              "Asia/Novosibirsk",
              "Asia/Rangoon",
              "Asia/Riyadh",
              "Asia/Seoul",
              "Asia/Shanghai",
              "Asia/Singapore",
              "Asia/Srednekolymsk",
              "Asia/Taipei",
              "Asia/Tashkent",
              "Asia/Tbilisi",
              "Asia/Tehran",
              "Asia/Tokyo",
              "Asia/Tokyo",
              "Asia/Tokyo",
              "Asia/Ulaanbaatar",
              "Asia/Urumqi",
              "Asia/Vladivostok",
              "Asia/Yakutsk",
              "Asia/Yekaterinburg",
              "Asia/Yerevan",
              "Atlantic/Azores",
              "Atlantic/Cape_Verde",
              "Atlantic/South_Georgia",
              "Australia/Adelaide",
              "Australia/Brisbane",
              "Australia/Darwin",
              "Australia/Hobart",
              "Australia/Melbourne",
              "Australia/Melbourne",
              "Australia/Perth",
              "Australia/Sydney",
              "Etc/UTC",
              "UTC",
              "Europe/Amsterdam",
              "Europe/Athens",
              "Europe/Belgrade",
              "Europe/Berlin",
              "Europe/Berlin",
              "Europe/Bratislava",
              "Europe/Brussels",
              "Europe/Bucharest",
              "Europe/Budapest",
              "Europe/Copenhagen",
              "Europe/Dublin",
              "Europe/Helsinki",
              "Europe/Istanbul",
              "Europe/Kaliningrad",
              "Europe/Kiev",
              "Europe/Lisbon",
              "Europe/Ljubljana",
              "Europe/London",
              "Europe/London",
              "Europe/Madrid",
              "Europe/Minsk",
              "Europe/Moscow",
              "Europe/Moscow",
              "Europe/Paris",
              "Europe/Prague",
              "Europe/Riga",
              "Europe/Rome",
              "Europe/Samara",
              "Europe/Sarajevo",
              "Europe/Skopje",
              "Europe/Sofia",
              "Europe/Stockholm",
              "Europe/Tallinn",
              "Europe/Vienna",
              "Europe/Vilnius",
              "Europe/Volgograd",
              "Europe/Warsaw",
              "Europe/Zagreb",
              "Pacific/Apia",
              "Pacific/Auckland",
              "Pacific/Auckland",
              "Pacific/Chatham",
              "Pacific/Fakaofo",
              "Pacific/Fiji",
              "Pacific/Guadalcanal",
              "Pacific/Guam",
              "Pacific/Honolulu",
              "Pacific/Majuro",
              "Pacific/Midway",
              "Pacific/Midway",
              "Pacific/Noumea",
              "Pacific/Pago_Pago",
              "Pacific/Port_Moresby",
              "Pacific/Tongatapu"
            ],
            "default": "UTC",
            "x-example": "UTC",
            "x-example-value": "UTC",
            "x-default-value": "UTC"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The maximum number of results to return per page.",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "min_size",
            "type": "integer",
            "required": false,
            "description": "Trades must be larger or equal to this size.",
            "x-example": 100
          },
          {
            "in": "query",
            "name": "security",
            "description": "The ticker symbol for which trades are being requested.",
            "type": "string",
            "required": false,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": "security_us"
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/OptionTradesResult"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/options/unusual_activity": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Options Unusual Activity Universal",
        "operationId": "get_unusual_activity_universal",
        "description": "Returns the latest unusual options activity across all US companies with across all option chains. Unusual options activity includes large trades, sweeps, and block trades.",
        "x-note": "Large Trades – Large option trades with inherently immense notional value of the corresponding premiums paid, or collected, and significant order size. | Sweeps – An options sweep is a market order split across all exchanges to take advantage of the best prices for a given option contract on each individual exchange. | Blocks – A block trade is a large, privately negotiated option order executed off the public option exchange.",
        "x-history": "N/A – Unusual Activity is Provided on a Daily Basis.",
        "x-data-type": "Realtime | 15-Min Delayed",
        "x-update-freq": "Intraday",
        "x-data-source": "Options Reporting and Authority (OPRA) | Office of the Comptroller of the Currency (OCC)",
        "x-additional-comments": "If you are looking to build a historical database with daily unusual activity across a wide variety of symbols it is recommended to call this endpoint once every 5 minutes to ensure you capture all data.",
        "x-group": "Options Real-Time",
        "x-index": 1011,
        "x-sample-data-url": "/options/unusual_activity",
        "x-sandbox": false,
        "parameters": [
          {
            "in": "query",
            "name": "source",
            "description": "Realtime or 15-minute delayed contracts.",
            "type": "string",
            "enum": [
              "realtime",
              "delayed"
            ],
            "x-example": "~null",
            "x-example-value": "realtime",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseOptionsUnusualActivity"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/options/unusual_activity/intraday": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Options Unusual Activity Universal Intraday",
        "operationId": "get_unusual_activity_universal_intraday",
        "description": "Returns unusual trades for all underlying security symbols within the query parameters.",
        "x-group": "Options Real-Time",
        "x-index": 1012,
        "x-sample-data-url": "/options/unusual_activity/intraday",
        "x-sandbox": false,
        "parameters": [
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 1000,
            "default": 1000,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "activity_type",
            "description": "The unusual activity type to query for.",
            "type": "string",
            "enum": [
              "block",
              "sweep",
              "large"
            ],
            "x-example": "~null",
            "x-example-value": "block",
            "required": false
          },
          {
            "in": "query",
            "name": "sentiment",
            "description": "The sentiment type to query for.",
            "type": "string",
            "enum": [
              "bullish",
              "bearish",
              "neutral"
            ],
            "x-example": "~null",
            "x-example-value": "bullish",
            "required": false
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return unusual activity on or after this date.",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "2022-02-01",
            "x-example-value": "2022-02-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return unusual activity before this date.",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "2022-02-03",
            "x-example-value": "2022-02-03"
          },
          {
            "in": "query",
            "name": "minimum_total_value",
            "description": "The inclusive minimum total value for the unusual activity.",
            "type": "float",
            "required": false,
            "x-example": 100000.0,
            "x-example-value": 100000.0
          },
          {
            "in": "query",
            "name": "maximum_total_value",
            "description": "The inclusive maximum total value for the unusual activity.",
            "type": "float",
            "required": false,
            "x-example": 200000.0,
            "x-example-value": 200000.0
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseOptionsUnusualActivity"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/options/unusual_activity/{symbol}": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Options Unusual Activity",
        "operationId": "get_unusual_activity",
        "description": "Returns unusual options activity for a particular company across all option chains. Unusual options activity includes large trades, sweeps, and block trades.",
        "x-note": "Large Trades – Large option trades with inherently immense notional value of the corresponding premiums paid, or collected, and significant order size. | Sweeps – An options sweep is a market order split across all exchanges to take advantage of the best prices for a given option contract on each individual exchange. | Blocks – A block trade is a large, privately negotiated option order executed off the public option exchange.",
        "x-history": "N/A – Unusual Activity is Provided on a Daily Basis.",
        "x-data-type": "Realtime | 15-Min Delayed",
        "x-update-freq": "Intraday",
        "x-data-source": "Options Reporting and Authority (OPRA) | Office of the Comptroller of the Currency (OCC)",
        "x-group": "Options Real-Time",
        "x-additional-comments": "If you are looking to build a historical database with daily unusual activity for a specified symbol it is recommended to call this endpoint once every 30 minutes per symbol to ensure you capture all data.",
        "x-index": 1009,
        "x-sample-data-url": "/options/unusual_activity/AAPL",
        "x-sandbox": false,
        "parameters": [
          {
            "in": "path",
            "name": "symbol",
            "description": "The option symbol, corresponding to the underlying security.",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "source",
            "description": "Realtime or 15-minute delayed contracts.",
            "type": "string",
            "enum": [
              "realtime",
              "delayed"
            ],
            "x-example": "~null",
            "x-example-value": "realtime",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseOptionsUnusualActivity"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/options/unusual_activity/{symbol}/intraday": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Options Unusual Activity Intraday",
        "operationId": "get_unusual_activity_intraday",
        "description": "Returns unusual trades for a given identifier within the query parameters.",
        "x-group": "Options Real-Time",
        "x-index": 1010,
        "x-sample-data-url": "/options/unusual_activity/AAPL/intraday",
        "x-sandbox": false,
        "parameters": [
          {
            "in": "path",
            "name": "symbol",
            "description": "The option symbol, corresponding to the underlying security.",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 1000,
            "default": 1000,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "activity_type",
            "description": "The unusual activity type to query for.",
            "type": "string",
            "enum": [
              "block",
              "sweep",
              "large"
            ],
            "x-example": "~null",
            "x-example-value": "block",
            "required": false
          },
          {
            "in": "query",
            "name": "sentiment",
            "description": "The sentiment type to query for.",
            "type": "string",
            "enum": [
              "bullish",
              "bearish",
              "neutral"
            ],
            "x-example": "~null",
            "x-example-value": "bullish",
            "required": false
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return unusual activity on or after this date.",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "2022-02-01",
            "x-example-value": "2022-02-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return unusual activity before this date.",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "2022-02-03",
            "x-example-value": "2022-02-03"
          },
          {
            "in": "query",
            "name": "minimum_total_value",
            "description": "The inclusive minimum total value for the unusual activity.",
            "type": "float",
            "required": false,
            "x-example": 100000.0,
            "x-example-value": 100000.0
          },
          {
            "in": "query",
            "name": "maximum_total_value",
            "description": "The inclusive maximum total value for the unusual activity.",
            "type": "float",
            "required": false,
            "x-example": 200000.0,
            "x-example-value": 200000.0
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseOptionsUnusualActivity"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/options/{identifier}/trades": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Option Trades By Contract",
        "operationId": "get_option_trades_by_contract",
        "description": "Returns all trades for a contract between start time and end time, up to seven days ago for the specified source.",
        "x-history": "N/A",
        "x-data-type": "Realtime | 15-Min Delayed",
        "x-update-freq": "Intraday",
        "x-data-source": "OPRA",
        "x-additional-comments": "This endpoint pages in time descending order to make gap resolution more efficient.",
        "x-group": "Options Real-Time",
        "x-index": 1010,
        "x-sample-data-url": "/options/AAPL__261218C00230000/trades?source=realtime&start_date=2024-07-01&start_time=11:00:00.000&end_date=2025-07-01&end_time=12:00:00.000&timezone=UTC&page_size=100",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/get_option_trades_by_contract",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "The option contract for which trades are being requested.",
            "type": "string",
            "required": true,
            "x-example": "AAPL__261218C00230000",
            "x-example-value": "AAPL__261218C00230000",
            "x-default-value": "AAPL__261218C00230000"
          },
          {
            "in": "query",
            "name": "source",
            "description": "The specific source of the data being requested.",
            "type": "string",
            "enum": [
              "realtime",
              "delayed"
            ],
            "x-example": "~null",
            "x-example-value": "realtime",
            "required": false
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "The start date for the data being requested.",
            "type": "string",
            "format": "date",
            "x-example": "~null",
            "x-example-value": "2024-07-05",
            "required": false
          },
          {
            "in": "query",
            "name": "start_time",
            "description": "The start time for the data being requested.",
            "type": "string",
            "x-example": "~null",
            "x-example-value": 39600.0,
            "required": false
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "The end date for the data being requested.",
            "type": "string",
            "format": "date",
            "x-example": "~null",
            "x-example-value": "2025-07-05",
            "required": false
          },
          {
            "in": "query",
            "name": "end_time",
            "description": "The end time for the data being requested.",
            "type": "string",
            "x-example": "~null",
            "x-example-value": 39600.0,
            "required": false
          },
          {
            "in": "query",
            "name": "timezone",
            "type": "string",
            "description": "The timezone the start and end date/times use.",
            "required": false,
            "enum": [
              "Africa/Algiers",
              "Africa/Cairo",
              "Africa/Casablanca",
              "Africa/Harare",
              "Africa/Johannesburg",
              "Africa/Monrovia",
              "Africa/Nairobi",
              "America/Argentina/Buenos_Aires",
              "America/Bogota",
              "America/Caracas",
              "America/Chicago",
              "America/Chihuahua",
              "America/Denver",
              "America/Godthab",
              "America/Guatemala",
              "America/Guyana",
              "America/Halifax",
              "America/Indiana/Indianapolis",
              "America/Juneau",
              "America/La_Paz",
              "America/Lima",
              "America/Lima",
              "America/Los_Angeles",
              "America/Mazatlan",
              "America/Mexico_City",
              "America/Mexico_City",
              "America/Monterrey",
              "America/Montevideo",
              "America/New_York",
              "America/Phoenix",
              "America/Regina",
              "America/Santiago",
              "America/Sao_Paulo",
              "America/St_Johns",
              "America/Tijuana",
              "Asia/Almaty",
              "Asia/Baghdad",
              "Asia/Baku",
              "Asia/Bangkok",
              "Asia/Bangkok",
              "Asia/Chongqing",
              "Asia/Colombo",
              "Asia/Dhaka",
              "Asia/Dhaka",
              "Asia/Hong_Kong",
              "Asia/Irkutsk",
              "Asia/Jakarta",
              "Asia/Jerusalem",
              "Asia/Kabul",
              "Asia/Kamchatka",
              "Asia/Karachi",
              "Asia/Karachi",
              "Asia/Kathmandu",
              "Asia/Kolkata",
              "Asia/Kolkata",
              "Asia/Kolkata",
              "Asia/Kolkata",
              "Asia/Krasnoyarsk",
              "Asia/Kuala_Lumpur",
              "Asia/Kuwait",
              "Asia/Magadan",
              "Asia/Muscat",
              "Asia/Muscat",
              "Asia/Novosibirsk",
              "Asia/Rangoon",
              "Asia/Riyadh",
              "Asia/Seoul",
              "Asia/Shanghai",
              "Asia/Singapore",
              "Asia/Srednekolymsk",
              "Asia/Taipei",
              "Asia/Tashkent",
              "Asia/Tbilisi",
              "Asia/Tehran",
              "Asia/Tokyo",
              "Asia/Tokyo",
              "Asia/Tokyo",
              "Asia/Ulaanbaatar",
              "Asia/Urumqi",
              "Asia/Vladivostok",
              "Asia/Yakutsk",
              "Asia/Yekaterinburg",
              "Asia/Yerevan",
              "Atlantic/Azores",
              "Atlantic/Cape_Verde",
              "Atlantic/South_Georgia",
              "Australia/Adelaide",
              "Australia/Brisbane",
              "Australia/Darwin",
              "Australia/Hobart",
              "Australia/Melbourne",
              "Australia/Melbourne",
              "Australia/Perth",
              "Australia/Sydney",
              "Etc/UTC",
              "UTC",
              "Europe/Amsterdam",
              "Europe/Athens",
              "Europe/Belgrade",
              "Europe/Berlin",
              "Europe/Berlin",
              "Europe/Bratislava",
              "Europe/Brussels",
              "Europe/Bucharest",
              "Europe/Budapest",
              "Europe/Copenhagen",
              "Europe/Dublin",
              "Europe/Helsinki",
              "Europe/Istanbul",
              "Europe/Kaliningrad",
              "Europe/Kiev",
              "Europe/Lisbon",
              "Europe/Ljubljana",
              "Europe/London",
              "Europe/London",
              "Europe/Madrid",
              "Europe/Minsk",
              "Europe/Moscow",
              "Europe/Moscow",
              "Europe/Paris",
              "Europe/Prague",
              "Europe/Riga",
              "Europe/Rome",
              "Europe/Samara",
              "Europe/Sarajevo",
              "Europe/Skopje",
              "Europe/Sofia",
              "Europe/Stockholm",
              "Europe/Tallinn",
              "Europe/Vienna",
              "Europe/Vilnius",
              "Europe/Volgograd",
              "Europe/Warsaw",
              "Europe/Zagreb",
              "Pacific/Apia",
              "Pacific/Auckland",
              "Pacific/Auckland",
              "Pacific/Chatham",
              "Pacific/Fakaofo",
              "Pacific/Fiji",
              "Pacific/Guadalcanal",
              "Pacific/Guam",
              "Pacific/Honolulu",
              "Pacific/Majuro",
              "Pacific/Midway",
              "Pacific/Midway",
              "Pacific/Noumea",
              "Pacific/Pago_Pago",
              "Pacific/Port_Moresby",
              "Pacific/Tongatapu"
            ],
            "default": "UTC",
            "x-example": "UTC",
            "x-example-value": "UTC",
            "x-default-value": "UTC"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The maximum number of results to return per page.",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "min_size",
            "type": "integer",
            "required": false,
            "description": "Trades must be larger or equal to this size.",
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/OptionTradesResult"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/options/{symbol}": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Options",
        "operationId": "get_options",
        "description": "Returns a list of all securities that have options listed and are tradable on a US market exchange. Useful to retrieve the entire universe.  Available via a 3rd party, contact sales for a trial.",
        "x-note": "Options with a leading or trailing integer are no longer optionable securities.",
        "x-history": "2008 to Present | Historical Data is sold by the Year",
        "x-data-type": "End of Day",
        "x-update-freq": "12PM UTC Daily",
        "x-data-source": "Options Reporting and Authority (OPRA)",
        "x-additional-comments": "If you have access to both Real-Time or 15-Minute Delayed options data and Historical End-of-Day options data, you might consider using this endpoint instead of the Real-Time Options Contract by Symbol endpoint.",
        "x-group": "Options Historical End of Day (Trade Alert)",
        "x-index": 1000,
        "x-sample-data-url": "/options/MSFT",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/us-historical-end-of-day-options-prices",
        "parameters": [
          {
            "in": "path",
            "name": "symbol",
            "description": "The option symbol, corresponding to the underlying security.",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "type",
            "description": "The option contract type.",
            "type": "string",
            "enum": [
              "call",
              "put"
            ],
            "x-example": "put",
            "x-example-value": "put",
            "required": false
          },
          {
            "in": "query",
            "name": "strike",
            "description": "The strike price of the option contract. This will return options contracts with strike price equal to this price.",
            "type": "number",
            "x-example": 170,
            "x-example-value": 170,
            "required": false,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "strike_greater_than",
            "description": "The strike price of the option contract. This will return options contracts with strike prices greater than this price.",
            "type": "number",
            "x-example": 150,
            "x-example-value": 150,
            "required": false,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "strike_less_than",
            "description": "The strike price of the option contract. This will return options contracts with strike prices less than this price.",
            "type": "number",
            "x-example": 190,
            "x-example-value": 190,
            "required": false,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "expiration",
            "description": "The expiration date of the option contract. This will return options contracts with expiration dates on this date.",
            "type": "string",
            "x-example": "2019-03-01",
            "x-example-value": "2019-03-01",
            "required": false,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "expiration_after",
            "description": "The expiration date of the option contract. This will return options contracts with expiration dates after this date.",
            "type": "string",
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01",
            "required": false,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "expiration_before",
            "description": "The expiration date of the option contract. This will return options contracts with expiration dates before this date.",
            "type": "string",
            "x-example": "2019-12-31",
            "x-example-value": "2019-12-31",
            "required": false,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseOptions"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/options/{symbol}/realtime": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Options by Symbol Realtime",
        "operationId": "get_options_by_symbol_realtime",
        "description": "Returns a list of all securities that have options listed and are tradable on a US market exchange. Useful to retrieve the entire universe.",
        "x-note": "Options with a leading or trailing integer are no longer optionable securities.",
        "x-history": "N/A",
        "x-data-type": "Realtime | 15-Min Delayed",
        "x-update-freq": "Intraday",
        "x-data-source": "Options Reporting and Authority (OPRA)",
        "x-additional-comments": "This endpoint is commonly used by users to retrieve and display the universe of optionable securities to their end users.",
        "x-group": "Options Real-Time",
        "x-index": 1005,
        "x-sample-data-url": "/options/MSFT/realtime",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/us-real-time-delayed-options-prices",
        "parameters": [
          {
            "in": "path",
            "name": "symbol",
            "description": "The option symbol, corresponding to the underlying security.",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "type",
            "description": "The option contract type.",
            "type": "string",
            "enum": [
              "call",
              "put"
            ],
            "x-example": "put",
            "x-example-value": "put",
            "required": false
          },
          {
            "in": "query",
            "name": "strike",
            "description": "The strike price of the option contract. This will return options contracts with strike price equal to this price.",
            "type": "number",
            "x-example": 170,
            "x-example-value": 170,
            "required": false,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "strike_greater_than",
            "description": "The strike price of the option contract. This will return options contracts with strike prices greater than this price.",
            "type": "number",
            "x-example": 150,
            "x-example-value": 150,
            "required": false,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "strike_less_than",
            "description": "The strike price of the option contract. This will return options contracts with strike prices less than this price.",
            "type": "number",
            "x-example": 190,
            "x-example-value": 190,
            "required": false,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "expiration",
            "description": "The expiration date of the option contract. This will return options contracts with expiration dates on this date.",
            "type": "string",
            "x-example": "2022-04-16",
            "x-example-value": "2022-04-16",
            "required": false,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "expiration_after",
            "description": "The expiration date of the option contract. This will return options contracts with expiration dates after this date.",
            "type": "string",
            "x-example": "2022-01-01",
            "x-example-value": "2022-01-01",
            "required": false,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "expiration_before",
            "description": "The expiration date of the option contract. This will return options contracts with expiration dates before this date.",
            "type": "string",
            "x-example": "2023-12-31",
            "x-example-value": "2023-12-31",
            "required": false,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "source",
            "description": "Realtime or 15-minute delayed contracts.",
            "type": "string",
            "enum": [
              "realtime",
              "delayed"
            ],
            "x-example": "~null",
            "x-example-value": "realtime",
            "required": false
          },
          {
            "in": "query",
            "name": "include_related_symbols",
            "description": "Include related symbols that end in a 1 or 2 because of a corporate action.",
            "type": "boolean",
            "required": false,
            "x-example": false,
            "x-example-value": false,
            "x-default-value": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseOptionsRealtime"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/owners": {
      "get": {
        "tags": [
          "Owners"
        ],
        "summary": "All Owners",
        "description": "Returns all owners and information for all insider and institutional owners of securities covered by Intrinio.",
        "operationId": "get_all_owners",
        "x-group": "Insider & Institutional Holdings Data",
        "x-index": 1000,
        "x-sample-data-url": "/owners",
        "x-documentation-url": "https://intrinio.com/docs/insider-institutional-holdings",
        "parameters": [
          {
            "in": "query",
            "name": "institutional",
            "description": "Returns insider owners who have filed forms 3, 4, or 5 with the SEC only. Possible values are true, false, or omit for both.",
            "type": "boolean",
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseOwners"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/owners/search": {
      "get": {
        "tags": [
          "Owners"
        ],
        "summary": "Search Owners",
        "operationId": "search_owners",
        "description": "Searches for Owners matching the text `query`",
        "x-group": "Insider & Institutional Holdings Data",
        "x-index": 1001,
        "x-sample-data-url": "/owners/search?query=Cook",
        "x-documentation-url": "https://intrinio.com/docs/insider-institutional-holdings",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "type": "string",
            "required": true,
            "x-example": "Cook",
            "x-example-value": "Cook",
            "x-default-value": "Cook"
          },
          {
            "in": "query",
            "name": "institutional",
            "description": "Returns insider owners who have filed forms 3, 4, or 5 with the SEC only. Possible values are true, false, or omit for both.",
            "type": "boolean",
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseOwners"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/owners/{identifier}": {
      "get": {
        "tags": [
          "Owners"
        ],
        "summary": "Owner by ID",
        "operationId": "get_owner_by_id",
        "description": "Returns the Owner with the given ID",
        "x-sample-data-url": "/owners/0000001800",
        "x-group": "Insider & Institutional Holdings Data",
        "x-index": 1002,
        "x-documentation-url": "https://intrinio.com/docs/insider-institutional-holdings",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "An Intrinio ID or CIK of an Owner",
            "type": "string",
            "required": true,
            "x-example": "0000001800",
            "x-example-value": "0000001800",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "owner"
            ]
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Owner"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/owners/{identifier}/insider_transaction_filings": {
      "get": {
        "tags": [
          "Owners"
        ],
        "summary": "Insider Transaction Filings by Owner",
        "operationId": "insider_transaction_filings_by_owner",
        "description": "Returns a list of all insider transaction filings by an owner in as many companies as the owner may be considered an insider. Criteria for being an insider include being a director, officer, or 10%+ owner in the company. Transactions are detailed for both non-derivative and derivative transactions by the insider.",
        "x-group": "Insider & Institutional Holdings Data",
        "x-index": 1006,
        "x-sample-data-url": "/owners/0001421669/insider_transaction_filings",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/insider-institutional-holdings",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "The Central Index Key issued by the SEC, which is the unique identifier all owner filings are issued under.",
            "type": "string",
            "required": true,
            "x-example": "0001494730",
            "x-example-value": "0001494730",
            "x-default-value": "0001494730",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "owner"
            ]
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return Owner's insider transaction filings on or after this date",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "2018-01-01",
            "x-example-value": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return Owner's insider transaction filings on or before this date",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseOwnerInsiderTransactionFilings"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/owners/{identifier}/institutional_holdings": {
      "get": {
        "tags": [
          "Owners"
        ],
        "summary": "Institutional Holdings by Owner",
        "operationId": "institutional_holdings_by_owner",
        "description": "Returns a list of all ownership interests and the value of their interests by a single institutional owner.",
        "x-group": "Insider & Institutional Holdings Data",
        "x-index": 1008,
        "x-sample-data-url": "/owners/0001511144/institutional_holdings",
        "x-documentation-url": "https://intrinio.com/docs/insider-institutional-holdings",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "The Central Index Key issued by the SEC, which is the unique identifier all owner filings are issued under.",
            "type": "string",
            "required": true,
            "x-example": 430692,
            "x-example-value": 430692,
            "x-default-value": 430692,
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "owner"
            ]
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "as_of_date",
            "type": "string",
            "format": "date",
            "description": "Return only holdings filed before this date.",
            "x-example": "2021-01-05"
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseOwnerInstitutionalHoldings"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "All Securities",
        "operationId": "get_all_securities",
        "description": "Returns a list of all securities available. Delisted securities included.",
        "x-history": "2007 to Present",
        "x-data-type": "End of Day",
        "x-update-freq": "5:00 PM EST Daily",
        "x-data-source": "OpenFIGI",
        "x-additional-comments": "Great for screening across the entire available security database for a specific universe of interest, or for creating your own security master. | Try using the `active` parameter to filter out delisted securities. | Try using the `name` parameter to search by security name. | Try using the `code` parameter to filter on a specific security type. | Try using the `exchage_mic` parameter to return a list of securities listed on a specific exchange.",
        "x-group": "Security Reference Data",
        "x-index": 1000,
        "x-sample-data-url": "/securities",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/security-reference-data",
        "parameters": [
          {
            "in": "query",
            "name": "active",
            "description": "When true, return securities that are active. When false, return securities that are not active. A security is considered active if it has traded or has had a corporate action in the past 30 days, and has not been merged into another security (such as due to ticker changes or corporate restructurings).",
            "type": "boolean",
            "required": false,
            "x-example": true,
            "x-example-value": true
          },
          {
            "in": "query",
            "name": "delisted",
            "description": "When true, return securities that have been delisted from their exchange. Note that there may be a newer security for the same company that has been relisted on a differente exchange. When false, return securities that have not been delisted.",
            "type": "boolean",
            "required": false,
            "x-example": false,
            "x-example-value": false
          },
          {
            "in": "query",
            "name": "code",
            "description": "Return securities classified with the given code (<a href=\"https://docs.intrinio.com/documentation/security_codes\" target=\"_blank\">reference</a>).",
            "type": "string",
            "required": false,
            "x-example": "~null",
            "x-example-value": "EQS"
          },
          {
            "in": "query",
            "name": "currency",
            "description": "Return securities traded in the given 3-digit ISO 4217 currency code (<a href=\"https://en.wikipedia.org/wiki/ISO_4217\" target=\"_blank\">reference</a>).",
            "type": "string",
            "required": false,
            "x-example": "~null",
            "x-example-value": "USD"
          },
          {
            "in": "query",
            "name": "ticker",
            "description": "Return securities traded with the given ticker. Note that securities across the world (and through time) may trade with the same ticker but represent different companies. Use this in conjuction with other parameters for more specificity.",
            "type": "string",
            "required": false,
            "x-example": "~null",
            "x-example-value": "AAPL"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Return securities with the given text in their name (not case sensitive).",
            "type": "string",
            "required": false,
            "x-example": "~null",
            "x-example-value": "biotech"
          },
          {
            "in": "query",
            "name": "composite_mic",
            "description": "Return securities classified under the composite exchange with the given Market Identification Code (MIC). A composite exchange may or may not be a real exchange.  For example, the USCOMP exchange (our only composite exchange to date) is a combination of exchanges with the following MICs: ARCX, XASE, XPOR, FINR, XCIS, XNAS, XNYS, BATS.  This composite grouping is done for user convenience.  At this time, all US securities are classified under the composite exchange with MIC USCOMP.  To query for specific US exchanges, use the exchange_mic parameter below.\n",
            "type": "string",
            "required": false,
            "x-example": "~null",
            "x-example-value": "USCOMP"
          },
          {
            "in": "query",
            "name": "exchange_mic",
            "description": "The MIC code of the exchange where the security is actually traded.",
            "type": "string",
            "required": false,
            "x-example": "~null",
            "x-example-value": "XNAS"
          },
          {
            "in": "query",
            "name": "stock_prices_after",
            "description": "Return securities with end-of-day stock prices on or after this date.",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "~null",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "stock_prices_before",
            "description": "Return securities with end-of-day stock prices on or before this date.",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "~null",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "cik",
            "description": "Return securities belonging to the company with the given Central Index Key (CIK).",
            "type": "string",
            "required": false,
            "x-example": "~null",
            "x-example-value": "0000320193"
          },
          {
            "in": "query",
            "name": "figi",
            "description": "Return securities with the given Exchange Level FIGI (<a href=\"https://www.openfigi.com/about\" target=\"_blank\">reference</a>).",
            "type": "string",
            "required": false,
            "x-example": "~null",
            "x-example-value": "BBG000B9Y5X2"
          },
          {
            "in": "query",
            "name": "composite_figi",
            "description": "Return securities with the given Country Composite FIGI (<a href=\"https://www.openfigi.com/about\" target=\"_blank\">reference</a>).",
            "type": "string",
            "required": false,
            "x-example": "~null",
            "x-example-value": "BBG000B9XRY4"
          },
          {
            "in": "query",
            "name": "share_class_figi",
            "description": "Return securities with the given Global Share Class FIGI (<a href=\"https://www.openfigi.com/about\" target=\"_blank\">reference</a>).",
            "type": "string",
            "required": false,
            "x-example": "~null",
            "x-example-value": "BBG001S5N8V8"
          },
          {
            "in": "query",
            "name": "figi_unique_id",
            "description": "Return securities with the given FIGI Unique ID (<a href=\"https://www.openfigi.com/about\" target=\"_blank\">reference</a>).",
            "type": "string",
            "required": false,
            "x-example": "~null",
            "x-example-value": "EQ0010169500001000"
          },
          {
            "in": "query",
            "name": "include_non_figi",
            "description": "When true, include securities that do not have a FIGI. By default, this is false. If this parameter is not specified, only securities with a FIGI are returned.",
            "type": "boolean",
            "required": false,
            "default": false,
            "x-example": false,
            "x-example-value": false
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "primary_listing",
            "type": "boolean",
            "required": false,
            "description": "If true, the Security is the primary issue for the company, otherwise it is a secondary issue on a secondary stock exchange.  Returns both if omitted.",
            "x-example": "~null",
            "x-example-value": false
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurities"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/history-by-identifier/{identifier}": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Security History By Identifier",
        "operationId": "get_security_history_by_identifier",
        "description": "Lists the tickers a company has used over time.",
        "x-history": "N/A",
        "x-data-type": "End of Day",
        "x-update-freq": "Rolling Basis - Intraday",
        "x-data-source": "SEC",
        "x-group": "Security Reference Data",
        "x-index": 1010,
        "x-sample-data-url": "/securities/history-by-identifier/037833100",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/get_security_history_by_identifier",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (FIGI, COMPOSITE FIGI, SHARE CLASS FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "037833100",
            "x-example-value": "037833100",
            "x-default-value": "037833100"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SecurityHistoryListResult"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/history-by-ticker/{ticker}": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Security History By Ticker",
        "operationId": "get_security_history_by_ticker",
        "description": "Lists the tickers a company has used over time.",
        "x-history": "N/A",
        "x-data-type": "End of Day",
        "x-update-freq": "Rolling Basis - Intraday",
        "x-data-source": "SEC",
        "x-group": "Security Reference Data",
        "x-index": 1010,
        "x-sample-data-url": "/securities/history-by-ticker/AAPL",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/get_security_history_by_ticker",
        "parameters": [
          {
            "in": "path",
            "name": "ticker",
            "description": "A Security ticker symbol",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SecurityHistoryListResult"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/market_movers": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Security Intervals Movers",
        "operationId": "get_security_interval_movers",
        "description": "Returns a list of intervals for the biggest movers over the last hour interval.",
        "x-history": "N/A",
        "x-data-type": "Realtime | 15-Min Delayed",
        "x-update-freq": "Intraday",
        "x-data-source": "IEX and NASDAQ Delayed SIP",
        "x-additional-comments": "This endpoint is commonly used by users to create candlestick graphs.",
        "x-group": "Historical Intraday Prices",
        "x-index": 1006,
        "x-sample-data-url": "/securities/market_movers",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/get_security_interval_movers",
        "parameters": [
          {
            "in": "query",
            "name": "source",
            "description": "Realtime or 15-minute delayed contracts.",
            "type": "string",
            "enum": [
              "realtime",
              "delayed",
              "nasdaq_basic",
              "nasdaq_basic_filtered",
              "nasdaq_basic_last_sale",
              "cboe_one_delayed",
              "iex",
              "iex_delayed"
            ],
            "x-example": "~null",
            "x-example-value": "realtime",
            "required": false
          },
          {
            "in": "query",
            "name": "open_time",
            "description": "The inclusive UTC date and time the interval opens at.",
            "type": "string",
            "format": "date-time",
            "x-example": "~null",
            "x-example-value": "2023-01-03T15:00:00.000+00:00",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SecurityIntervalsMoversResult"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/market_movers/change": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Security Intervals Movers By Change",
        "operationId": "get_security_interval_movers_change",
        "description": "Returns a list of intervals for the biggest movers by change over the last hour interval.",
        "x-history": "N/A",
        "x-data-type": "Realtime | 15-Min Delayed",
        "x-update-freq": "Intraday",
        "x-data-source": "IEX and NASDAQ Delayed SIP",
        "x-additional-comments": "This endpoint is commonly used by users to create candlestick graphs.",
        "x-group": "Historical Intraday Prices",
        "x-index": 1006,
        "x-sample-data-url": "/securities/market_movers/change",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/get_security_interval_movers_change",
        "parameters": [
          {
            "in": "query",
            "name": "source",
            "description": "Realtime or 15-minute delayed contracts.",
            "type": "string",
            "enum": [
              "realtime",
              "delayed",
              "nasdaq_basic",
              "nasdaq_basic_filtered",
              "nasdaq_basic_last_sale",
              "cboe_one_delayed",
              "iex",
              "iex_delayed"
            ],
            "x-example": "~null",
            "x-example-value": "realtime",
            "required": false
          },
          {
            "in": "query",
            "name": "open_time",
            "description": "The inclusive UTC date and time the interval opens at.",
            "type": "string",
            "format": "date-time",
            "x-example": "~null",
            "x-example-value": "2023-01-03T15:00:00.000+00:00",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SecurityIntervalsMoversResult"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/market_movers/volume": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Security Intervals Movers By Volume",
        "operationId": "get_security_interval_movers_volume",
        "description": "Returns a list of intervals for the biggest movers by volume over the last hour interval.",
        "x-history": "N/A",
        "x-data-type": "Realtime | 15-Min Delayed",
        "x-update-freq": "Intraday",
        "x-data-source": "IEX and NASDAQ Delayed SIP",
        "x-additional-comments": "This endpoint is commonly used by users to create candlestick graphs.",
        "x-group": "Historical Intraday Prices",
        "x-index": 1006,
        "x-sample-data-url": "/securities/market_movers/volume",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/get_security_interval_movers_volume",
        "parameters": [
          {
            "in": "query",
            "name": "source",
            "description": "Realtime or 15-minute delayed contracts.",
            "type": "string",
            "enum": [
              "realtime",
              "delayed",
              "nasdaq_basic",
              "nasdaq_basic_filtered",
              "nasdaq_basic_last_sale",
              "cboe_one_delayed",
              "iex",
              "iex_delayed"
            ],
            "x-example": "~null",
            "x-example-value": "realtime",
            "required": false
          },
          {
            "in": "query",
            "name": "open_time",
            "description": "The inclusive UTC date and time the interval opens at.",
            "type": "string",
            "format": "date-time",
            "x-example": "~null",
            "x-example-value": "2023-01-03T15:00:00.000+00:00",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SecurityIntervalsMoversResult"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/replay": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Security Replay File",
        "operationId": "get_security_replay_file",
        "description": "Returns a url where the requested replay file may be downloaded from.",
        "x-history": "N/A",
        "x-data-type": "Realtime | 15-Min Delayed",
        "x-update-freq": "Intraday",
        "x-data-source": "IEX, NASDAQ Basic, Delayed SIP",
        "x-additional-comments": "This endpoint is intended to be used by our websocket client SDKs to facilitate replaying a day's worth of data.",
        "x-group": "Real-Time Prices",
        "x-index": 1010,
        "x-sample-data-url": "/securities/replay?subsource=iex&date=2023-07-05",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/get_security_replay_file",
        "parameters": [
          {
            "in": "query",
            "name": "subsource",
            "description": "The specific source of the data being requested.",
            "type": "string",
            "enum": [
              "iex",
              "utp_delayed",
              "cta_a_delayed",
              "cta_b_delayed",
              "otc_delayed",
              "nasdaq_basic",
              "cboe_one",
              "iex_delayed",
              "cboe_one_delayed"
            ],
            "x-example": "~null",
            "x-example-value": "iex",
            "required": true
          },
          {
            "in": "query",
            "name": "date",
            "description": "The date for the data being requested.",
            "type": "string",
            "format": "date",
            "x-example": "~null",
            "x-example-value": "2023-07-05",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SecurityReplayFileResult"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/screen": {
      "post": {
        "tags": [
          "Security"
        ],
        "summary": "Screen Securities",
        "operationId": "screen_securities",
        "description": "Screen Securities using complex logic. Use POST only. See <a href=\"https://docs.intrinio.com/documentation/screener_v2\" target=\"_blank\">screener documentation</a> for details on how to construct conditions.",
        "x-group": "Screener",
        "x-index": 1000,
        "x-sample-data-url": "/securities/screen?order_column=marketcap&order_direction=asc",
        "x-sample-data-body": {
          "operator": "AND",
          "clauses": [
            {
              "field": "marketcap",
              "operator": "gt",
              "value": "1000000000"
            },
            {
              "field": "pricetoearnings",
              "operator": "lt",
              "value": "3"
            }
          ]
        },
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/security-screener-market-data",
        "x-screener-clause": true,
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "logic",
            "description": "The logic to screen with, consisting of operators, clauses, and nested groups. </br> See <a href=\"https://docs.intrinio.com/documentation/screener_v2\" target=\"_blank\">screener documentation</a> for details on how to construct conditions.",
            "schema": {
              "$ref": "#/definitions/SecurityScreenGroup"
            },
            "x-example-value": {
              "operator": "AND",
              "clauses": [
                {
                  "field": "marketcap",
                  "operator": "gt",
                  "value": "1000000000"
                },
                {
                  "field": "beta",
                  "operator": "lt",
                  "value": "5"
                }
              ]
            },
            "x-default-value": {
              "operator": "AND",
              "clauses": [
                {
                  "field": "marketcap",
                  "operator": "gt",
                  "value": "1000000000"
                },
                {
                  "field": "beta",
                  "operator": "lt",
                  "value": "5"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "order_column",
            "description": "Results returned sorted by this column",
            "type": "string",
            "required": false,
            "x-example": "marketcap",
            "x-example-value": "marketcap",
            "x-default-value": "marketcap"
          },
          {
            "in": "query",
            "name": "order_direction",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "description": "Sort order to use with the order_column",
            "required": false,
            "default": "asc",
            "x-example": "asc",
            "x-example-value": "asc",
            "x-default-value": "asc"
          },
          {
            "in": "query",
            "name": "primary_only",
            "description": "Return only primary securities",
            "type": "boolean",
            "default": false,
            "x-example": false
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return. Maximum for this endpoint is 50000.",
            "maximum": 50000,
            "default": 100,
            "x-example": 100
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SecurityScreenResult"
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/search": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Search Securities",
        "operationId": "search_securities",
        "description": "Search the securities database and return a list of securities matching the text query parameter passed through. Query parameter searches across the security ticker and name.",
        "x-history": "2007 to Present",
        "x-data-type": "End of Day",
        "x-update-freq": "5:00 PM EST Daily",
        "x-data-source": "OpenFIGI",
        "x-additional-comments": "This endpoint casts a wider net compared to the “name” parameter in the above “All Securities” endpoint. Rather than strictly searching through the security name, this endpoint searches across the security name and ticker to return a match in either.",
        "x-group": "Security Reference Data",
        "x-index": 1001,
        "x-sample-data-url": "/securities/search?query=Apple",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/security-reference-data",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "type": "string",
            "required": true,
            "x-example": "Apple",
            "x-example-value": "Apple",
            "x-default-value": "Apple"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecuritiesSearch"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/snapshots": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Realtime Stock Prices Snapshot",
        "description": "Returns all security snapshots for the queried interval with links to download.",
        "operationId": "get_security_snapshots",
        "x-group": "Real-Time Prices",
        "x-index": 1002,
        "x-sample-data-url": "/securities/snapshots",
        "x-data-type": "Realtime | 15-Min Delayed",
        "x-update-freq": "Intraday",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/securities-snapshot",
        "parameters": [
          {
            "in": "query",
            "name": "at_datetime",
            "description": "The UTC date and time (with url-encoded spaces) the snapshot will cover.",
            "type": "string",
            "format": "date-time",
            "x-example": "~null",
            "x-example-value": "2022-01-01T04:00:00.000-06:00",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SecuritySnapshotsResult"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/trades": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Security Trades",
        "operationId": "get_security_trades",
        "description": "Returns all trades between start time and end time, up to seven days ago for the specified source.",
        "x-history": "N/A",
        "x-data-type": "Realtime | 15-Min Delayed",
        "x-update-freq": "Intraday",
        "x-data-source": "IEX, NASDAQ Basic, Delayed SIP",
        "x-additional-comments": "This endpoint pages in time descending order to make gap resolution more efficient.",
        "x-group": "Real-Time Prices",
        "x-index": 1010,
        "x-sample-data-url": "/securities/trades?source=nasdaq_basic&start_date=2023-07-01&start_time=11:00:00.000&end_date=2023-07-01&end_time=12:00:00.000&timezone=UTC&page_size=100",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/get_security_trades",
        "parameters": [
          {
            "in": "query",
            "name": "source",
            "description": "The specific source of the data being requested.",
            "type": "string",
            "enum": [
              "nasdaq_basic",
              "iex",
              "cta_a_delayed",
              "cta_b_delayed",
              "utp_delayed",
              "otc_delayed",
              "cboe_one_delayed",
              "iex_delayed"
            ],
            "x-example": "~null",
            "x-example-value": "nasdaq_basic",
            "required": true
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "The start date for the data being requested.",
            "type": "string",
            "format": "date",
            "x-example": "~null",
            "x-example-value": "2023-07-05",
            "required": false
          },
          {
            "in": "query",
            "name": "start_time",
            "description": "The start time for the data being requested.",
            "type": "string",
            "x-example": "~null",
            "x-example-value": 39600.0,
            "required": false
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "The end date for the data being requested.",
            "type": "string",
            "format": "date",
            "x-example": "~null",
            "x-example-value": "2023-07-05",
            "required": false
          },
          {
            "in": "query",
            "name": "end_time",
            "description": "The end time for the data being requested.",
            "type": "string",
            "x-example": "~null",
            "x-example-value": 39600.0,
            "required": false
          },
          {
            "in": "query",
            "name": "timezone",
            "type": "string",
            "description": "The timezone the start and end date/times use.",
            "required": false,
            "enum": [
              "Africa/Algiers",
              "Africa/Cairo",
              "Africa/Casablanca",
              "Africa/Harare",
              "Africa/Johannesburg",
              "Africa/Monrovia",
              "Africa/Nairobi",
              "America/Argentina/Buenos_Aires",
              "America/Bogota",
              "America/Caracas",
              "America/Chicago",
              "America/Chihuahua",
              "America/Denver",
              "America/Godthab",
              "America/Guatemala",
              "America/Guyana",
              "America/Halifax",
              "America/Indiana/Indianapolis",
              "America/Juneau",
              "America/La_Paz",
              "America/Lima",
              "America/Lima",
              "America/Los_Angeles",
              "America/Mazatlan",
              "America/Mexico_City",
              "America/Mexico_City",
              "America/Monterrey",
              "America/Montevideo",
              "America/New_York",
              "America/Phoenix",
              "America/Regina",
              "America/Santiago",
              "America/Sao_Paulo",
              "America/St_Johns",
              "America/Tijuana",
              "Asia/Almaty",
              "Asia/Baghdad",
              "Asia/Baku",
              "Asia/Bangkok",
              "Asia/Bangkok",
              "Asia/Chongqing",
              "Asia/Colombo",
              "Asia/Dhaka",
              "Asia/Dhaka",
              "Asia/Hong_Kong",
              "Asia/Irkutsk",
              "Asia/Jakarta",
              "Asia/Jerusalem",
              "Asia/Kabul",
              "Asia/Kamchatka",
              "Asia/Karachi",
              "Asia/Karachi",
              "Asia/Kathmandu",
              "Asia/Kolkata",
              "Asia/Kolkata",
              "Asia/Kolkata",
              "Asia/Kolkata",
              "Asia/Krasnoyarsk",
              "Asia/Kuala_Lumpur",
              "Asia/Kuwait",
              "Asia/Magadan",
              "Asia/Muscat",
              "Asia/Muscat",
              "Asia/Novosibirsk",
              "Asia/Rangoon",
              "Asia/Riyadh",
              "Asia/Seoul",
              "Asia/Shanghai",
              "Asia/Singapore",
              "Asia/Srednekolymsk",
              "Asia/Taipei",
              "Asia/Tashkent",
              "Asia/Tbilisi",
              "Asia/Tehran",
              "Asia/Tokyo",
              "Asia/Tokyo",
              "Asia/Tokyo",
              "Asia/Ulaanbaatar",
              "Asia/Urumqi",
              "Asia/Vladivostok",
              "Asia/Yakutsk",
              "Asia/Yekaterinburg",
              "Asia/Yerevan",
              "Atlantic/Azores",
              "Atlantic/Cape_Verde",
              "Atlantic/South_Georgia",
              "Australia/Adelaide",
              "Australia/Brisbane",
              "Australia/Darwin",
              "Australia/Hobart",
              "Australia/Melbourne",
              "Australia/Melbourne",
              "Australia/Perth",
              "Australia/Sydney",
              "Etc/UTC",
              "UTC",
              "Europe/Amsterdam",
              "Europe/Athens",
              "Europe/Belgrade",
              "Europe/Berlin",
              "Europe/Berlin",
              "Europe/Bratislava",
              "Europe/Brussels",
              "Europe/Bucharest",
              "Europe/Budapest",
              "Europe/Copenhagen",
              "Europe/Dublin",
              "Europe/Helsinki",
              "Europe/Istanbul",
              "Europe/Kaliningrad",
              "Europe/Kiev",
              "Europe/Lisbon",
              "Europe/Ljubljana",
              "Europe/London",
              "Europe/London",
              "Europe/Madrid",
              "Europe/Minsk",
              "Europe/Moscow",
              "Europe/Moscow",
              "Europe/Paris",
              "Europe/Prague",
              "Europe/Riga",
              "Europe/Rome",
              "Europe/Samara",
              "Europe/Sarajevo",
              "Europe/Skopje",
              "Europe/Sofia",
              "Europe/Stockholm",
              "Europe/Tallinn",
              "Europe/Vienna",
              "Europe/Vilnius",
              "Europe/Volgograd",
              "Europe/Warsaw",
              "Europe/Zagreb",
              "Pacific/Apia",
              "Pacific/Auckland",
              "Pacific/Auckland",
              "Pacific/Chatham",
              "Pacific/Fakaofo",
              "Pacific/Fiji",
              "Pacific/Guadalcanal",
              "Pacific/Guam",
              "Pacific/Honolulu",
              "Pacific/Majuro",
              "Pacific/Midway",
              "Pacific/Midway",
              "Pacific/Noumea",
              "Pacific/Pago_Pago",
              "Pacific/Port_Moresby",
              "Pacific/Tongatapu"
            ],
            "default": "UTC",
            "x-example": "UTC",
            "x-example-value": "UTC",
            "x-default-value": "UTC"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The maximum number of results to return per page.",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "darkpool_only",
            "type": "boolean",
            "required": false,
            "description": "Set to true to show only darkpool trades",
            "default": false,
            "x-example": false
          },
          {
            "in": "query",
            "name": "min_size",
            "type": "integer",
            "required": false,
            "description": "Trades must be larger or equal to this size.",
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SecurityTradesResult"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Lookup Security",
        "description": "Returns security reference data such as ticker, FIGI, primary exchange, CIK, and a unique security identifier.",
        "x-history": "2007 to Present",
        "x-data-type": "End of Day",
        "x-update-freq": "5:00 PM EST Daily",
        "x-data-source": "OpenFIGI",
        "operationId": "get_security_by_id",
        "x-group": "Security Reference Data",
        "x-index": 1002,
        "x-sample-data-url": "/securities/AAPL",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/security-reference-data",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Security"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/data_point/{tag}/number": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Data Point (Number) for Security",
        "operationId": "get_security_data_point_number",
        "description": "Returns a numeric value for the given `tag` for the Security with the given `identifier`",
        "x-group": "Real-Time Prices",
        "x-index": 1003,
        "x-sample-data-url": "/securities/AAPL/data_point/close_price/number",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/us-real-time-prices",
        "produces": [
          "text/plain; charset=utf-8"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "path",
            "name": "tag",
            "description": "An Intrinio data tag ID or code (<a href='https://data.intrinio.com/data-tags'>reference</a>)",
            "type": "string",
            "required": true,
            "x-example": "close_price",
            "x-example-value": "close_price",
            "x-default-value": "close_price",
            "x-lookup-mode": "data_tag"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "number",
              "description": "The latest numeric value for an identifier/item combination"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        }
      }
    },
    "/securities/{identifier}/data_point/{tag}/text": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Data Point (Text) for Security",
        "operationId": "get_security_data_point_text",
        "description": "Returns a text value for the given `tag` for the Security with the given `identifier`",
        "x-group": "Security Reference Data",
        "x-index": 1006,
        "x-sample-data-url": "/securities/AAPL/data_point/figi/text",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/security-reference-data",
        "produces": [
          "text/plain; charset=utf-8"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "path",
            "name": "tag",
            "description": "An Intrinio data tag ID or code-name",
            "type": "string",
            "required": true,
            "x-example": "figi",
            "x-example-value": "figi",
            "x-default-value": "figi",
            "x-lookup-mode": "data_tag"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "string",
              "description": "The latest text value for an identifier/item combination"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        }
      }
    },
    "/securities/{identifier}/dividends/latest": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Latest Dividend Record for Security",
        "operationId": "get_security_latest_dividend_record",
        "description": "Returns the latest available dividend information for the Security with the given `identifier`",
        "x-group": "Corporate Events",
        "x-index": 1300,
        "x-sample-data-url": "/securities/AAPL/dividends/latest",
        "x-sandbox": true,
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DividendRecord"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/earnings/latest": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Latest Earnings Record for Security",
        "operationId": "get_security_latest_earnings_record",
        "description": "Returns latest available earnings information for the Security with the given `identifier`",
        "x-group": "Corporate Events",
        "x-index": 1310,
        "x-sample-data-url": "/securities/AAPL/earnings/latest",
        "x-sandbox": true,
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EarningsRecord"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/historical_data/{tag}": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Historical Data for Security",
        "operationId": "get_security_historical_data",
        "description": "Returns historical values for the given `tag` and the Security with the given `identifier`",
        "x-group": "Historical End of Day Prices",
        "x-index": 1004,
        "x-sample-data-url": "/securities/AAPL/historical_data/adj_close_price",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/us-historical-end-of-day-prices",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "path",
            "name": "tag",
            "description": "An Intrinio data tag ID or code (<a href='https://data.intrinio.com/data-tags'>reference</a>)",
            "type": "string",
            "required": true,
            "x-example": "adj_close_price",
            "x-example-value": "adj_close_price",
            "x-default-value": "adj_close_price",
            "x-lookup-mode": "data_tag"
          },
          {
            "in": "query",
            "name": "frequency",
            "description": "Return historical data in the given frequency",
            "type": "string",
            "enum": [
              "daily",
              "weekly",
              "monthly",
              "quarterly",
              "yearly"
            ],
            "default": "daily",
            "x-example": "daily",
            "x-available": "true",
            "required": false
          },
          {
            "in": "query",
            "name": "type",
            "type": "string",
            "description": "Filter by type, when applicable",
            "required": false,
            "x-example": "~null",
            "x-available": "true"
          },
          {
            "in": "query",
            "name": "start_date",
            "type": "string",
            "format": "date",
            "required": false,
            "description": "Get historical data on or after this date",
            "x-example": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "type": "string",
            "description": "Get historical date on or before this date",
            "format": "date",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "sort_order",
            "type": "string",
            "description": "Sort by date `asc` or `desc`",
            "enum": [
              "asc",
              "desc"
            ],
            "default": "desc",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityHistoricalData"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/institutional_ownership": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Institutional Ownership by Security",
        "operationId": "get_security_insider_ownership",
        "description": "Returns a list of all institutional owners of a given security.",
        "x-group": "Insider & Institutional Holdings Data",
        "x-index": 1007,
        "x-sample-data-url": "/securities/AAPL/institutional_ownership",
        "x-documentation-url": "https://intrinio.com/docs/insider-institutional-holdings",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityInstitutionalOwnership"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Stock Prices by Security",
        "operationId": "get_security_stock_prices",
        "description": "Return end-of-day stock prices for the Security with the given `identifier`",
        "x-group": "Historical End of Day Prices",
        "x-index": 1000,
        "x-sample-data-url": "/securities/AAPL/prices",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/us-historical-end-of-day-prices",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us",
              "security_intl"
            ]
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return prices on or after the date",
            "type": "string",
            "format": "date",
            "x-example": "2018-01-01",
            "required": false
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return prices on or before the date",
            "type": "string",
            "format": "date",
            "x-example": "2019-01-01",
            "required": false
          },
          {
            "in": "query",
            "name": "frequency",
            "description": "Return stock prices in the given frequency",
            "type": "string",
            "enum": [
              "daily",
              "weekly",
              "monthly",
              "quarterly",
              "yearly"
            ],
            "default": "daily",
            "x-example": "daily",
            "required": false
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityStockPrices"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices/adjustments": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Stock Price Adjustments by Security",
        "operationId": "get_security_stock_price_adjustments",
        "description": "Returns stock price adjustments for the Security with the given `identifier`",
        "x-group": "Historical End of Day Prices",
        "x-index": 1001,
        "x-sample-data-url": "/securities/AAPL/prices/adjustments",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/us-historical-end-of-day-prices",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return price adjustments on or after the date",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return price adjustments on or before the date",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "2019-01-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityStockPriceAdjustments"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices/adjustments/dividends": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Dividends by Security",
        "operationId": "get_security_stock_price_adjustments_dividends",
        "description": "Returns dividend price adjustments for the Security with the given `identifier`. A filtered api of /securities/{identifier}/prices/adjustments.",
        "x-group": "Historical End of Day Prices",
        "x-index": 1001,
        "x-sample-data-url": "/securities/AAPL/prices/adjustments/dividends",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/us-historical-end-of-day-prices",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return price adjustments on or after the date",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return price adjustments on or before the date",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "2019-01-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityStockPriceAdjustments"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices/adjustments/splits": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Splits by Security",
        "operationId": "get_security_stock_price_adjustments_splits",
        "description": "Returns stock price split adjustments for the Security with the given `identifier`.  A filtered api of /securities/{identifier}/prices/adjustments.",
        "x-group": "Historical End of Day Prices",
        "x-index": 1001,
        "x-sample-data-url": "/securities/AAPL/prices/adjustments/splits",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/us-historical-end-of-day-prices",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return price adjustments on or after the date",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return price adjustments on or before the date",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "2019-01-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityStockPriceAdjustments"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices/intervals": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Interval Stock Prices for Security",
        "operationId": "get_security_interval_prices",
        "description": "Return open, close, high, low, volume, average price, and change ratio for a particular interval for the Security with the given `identifier`",
        "x-group": "Historical Intraday Prices",
        "x-index": 1103,
        "x-sample-data-url": "/securities/AAPL/prices/intervals",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/us-historical-intraday-prices",
        "x-datetime-parse": true,
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "source",
            "enum": [
              "realtime",
              "delayed",
              "nasdaq_basic",
              "nasdaq_basic_filtered",
              "nasdaq_basic_last_sale",
              "cboe_one"
            ],
            "type": "string",
            "required": false,
            "description": "Return intervals from the specified data source",
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return intervals starting at the specified date",
            "type": "string",
            "format": "date",
            "x-example": "2023-01-01",
            "x-example-value": "2023-01-01",
            "required": false
          },
          {
            "in": "query",
            "name": "start_time",
            "description": "Return intervals starting at the specified time on the `start_date` (24-hour in 'hh:mm:ss' format)",
            "type": "string",
            "x-example": 33300,
            "x-example-value": 33300,
            "required": false
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return intervals stopping at the specified date",
            "type": "string",
            "format": "date",
            "x-example": "2023-02-01",
            "x-example-value": "2023-02-01",
            "required": false
          },
          {
            "in": "query",
            "name": "end_time",
            "description": "Return intervals stopping at the specified time on the `end_date` (24-hour in 'hh:mm:ss' format)",
            "type": "string",
            "x-example": 33300,
            "x-example-value": 33300,
            "required": false
          },
          {
            "in": "query",
            "name": "timezone",
            "type": "string",
            "description": "Interprets the input times in this time zone, as well as returns times in this timezone.",
            "required": false,
            "enum": [
              "Africa/Algiers",
              "Africa/Cairo",
              "Africa/Casablanca",
              "Africa/Harare",
              "Africa/Johannesburg",
              "Africa/Monrovia",
              "Africa/Nairobi",
              "America/Argentina/Buenos_Aires",
              "America/Bogota",
              "America/Caracas",
              "America/Chicago",
              "America/Chihuahua",
              "America/Denver",
              "America/Godthab",
              "America/Guatemala",
              "America/Guyana",
              "America/Halifax",
              "America/Indiana/Indianapolis",
              "America/Juneau",
              "America/La_Paz",
              "America/Lima",
              "America/Lima",
              "America/Los_Angeles",
              "America/Mazatlan",
              "America/Mexico_City",
              "America/Mexico_City",
              "America/Monterrey",
              "America/Montevideo",
              "America/New_York",
              "America/Phoenix",
              "America/Regina",
              "America/Santiago",
              "America/Sao_Paulo",
              "America/St_Johns",
              "America/Tijuana",
              "Asia/Almaty",
              "Asia/Baghdad",
              "Asia/Baku",
              "Asia/Bangkok",
              "Asia/Bangkok",
              "Asia/Chongqing",
              "Asia/Colombo",
              "Asia/Dhaka",
              "Asia/Dhaka",
              "Asia/Hong_Kong",
              "Asia/Irkutsk",
              "Asia/Jakarta",
              "Asia/Jerusalem",
              "Asia/Kabul",
              "Asia/Kamchatka",
              "Asia/Karachi",
              "Asia/Karachi",
              "Asia/Kathmandu",
              "Asia/Kolkata",
              "Asia/Kolkata",
              "Asia/Kolkata",
              "Asia/Kolkata",
              "Asia/Krasnoyarsk",
              "Asia/Kuala_Lumpur",
              "Asia/Kuwait",
              "Asia/Magadan",
              "Asia/Muscat",
              "Asia/Muscat",
              "Asia/Novosibirsk",
              "Asia/Rangoon",
              "Asia/Riyadh",
              "Asia/Seoul",
              "Asia/Shanghai",
              "Asia/Singapore",
              "Asia/Srednekolymsk",
              "Asia/Taipei",
              "Asia/Tashkent",
              "Asia/Tbilisi",
              "Asia/Tehran",
              "Asia/Tokyo",
              "Asia/Tokyo",
              "Asia/Tokyo",
              "Asia/Ulaanbaatar",
              "Asia/Urumqi",
              "Asia/Vladivostok",
              "Asia/Yakutsk",
              "Asia/Yekaterinburg",
              "Asia/Yerevan",
              "Atlantic/Azores",
              "Atlantic/Cape_Verde",
              "Atlantic/South_Georgia",
              "Australia/Adelaide",
              "Australia/Brisbane",
              "Australia/Darwin",
              "Australia/Hobart",
              "Australia/Melbourne",
              "Australia/Melbourne",
              "Australia/Perth",
              "Australia/Sydney",
              "Etc/UTC",
              "UTC",
              "Europe/Amsterdam",
              "Europe/Athens",
              "Europe/Belgrade",
              "Europe/Berlin",
              "Europe/Berlin",
              "Europe/Bratislava",
              "Europe/Brussels",
              "Europe/Bucharest",
              "Europe/Budapest",
              "Europe/Copenhagen",
              "Europe/Dublin",
              "Europe/Helsinki",
              "Europe/Istanbul",
              "Europe/Kaliningrad",
              "Europe/Kiev",
              "Europe/Lisbon",
              "Europe/Ljubljana",
              "Europe/London",
              "Europe/London",
              "Europe/Madrid",
              "Europe/Minsk",
              "Europe/Moscow",
              "Europe/Moscow",
              "Europe/Paris",
              "Europe/Prague",
              "Europe/Riga",
              "Europe/Rome",
              "Europe/Samara",
              "Europe/Sarajevo",
              "Europe/Skopje",
              "Europe/Sofia",
              "Europe/Stockholm",
              "Europe/Tallinn",
              "Europe/Vienna",
              "Europe/Vilnius",
              "Europe/Volgograd",
              "Europe/Warsaw",
              "Europe/Zagreb",
              "Pacific/Apia",
              "Pacific/Auckland",
              "Pacific/Auckland",
              "Pacific/Chatham",
              "Pacific/Fakaofo",
              "Pacific/Fiji",
              "Pacific/Guadalcanal",
              "Pacific/Guam",
              "Pacific/Honolulu",
              "Pacific/Majuro",
              "Pacific/Midway",
              "Pacific/Midway",
              "Pacific/Noumea",
              "Pacific/Pago_Pago",
              "Pacific/Port_Moresby",
              "Pacific/Tongatapu"
            ],
            "default": "UTC",
            "x-example": "UTC",
            "x-example-value": "UTC",
            "x-default-value": "UTC"
          },
          {
            "in": "query",
            "name": "interval_size",
            "enum": [
              "1m",
              "5m",
              "10m",
              "15m",
              "30m",
              "60m",
              "1h"
            ],
            "type": "string",
            "required": true,
            "description": "The interval size to return in minutes (m) or hour (h).",
            "default": "5m",
            "x-example": "15m",
            "x-example-value": "60m"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return per page.",
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "split_adjusted",
            "type": "boolean",
            "description": "Whether to return the values adjusted for splits or not. Default is false.",
            "x-example": false,
            "default": false,
            "required": false
          },
          {
            "in": "query",
            "name": "include_quote_only_bars",
            "type": "boolean",
            "description": "If true, also include bars where no trades occurred but quotes did.",
            "x-example": false,
            "default": false,
            "required": false
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityIntervalPrices"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices/realtime": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Realtime Stock Price for Security",
        "operationId": "get_security_realtime_price",
        "description": "Return the realtime stock price for the Security with the given `identifier`",
        "x-group": "Real-Time Prices",
        "x-index": 1000,
        "x-sample-data-url": "/securities/AAPL/prices/realtime",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/us-real-time-prices",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "source",
            "type": "array",
            "required": false,
            "collectionFormat": "csv",
            "description": "Return the realtime price from the specified comma-delimited data sources. If no source is specified, the best source available is used.",
            "items": {
              "type": "string",
              "enum": [
                "iex",
                "iex_delayed",
                "utp_delayed",
                "cta_a_delayed",
                "cta_b_delayed",
                "otc_delayed",
                "delayed_sip",
                "nasdaq_basic",
                "cboe_one_delayed"
              ]
            },
            "default": "~null",
            "x-example": "iex,delayed_sip",
            "x-example-value": "iex,delayed_sip"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RealtimeStockPrice"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices/technicals/adi": {
      "get": {
        "tags": [
          "Security",
          "Technical"
        ],
        "summary": "Accumulation/Distribution Index",
        "operationId": "get_security_price_technicals_adi",
        "description": "The Accumulation / Distribution Indicator is a volume-based technical indicator which uses the relationship between the stock`s price and volume flow to determine the underlying trend of a stock, up, down, or sideways trend of a stock.",
        "x-history": "History is available back to the 1960s for actively trading securities (where applicable) and 2007 for delisted securities.",
        "x-data-type": "End of Day",
        "x-update-freq": "5:00 PM EST Daily",
        "x-data-source": "Intrinio",
        "x-group": "Technical Indicators",
        "x-index": 1400,
        "x-sample-data-url": "/securities/AAPL/prices/technicals/adi",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/technical-indicators",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return technical indicator values on or after the date",
            "type": "string",
            "required": false,
            "x-example": "2018-01-01",
            "x-example-value": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return technical indicator values on or before the date",
            "type": "string",
            "required": false,
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of results to return",
            "type": "integer",
            "maximum": 10000,
            "default": 100,
            "x-example": 100,
            "x-example-value": 100,
            "x-default-value": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityAccumulationDistributionIndex"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices/technicals/adtv": {
      "get": {
        "tags": [
          "Security",
          "Technical"
        ],
        "summary": "Average Daily Trading Volume",
        "operationId": "get_security_price_technicals_adtv",
        "description": "Average Daily Trading Volume is the average number of shares traded over a given period, usually between 20 to 30 trading days.",
        "x-history": "History is available back to the 1960s for actively trading securities (where applicable) and 2007 for delisted securities.",
        "x-data-type": "End of Day",
        "x-update-freq": "5:00 PM EST Daily",
        "x-data-source": "Intrinio",
        "x-group": "Technical Indicators",
        "x-index": 1402,
        "x-sample-data-url": "/securities/AAPL/prices/technicals/adtv",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/technical-indicators",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "period",
            "description": "The number of observations to calculate Average Daily Trading Volume",
            "type": "integer",
            "required": false,
            "default": 22,
            "minimum": 5,
            "x-default-value": 22,
            "x-example": 22,
            "x-example-value": 22
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return technical indicator values on or after the date",
            "type": "string",
            "required": false,
            "x-example": "2018-01-01",
            "x-example-value": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return technical indicator values on or before the date",
            "type": "string",
            "required": false,
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of results to return",
            "type": "integer",
            "maximum": 10000,
            "default": 100,
            "x-example": 100,
            "x-example-value": 100,
            "x-default-value": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityAverageDailyTradingVolume"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices/technicals/adx": {
      "get": {
        "tags": [
          "Security",
          "Technical"
        ],
        "summary": "Average Directional Index",
        "operationId": "get_security_price_technicals_adx",
        "description": "The Average Directional Index indicator is often used to identify decreasing or increasing price momentum for an underlying security, it is composed of a total of three indicators, the current trendline (adx), a positive directional indicator (di_pos), and a negative directional indicator (di_neg).",
        "x-note": "None",
        "x-history": "History is available back to the 1960s for actively trading securities (where applicable) and 2007 for delisted securities.",
        "x-data-type": "End of Day",
        "x-update-freq": "5:00 PM EST Daily",
        "x-data-source": "Intrinio",
        "x-additional-comments": "None",
        "x-group": "Technical Indicators",
        "x-index": 1403,
        "x-sample-data-url": "/securities/AAPL/prices/technicals/adx",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/technical-indicators",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "period",
            "description": "The number of observations to calculate Average Directional Index",
            "type": "integer",
            "required": false,
            "minimum": 3,
            "default": 14,
            "x-default-value": 14,
            "x-example": 14,
            "x-example-value": 14
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return technical indicator values on or after the date",
            "type": "string",
            "required": false,
            "x-example": "2018-01-01",
            "x-example-value": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return technical indicator values on or before the date",
            "type": "string",
            "required": false,
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of results to return",
            "type": "integer",
            "maximum": 10000,
            "default": 100,
            "x-example": 100,
            "x-example-value": 100,
            "x-default-value": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityAverageDirectionalIndex"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices/technicals/ao": {
      "get": {
        "tags": [
          "Security",
          "Technical"
        ],
        "summary": "Awesome Oscillator",
        "operationId": "get_security_price_technicals_ao",
        "description": "The Awesome Oscillator (ao) is a momentum indicator and is calculated by taking the difference between the latest 5 period simple moving average and the 34 period simple moving average. Rather than using the closing price like other indicators, the Awesome Oscillator uses the latest period`s midpoint value (period_high - period_low / 2). The Awesome Oscillator is useful in identifying and trading, zero-line crossovers, twin-peaks trading, and bullish/bearish saucers - Awesome Oscillator is often aggregated with additional technical indicators.",
        "x-history": "History is available back to the 1960s for actively trading securities (where applicable) and 2007 for delisted securities.",
        "x-data-type": "End of Day",
        "x-update-freq": "5:00 PM EST Daily",
        "x-data-source": "Intrinio",
        "x-group": "Technical Indicators",
        "x-index": 1404,
        "x-sample-data-url": "/securities/AAPL/prices/technicals/ao",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/technical-indicators",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "short_period",
            "description": "The number of observations to calculate short period Simple Moving Average of the Awesome Oscillator",
            "type": "integer",
            "required": false,
            "default": 5,
            "x-default-value": 5,
            "x-example": 5,
            "x-example-value": 5
          },
          {
            "in": "query",
            "name": "long_period",
            "description": "The number of observations to calculate long period Simple Moving Average of the Awesome Oscillator",
            "type": "integer",
            "required": false,
            "minimum": 5,
            "default": 34,
            "x-default-value": 34,
            "x-example": 34,
            "x-example-value": 34
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return technical indicator values on or after the date",
            "type": "string",
            "required": false,
            "x-example": "2018-01-01",
            "x-example-value": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return technical indicator values on or before the date",
            "type": "string",
            "required": false,
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of results to return",
            "type": "integer",
            "maximum": 10000,
            "default": 100,
            "x-example": 100,
            "x-example-value": 100,
            "x-default-value": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityAwesomeOscillator"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices/technicals/atr": {
      "get": {
        "tags": [
          "Security",
          "Technical"
        ],
        "summary": "Average True Range",
        "operationId": "get_security_price_technicals_atr",
        "description": "The Average True Range (ATR) is a non-directional market volatility indicator often used to generate stop-out or entry indications. An increasing or expanding ATR typically indicates higher volatility, and a decreasing ATR indicates sideways price action and lower volatility.",
        "x-history": "History is available back to the 1960s for actively trading securities (where applicable) and 2007 for delisted securities.",
        "x-data-type": "End of Day",
        "x-update-freq": "5:00 PM EST Daily",
        "x-data-source": "Intrinio",
        "x-group": "Technical Indicators",
        "x-index": 1405,
        "x-sample-data-url": "/securities/AAPL/prices/technicals/atr",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/technical-indicators",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "period",
            "description": "The number of observations to calculate Average True Range",
            "type": "integer",
            "required": false,
            "minimum": 4,
            "default": 14,
            "x-default-value": 14,
            "x-example": 14,
            "x-example-value": 14
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return technical indicator values on or after the date",
            "type": "string",
            "required": false,
            "x-example": "2018-01-01",
            "x-example-value": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return technical indicator values on or before the date",
            "type": "string",
            "required": false,
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of results to return",
            "type": "integer",
            "maximum": 10000,
            "default": 100,
            "x-example": 100,
            "x-example-value": 100,
            "x-default-value": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityAverageTrueRange"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices/technicals/bb": {
      "get": {
        "tags": [
          "Security",
          "Technical"
        ],
        "summary": "Bollinger Bands",
        "operationId": "get_security_price_technicals_bb",
        "description": "Bollinger Bands can be a useful technical analysis tool for generating oversold or overbought indicators. Bollinger Bands are composed of three lines, a simple moving average (middle band) and an upper and lower band – the upper and lower bands are typically 2 standard deviations +/- from a 20-day simple moving average, but can be modified. Traders typically consider an underlying security to be overbought as the underlying`s price moves towards the upper band and oversold as the underlying price moves towards the lower band.",
        "x-history": "History is available back to the 1960s for actively trading securities (where applicable) and 2007 for delisted securities.",
        "x-data-type": "End of Day",
        "x-update-freq": "5:00 PM EST Daily",
        "x-data-source": "Intrinio",
        "x-group": "Technical Indicators",
        "x-index": 1406,
        "x-sample-data-url": "/securities/AAPL/prices/technicals/bb",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/technical-indicators",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "period",
            "description": "The number of observations to calculate Bollinger Bands",
            "type": "integer",
            "required": false,
            "default": 20,
            "minimum": 5,
            "x-default-value": 20,
            "x-example": 20,
            "x-example-value": 20
          },
          {
            "in": "query",
            "name": "standard_deviations",
            "description": "The number of standard deviations to calculate the upper and lower bands of the Bollinger Bands",
            "type": "number",
            "format": "float",
            "required": false,
            "default": 2.0,
            "x-default-value": 2.0,
            "x-example": 2.0,
            "x-example-value": 2.0
          },
          {
            "in": "query",
            "name": "price_key",
            "description": "The Stock Price field to use when calculating Bollinger Bands",
            "type": "string",
            "required": false,
            "enum": [
              "open",
              "high",
              "low",
              "close",
              "volume"
            ],
            "default": "close",
            "x-default-value": "close",
            "x-example": "close",
            "x-example-value": "close"
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return technical indicator values on or after the date",
            "type": "string",
            "required": false,
            "x-example": "2018-01-01",
            "x-example-value": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return technical indicator values on or before the date",
            "type": "string",
            "required": false,
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of results to return",
            "type": "integer",
            "maximum": 10000,
            "default": 100,
            "x-example": 100,
            "x-example-value": 100,
            "x-default-value": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityBollingerBands"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices/technicals/cci": {
      "get": {
        "tags": [
          "Security",
          "Technical"
        ],
        "summary": "Commodity Channel Index",
        "operationId": "get_security_price_technicals_cci",
        "description": "The Commodity Channel Index (CCI) is a technical indicator used to generate buy and sell signals by indicating periods of strength and weakness in the market. CCI signals that fall below -100 are often perceived as weakness in the underlying price movement and CCI signals that rise above 100 indicate strength behind the underlying price movement.",
        "x-history": "History is available back to the 1960s for actively trading securities (where applicable) and 2007 for delisted securities.",
        "x-data-type": "End of Day",
        "x-update-freq": "5:00 PM EST Daily",
        "x-data-source": "Intrinio",
        "x-group": "Technical Indicators",
        "x-index": 1407,
        "x-sample-data-url": "/securities/AAPL/prices/technicals/cci",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/technical-indicators",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "period",
            "description": "The number of observations to calculate Commodity Channel Index",
            "type": "integer",
            "required": false,
            "default": 20,
            "minimum": 5,
            "x-default-value": 20,
            "x-example": 20,
            "x-example-value": 20
          },
          {
            "in": "query",
            "name": "constant",
            "description": "The number of observations to calculate Commodity Channel Index",
            "type": "number",
            "format": "float",
            "required": false,
            "default": 0.015,
            "x-default-value": 0.015,
            "x-example": 0.015,
            "x-example-value": 0.015
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return technical indicator values on or after the date",
            "type": "string",
            "required": false,
            "x-example": "2018-01-01",
            "x-example-value": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return technical indicator values on or before the date",
            "type": "string",
            "required": false,
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of results to return",
            "type": "integer",
            "maximum": 10000,
            "default": 100,
            "x-example": 100,
            "x-example-value": 100,
            "x-default-value": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityCommodityChannelIndex"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices/technicals/cmf": {
      "get": {
        "tags": [
          "Security",
          "Technical"
        ],
        "summary": "Chaikin Money Flow",
        "operationId": "get_security_price_technicals_cmf",
        "description": "The Chaikin Money Flow (CMF) utilizes exponential moving averages as an indicator to monitor the flow of money and momentum. The CMF indicator oscillates around a midrange 0-line and ranges between 100 and -100.",
        "x-history": "History is available back to the 1960s for actively trading securities (where applicable) and 2007 for delisted securities.",
        "x-data-type": "End of Day",
        "x-update-freq": "5:00 PM EST Daily",
        "x-data-source": "Intrinio",
        "x-group": "Technical Indicators",
        "x-index": 1408,
        "x-sample-data-url": "/securities/AAPL/prices/technicals/cmf",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/technical-indicators",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "period",
            "description": "The number of observations to calculate Chaikin Money Flow",
            "type": "integer",
            "required": false,
            "default": 20,
            "minimum": 5,
            "x-default-value": 20,
            "x-example": 20,
            "x-example-value": 20
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return technical indicator values on or after the date",
            "type": "string",
            "required": false,
            "x-example": "2018-01-01",
            "x-example-value": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return technical indicator values on or before the date",
            "type": "string",
            "required": false,
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of results to return",
            "type": "integer",
            "maximum": 10000,
            "default": 100,
            "x-example": 100,
            "x-example-value": 100,
            "x-default-value": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityChaikinMoneyFlow"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices/technicals/dc": {
      "get": {
        "tags": [
          "Security",
          "Technical"
        ],
        "summary": "Donchian Channel",
        "operationId": "get_security_price_technicals_dc",
        "description": "The Donchian Channel consists of an Upper Bound (upper_bound) and Lower Bound (lower_bound) that track the recent highs and lows and is often used to signal entry and exit points for a position. As the price of the underlying symbol increases the Upper Bound raises, if the price becomes range bound the Upper Bound will remain flat and if the price begins to decrease, the Upper Bound will fall (and vice-versa for the Lower Bound).",
        "x-history": "History is available back to the 1960s for actively trading securities (where applicable) and 2007 for delisted securities.",
        "x-data-type": "End of Day",
        "x-update-freq": "5:00 PM EST Daily",
        "x-data-source": "Intrinio",
        "x-group": "Technical Indicators",
        "x-index": 1410,
        "x-sample-data-url": "/securities/AAPL/prices/technicals/dc",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/technical-indicators",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "period",
            "description": "The number of observations to calculate Donchian Channel",
            "type": "integer",
            "required": false,
            "default": 20,
            "minimum": 5,
            "x-default-value": 20,
            "x-example": 20,
            "x-example-value": 20
          },
          {
            "in": "query",
            "name": "price_key",
            "description": "The Stock Price field to use when calculating Donchian Channel",
            "type": "string",
            "required": false,
            "enum": [
              "open",
              "high",
              "low",
              "close",
              "volume"
            ],
            "default": "close",
            "x-default-value": "close",
            "x-example": "close",
            "x-example-value": "close"
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return technical indicator values on or after the date",
            "type": "string",
            "required": false,
            "x-example": "2018-01-01",
            "x-example-value": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return technical indicator values on or before the date",
            "type": "string",
            "required": false,
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of results to return",
            "type": "integer",
            "maximum": 10000,
            "default": 100,
            "x-example": 100,
            "x-example-value": 100,
            "x-default-value": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityDonchianChannel"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices/technicals/dpo": {
      "get": {
        "tags": [
          "Security",
          "Technical"
        ],
        "summary": "Detrended Price Oscillator",
        "operationId": "get_security_price_technicals_dpo",
        "description": "The Detrended Price Oscillator (DPO) signals the peaks and troughs of the underlying symbol’s price for a set period of time and is often used by traders to estimate future peaks and troughs using this as guidance to enter or exit a position.",
        "x-history": "History is available back to the 1960s for actively trading securities (where applicable) and 2007 for delisted securities.",
        "x-data-type": "End of Day",
        "x-update-freq": "5:00 PM EST Daily",
        "x-data-source": "Intrinio",
        "x-group": "Technical Indicators",
        "x-index": 1412,
        "x-sample-data-url": "/securities/AAPL/prices/technicals/dpo",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/technical-indicators",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "period",
            "description": "The number of observations to calculate Detrended Price Oscillator",
            "type": "integer",
            "required": false,
            "default": 20,
            "x-default-value": 20,
            "x-example": 20,
            "x-example-value": 20
          },
          {
            "in": "query",
            "name": "price_key",
            "description": "The Stock Price field to use when calculating Detrended Price Oscillator",
            "type": "string",
            "required": false,
            "enum": [
              "open",
              "high",
              "low",
              "close",
              "volume"
            ],
            "default": "close",
            "x-default-value": "close",
            "x-example": "close",
            "x-example-value": "close"
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return technical indicator values on or after the date",
            "type": "string",
            "required": false,
            "x-example": "2018-01-01",
            "x-example-value": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return technical indicator values on or before the date",
            "type": "string",
            "required": false,
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of results to return",
            "type": "integer",
            "maximum": 10000,
            "default": 100,
            "x-example": 100,
            "x-example-value": 100,
            "x-default-value": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityDetrendedPriceOscillator"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices/technicals/eom": {
      "get": {
        "tags": [
          "Security",
          "Technical"
        ],
        "summary": "Ease of Movement",
        "operationId": "get_security_price_technicals_eom",
        "description": "The Ease of Movement (EOM) is a volume based oscillator that fluctuates around a midrange 0-line into positive and negative values. Positive values indicate that the underlying symbol`s price is rising with relative ease and negative value indicates the underlying symbol`s price is failing with relative ease.",
        "x-history": "History is available back to the 1960s for actively trading securities (where applicable) and 2007 for delisted securities.",
        "x-data-type": "End of Day",
        "x-update-freq": "5:00 PM EST Daily",
        "x-data-source": "Intrinio",
        "x-group": "Technical Indicators",
        "x-index": 1414,
        "x-sample-data-url": "/securities/AAPL/prices/technicals/eom",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/technical-indicators",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "period",
            "description": "The number of observations to calculate Ease of Movement",
            "type": "integer",
            "required": false,
            "default": 20,
            "minimum": 4,
            "x-default-value": 20,
            "x-example": 20,
            "x-example-value": 20
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return technical indicator values on or after the date",
            "type": "string",
            "required": false,
            "x-example": "2018-01-01",
            "x-example-value": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return technical indicator values on or before the date",
            "type": "string",
            "required": false,
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of results to return",
            "type": "integer",
            "maximum": 10000,
            "default": 100,
            "x-example": 100,
            "x-example-value": 100,
            "x-default-value": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityEaseOfMovement"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices/technicals/fi": {
      "get": {
        "tags": [
          "Security",
          "Technical"
        ],
        "summary": "Force Index",
        "operationId": "get_security_price_technicals_fi",
        "description": "The Force Index (FI) is an oscillator that takes into account the intensity of an underlying symbol`s price movement and its corresponding volume. It is used to confirm price breakouts and signal underlying trends.",
        "x-history": "History is available back to the 1960s for actively trading securities (where applicable) and 2007 for delisted securities.",
        "x-data-type": "End of Day",
        "x-update-freq": "5:00 PM EST Daily",
        "x-data-source": "Intrinio",
        "x-group": "Technical Indicators",
        "x-index": 1415,
        "x-sample-data-url": "/securities/AAPL/prices/technicals/fi",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/technical-indicators",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return technical indicator values on or after the date",
            "type": "string",
            "required": false,
            "x-example": "2018-01-01",
            "x-example-value": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return technical indicator values on or before the date",
            "type": "string",
            "required": false,
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of results to return",
            "type": "integer",
            "maximum": 10000,
            "default": 100,
            "x-example": 100,
            "x-example-value": 100,
            "x-default-value": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityForceIndex"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices/technicals/ichimoku": {
      "get": {
        "tags": [
          "Security",
          "Technical"
        ],
        "summary": "Ichimoku Kinko Hyo",
        "operationId": "get_security_price_technicals_ichimoku",
        "description": "The Ichimoku Kinko Hyo was designed to be an all-in-one trading indicator that could help traders determine momentum, support, and resistance.",
        "x-note": "None",
        "x-history": "History is available back to the 1960s for actively trading securities (where applicable) and 2007 for delisted securities.",
        "x-data-type": "End of Day",
        "x-update-freq": "5:00 PM EST Daily",
        "x-data-source": "Intrinio",
        "x-additional-comments": "None",
        "x-group": "Technical Indicators",
        "x-index": 1416,
        "x-sample-data-url": "/securities/AAPL/prices/technicals/ichimoku",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/technical-indicators",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "low_period",
            "description": "The number of observations to calculate Tenkan Sen (Conversion Line) of Ichimoku Kinko Hyo",
            "type": "integer",
            "required": false,
            "default": 9,
            "x-default-value": 9,
            "x-example": 9,
            "x-example-value": 9
          },
          {
            "in": "query",
            "name": "medium_period",
            "description": "The number of observations to calculate Kijun Sen (Base Line), Senkou Span A (Leading Span A), and Chikou Span (Lagging Span) of Ichimoku Kinko Hyo",
            "type": "integer",
            "required": false,
            "default": 26,
            "minimum": 2,
            "x-default-value": 26,
            "x-example": 26,
            "x-example-value": 26
          },
          {
            "in": "query",
            "name": "high_period",
            "description": "The number of observations to calculate Senkou Span B (Leading Span B) of Ichimoku Kinko Hyo",
            "type": "integer",
            "required": false,
            "default": 52,
            "minimum": 4,
            "x-default-value": 52,
            "x-example": 52,
            "x-example-value": 52
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return technical indicator values on or after the date",
            "type": "string",
            "required": false,
            "x-example": "2018-01-01",
            "x-example-value": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return technical indicator values on or before the date",
            "type": "string",
            "required": false,
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of results to return",
            "type": "integer",
            "maximum": 10000,
            "default": 100,
            "x-example": 100,
            "x-example-value": 100,
            "x-default-value": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityIchimokuKinkoHyo"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices/technicals/kc": {
      "get": {
        "tags": [
          "Security",
          "Technical"
        ],
        "summary": "Keltner Channel",
        "operationId": "get_security_price_technicals_kc",
        "description": "The Keltner Channel is a volatility based signal, with upper, middle, and lower bands. It is often used at market open, when the largest moves tend to occur. In general, traders tend to buy if the price breaks up above the upper band or sell short if the price drops below the lower band.",
        "x-history": "History is available back to the 1960s for actively trading securities (where applicable) and 2007 for delisted securities.",
        "x-data-type": "End of Day",
        "x-update-freq": "5:00 PM EST Daily",
        "x-data-source": "Intrinio",
        "x-group": "Technical Indicators",
        "x-index": 1417,
        "x-sample-data-url": "/securities/AAPL/prices/technicals/kc",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/technical-indicators",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "period",
            "description": "The number of observations to calculate Kelter Channel",
            "type": "integer",
            "required": false,
            "default": 10,
            "minimum": 5,
            "x-default-value": 10,
            "x-example": 10,
            "x-example-value": 10
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return technical indicator values on or after the date",
            "type": "string",
            "required": false,
            "x-example": "2018-01-01",
            "x-example-value": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return technical indicator values on or before the date",
            "type": "string",
            "required": false,
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of results to return",
            "type": "integer",
            "maximum": 10000,
            "default": 100,
            "x-example": 100,
            "x-example-value": 100,
            "x-default-value": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityKeltnerChannel"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices/technicals/kst": {
      "get": {
        "tags": [
          "Security",
          "Technical"
        ],
        "summary": "Know Sure Thing",
        "operationId": "get_security_price_technicals_kst",
        "description": "The Know Sure Thing indicator (KST) is a momentum based oscillator that is calculated by measuring the momentum of four separate price cycles. KST fluctuates above and below a zero line and is used to identify overbought and oversold conditions, and is often used with additional indicators to boost signal strength.",
        "x-history": "History is available back to the 1960s for actively trading securities (where applicable) and 2007 for delisted securities.",
        "x-data-type": "End of Day",
        "x-update-freq": "5:00 PM EST Daily",
        "x-data-source": "Intrinio",
        "x-group": "Technical Indicators",
        "x-index": 1418,
        "x-sample-data-url": "/securities/AAPL/prices/technicals/kst",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/technical-indicators",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "roc1",
            "description": "The number of observations to calculate the rate-of-change for RCMA1",
            "type": "integer",
            "required": false,
            "default": 10,
            "x-default-value": 10,
            "x-example": 10,
            "x-example-value": 10
          },
          {
            "in": "query",
            "name": "roc2",
            "description": "The number of observations to calculate the rate-of-change for RCMA2",
            "type": "integer",
            "required": false,
            "default": 15,
            "x-default-value": 15,
            "x-example": 15,
            "x-example-value": 15
          },
          {
            "in": "query",
            "name": "roc3",
            "description": "The number of observations to calculate the rate-of-change for RCMA3",
            "type": "integer",
            "required": false,
            "default": 20,
            "x-default-value": 20,
            "x-example": 20,
            "x-example-value": 20
          },
          {
            "in": "query",
            "name": "roc4",
            "description": "The number of observations to calculate the rate-of-change for RCMA4",
            "type": "integer",
            "required": false,
            "default": 30,
            "minimum": 3,
            "x-default-value": 30,
            "x-example": 30,
            "x-example-value": 30
          },
          {
            "in": "query",
            "name": "sma1",
            "description": "The number of observations to calculate the Simple Moving Average of the rate-of-change for RCMA1",
            "type": "integer",
            "required": false,
            "default": 10,
            "x-default-value": 10,
            "x-example": 10,
            "x-example-value": 10
          },
          {
            "in": "query",
            "name": "sma2",
            "description": "The number of observations to calculate the Simple Moving Average of the rate-of-change for RCMA2",
            "type": "integer",
            "required": false,
            "default": 10,
            "x-default-value": 10,
            "x-example": 10,
            "x-example-value": 10
          },
          {
            "in": "query",
            "name": "sma3",
            "description": "The number of observations to calculate the Simple Moving Average of the rate-of-change for RCMA3",
            "type": "integer",
            "required": false,
            "default": 10,
            "x-default-value": 10,
            "x-example": 10,
            "x-example-value": 10
          },
          {
            "in": "query",
            "name": "sma4",
            "description": "The number of observations to calculate the Simple Moving Average of the rate-of-change for RCMA4",
            "type": "integer",
            "required": false,
            "default": 15,
            "minimum": 3,
            "x-default-value": 15,
            "x-example": 15,
            "x-example-value": 15
          },
          {
            "in": "query",
            "name": "price_key",
            "description": "The Stock Price field to use when calculating Know Sure Thing",
            "type": "string",
            "required": false,
            "enum": [
              "open",
              "high",
              "low",
              "close",
              "volume"
            ],
            "default": "close",
            "x-default-value": "close",
            "x-example": "close",
            "x-example-value": "close"
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return technical indicator values on or after the date",
            "type": "string",
            "required": false,
            "x-example": "2018-01-01",
            "x-example-value": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return technical indicator values on or before the date",
            "type": "string",
            "required": false,
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of results to return",
            "type": "integer",
            "maximum": 10000,
            "default": 100,
            "x-example": 100,
            "x-example-value": 100,
            "x-default-value": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityKnowSureThing"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices/technicals/macd": {
      "get": {
        "tags": [
          "Security",
          "Technical"
        ],
        "summary": "Moving Average Convergence Divergence",
        "operationId": "get_security_price_technicals_macd",
        "description": "Moving average convergence divergence (MACD) is a trend-following momentum oscillator that consists of three indicators: (1) a 12 period short-term exponential moving average (EMA) a 26 period long-term EMA and a 9 period EMA signal line. Traders using MACD often look for signal line crossovers, centerline crossovers, and EMA divergences to indicate the momentum and underlying trend of a security`s price.",
        "x-history": "History is available back to the 1960s for actively trading securities (where applicable) and 2007 for delisted securities.",
        "x-data-type": "End of Day",
        "x-update-freq": "5:00 PM EST Daily",
        "x-data-source": "Intrinio",
        "x-group": "Technical Indicators",
        "x-index": 1419,
        "x-sample-data-url": "/securities/AAPL/prices/technicals/macd",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/technical-indicators",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "fast_period",
            "description": "The number of observations to calculate the fast moving Exponential Moving Average for Moving Average Convergence Divergence",
            "type": "integer",
            "required": false,
            "default": 12,
            "x-default-value": 12,
            "x-example": 12,
            "x-example-value": 12
          },
          {
            "in": "query",
            "name": "slow_period",
            "description": "The number of observations to calculate the slow moving Exponential Moving Average for Moving Average Convergence Divergence",
            "type": "integer",
            "required": false,
            "default": 26,
            "minimum": 3,
            "x-default-value": 26,
            "x-example": 26,
            "x-example-value": 26
          },
          {
            "in": "query",
            "name": "signal_period",
            "description": "The number of observations to calculate the signal line for Moving Average Convergence Divergence",
            "type": "integer",
            "required": false,
            "default": 9,
            "minimum": 3,
            "x-default-value": 9,
            "x-example": 9,
            "x-example-value": 9
          },
          {
            "in": "query",
            "name": "price_key",
            "description": "The Stock Price field to use when calculating Moving Average Convergence Divergence",
            "type": "string",
            "required": false,
            "enum": [
              "open",
              "high",
              "low",
              "close",
              "volume"
            ],
            "default": "close",
            "x-default-value": "close",
            "x-example": "close",
            "x-example-value": "close"
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return technical indicator values on or after the date",
            "type": "string",
            "required": false,
            "x-example": "2018-01-01",
            "x-example-value": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return technical indicator values on or before the date",
            "type": "string",
            "required": false,
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of results to return",
            "type": "integer",
            "maximum": 10000,
            "default": 100,
            "x-example": 100,
            "x-example-value": 100,
            "x-default-value": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityMovingAverageConvergenceDivergence"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices/technicals/mfi": {
      "get": {
        "tags": [
          "Security",
          "Technical"
        ],
        "summary": "Money Flow Index",
        "operationId": "get_security_price_technicals_mfi",
        "description": "The Money Flow Index (MFI) is a technical oscillator that incorporates both price and volume, moving between 0 and 100. Traders often consider a MFI above 80 as overbought conditions and below 20 as oversold conditions.",
        "x-history": "History is available back to the 1960s for actively trading securities (where applicable) and 2007 for delisted securities.",
        "x-data-type": "End of Day",
        "x-update-freq": "5:00 PM EST Daily",
        "x-data-source": "Intrinio",
        "x-additional-comments": "None",
        "x-group": "Technical Indicators",
        "x-index": 1420,
        "x-sample-data-url": "/securities/AAPL/prices/technicals/mfi",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/technical-indicators",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "period",
            "description": "The number of observations to calculate Money Flow Index",
            "type": "integer",
            "required": false,
            "default": 14,
            "minimum": 4,
            "x-default-value": 14,
            "x-example": 14,
            "x-example-value": 14
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return technical indicator values on or after the date",
            "type": "string",
            "required": false,
            "x-example": "2018-01-01",
            "x-example-value": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return technical indicator values on or before the date",
            "type": "string",
            "required": false,
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of results to return",
            "type": "integer",
            "maximum": 10000,
            "default": 100,
            "x-example": 100,
            "x-example-value": 100,
            "x-default-value": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityMoneyFlowIndex"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices/technicals/mi": {
      "get": {
        "tags": [
          "Security",
          "Technical"
        ],
        "summary": "Mass Index",
        "operationId": "get_security_price_technicals_mi",
        "description": "The mass index (MI) is a technical indicator used by traders to predict trend reversals. A trend reversal signal is said to occur when the 25-day MI reaches 27.0 and then falls below 26.0.",
        "x-note": "None",
        "x-history": "History is available back to the 1960s for actively trading securities (where applicable) and 2007 for delisted securities.",
        "x-data-type": "End of Day",
        "x-update-freq": "5:00 PM EST Daily",
        "x-data-source": "Intrinio",
        "x-additional-comments": "None",
        "x-group": "Technical Indicators",
        "x-index": 1421,
        "x-sample-data-url": "/securities/AAPL/prices/technicals/mi",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/technical-indicators",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "ema_period",
            "description": "The number of observations to calculate the single Exponential Moving Average and the Double Exponential Moving Average for Mass Index",
            "type": "integer",
            "required": false,
            "default": 9,
            "minimum": 2,
            "x-default-value": 9,
            "x-example": 9,
            "x-example-value": 9
          },
          {
            "in": "query",
            "name": "sum_period",
            "description": "The number of observations to calculate the sum of the Exponetinal Moving Average Ratios for Mass Index",
            "type": "integer",
            "required": false,
            "default": 25,
            "minimum": 3,
            "x-default-value": 25,
            "x-example": 25,
            "x-example-value": 25
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return technical indicator values on or after the date",
            "type": "string",
            "required": false,
            "x-example": "2018-01-01",
            "x-example-value": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return technical indicator values on or before the date",
            "type": "string",
            "required": false,
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of results to return",
            "type": "integer",
            "maximum": 10000,
            "default": 100,
            "x-example": 100,
            "x-example-value": 100,
            "x-default-value": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityMassIndex"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices/technicals/nvi": {
      "get": {
        "tags": [
          "Security",
          "Technical"
        ],
        "summary": "Negative Volume Index",
        "operationId": "get_security_price_technicals_nvi",
        "description": "The negative volume index (NVI) is often referred to as the `smart money indicator.` It works by the assumption that smart money (institutional money) is at work when volume decreases and vice versa when volume increases. NVI starts at 1000 and increases in regard to the percentage price change when volume decreases over a 255-day EMA period. Traders often use this technical indicator when researching broder markets and indices.",
        "x-note": "None",
        "x-history": "History is available back to the 1960s for actively trading securities (where applicable) and 2007 for delisted securities.",
        "x-data-type": "End of Day",
        "x-update-freq": "5:00 PM EST Daily",
        "x-data-source": "Intrinio",
        "x-additional-comments": "None",
        "x-group": "Technical Indicators",
        "x-index": 1422,
        "x-sample-data-url": "/securities/AAPL/prices/technicals/nvi",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/technical-indicators",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return technical indicator values on or after the date",
            "type": "string",
            "required": false,
            "x-example": "2018-01-01",
            "x-example-value": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return technical indicator values on or before the date",
            "type": "string",
            "required": false,
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of results to return",
            "type": "integer",
            "maximum": 10000,
            "default": 100,
            "x-example": 100,
            "x-example-value": 100,
            "x-default-value": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityNegativeVolumeIndex"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices/technicals/obv": {
      "get": {
        "tags": [
          "Security",
          "Technical"
        ],
        "summary": "On-balance Volume",
        "operationId": "get_security_price_technicals_obv",
        "description": "On-balance volume (OBV) is a leading momentum indicator that uses the increase/decrease flow in volume to predict upcoming stock price changes. When both OBV and a security`s price are making higher highs, it is presumed the upward trend is likely to continue and vice versa.",
        "x-note": "None",
        "x-history": "History is available back to the 1960s for actively trading securities (where applicable) and 2007 for delisted securities.",
        "x-data-type": "End of Day",
        "x-update-freq": "5:00 PM EST Daily",
        "x-data-source": "Intrinio",
        "x-additional-comments": "None",
        "x-group": "Technical Indicators",
        "x-index": 1423,
        "x-sample-data-url": "/securities/AAPL/prices/technicals/obv",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/technical-indicators",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return technical indicator values on or after the date",
            "type": "string",
            "required": false,
            "x-example": "2018-01-01",
            "x-example-value": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return technical indicator values on or before the date",
            "type": "string",
            "required": false,
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of results to return",
            "type": "integer",
            "maximum": 10000,
            "default": 100,
            "x-example": 100,
            "x-example-value": 100,
            "x-default-value": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityOnBalanceVolume"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices/technicals/obv_mean": {
      "get": {
        "tags": [
          "Security",
          "Technical"
        ],
        "summary": "On-balance Volume Mean",
        "operationId": "get_security_price_technicals_obv_mean",
        "description": "On-balance volume mean (OBVM) is a leading momentum indicator that uses the increase/decrease flow in volume to predict upcoming stock price changes. The difference between OBV and OBVM is that OBVM takes the mean average of a provided period.  When both OBVM and a security`s price are making higher highs, it is presumed the upward trend is likely to continue and vice versa.",
        "x-note": "None",
        "x-history": "History is available back to the 1960s for actively trading securities (where applicable) and 2007 for delisted securities.",
        "x-data-type": "End of Day",
        "x-update-freq": "5:00 PM EST Daily",
        "x-data-source": "Intrinio",
        "x-additional-comments": "None",
        "x-group": "Technical Indicators",
        "x-index": 1424,
        "x-sample-data-url": "/securities/AAPL/prices/technicals/obv_mean",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/technical-indicators",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "period",
            "description": "The number of observations to calculate On-balance Volume Mean",
            "type": "integer",
            "required": false,
            "default": 10,
            "minimum": 4,
            "x-default-value": 10,
            "x-example": 10,
            "x-example-value": 10
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return technical indicator values on or after the date",
            "type": "string",
            "required": false,
            "x-example": "2018-01-01",
            "x-example-value": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return technical indicator values on or before the date",
            "type": "string",
            "required": false,
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of results to return",
            "type": "integer",
            "maximum": 10000,
            "default": 100,
            "x-example": 100,
            "x-example-value": 100,
            "x-default-value": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityOnBalanceVolumeMean"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices/technicals/rsi": {
      "get": {
        "tags": [
          "Security",
          "Technical"
        ],
        "summary": "Relative Strength Index",
        "operationId": "get_security_price_technicals_rsi",
        "description": "Relative strength index (RSI) is a momentum oscillator that ranges between 0 and 100. Traders believe that an RSI value over 70 indicates that a security is overbought and an RSI under 30 indicates that a security is oversold.",
        "x-note": "None",
        "x-history": "History is available back to the 1960s for actively trading securities (where applicable) and 2007 for delisted securities.",
        "x-data-type": "End of Day",
        "x-update-freq": "5:00 PM EST Daily",
        "x-data-source": "Intrinio",
        "x-additional-comments": "None",
        "x-group": "Technical Indicators",
        "x-index": 1425,
        "x-sample-data-url": "/securities/AAPL/prices/technicals/rsi",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/technical-indicators",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "period",
            "description": "The number of observations to calculate Relative Strength Index",
            "type": "integer",
            "required": false,
            "default": 14,
            "minimum": 4,
            "x-default-value": 14,
            "x-example": 14,
            "x-example-value": 14
          },
          {
            "in": "query",
            "name": "price_key",
            "description": "The Stock Price field to use when calculating Relative Strength Index",
            "type": "string",
            "required": false,
            "enum": [
              "open",
              "high",
              "low",
              "close",
              "volume"
            ],
            "default": "close",
            "x-default-value": "close",
            "x-example": "close",
            "x-example-value": "close"
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return technical indicator values on or after the date",
            "type": "string",
            "required": false,
            "x-example": "2018-01-01",
            "x-example-value": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return technical indicator values on or before the date",
            "type": "string",
            "required": false,
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of results to return",
            "type": "integer",
            "maximum": 10000,
            "default": 100,
            "x-example": 100,
            "x-example-value": 100,
            "x-default-value": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityRelativeStrengthIndex"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices/technicals/sma": {
      "get": {
        "tags": [
          "Security",
          "Technical"
        ],
        "summary": "Simple Moving Average",
        "operationId": "get_security_price_technicals_sma",
        "description": "A simple moving average (SMA) adds recent prices for a specified period and divides the total by that same number of periods. SMA is typically used to indicate whether a security is in an uptrend or downtrend and can also be combined with a long-term moving average to improve the signal`s abilities.",
        "x-note": "None",
        "x-history": "History is available back to the 1960s for actively trading securities (where applicable) and 2007 for delisted securities.",
        "x-data-type": "End of Day",
        "x-update-freq": "5:00 PM EST Daily",
        "x-data-source": "Intrinio",
        "x-additional-comments": "None",
        "x-group": "Technical Indicators",
        "x-index": 1426,
        "x-sample-data-url": "/securities/AAPL/prices/technicals/sma",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/technical-indicators",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "period",
            "description": "The number of observations to calculate Simple Moving Average",
            "type": "integer",
            "required": false,
            "default": 20,
            "minimum": 5,
            "x-default-value": 20,
            "x-example": 20,
            "x-example-value": 20
          },
          {
            "in": "query",
            "name": "price_key",
            "description": "The Stock Price field to use when calculating Simple Moving Average",
            "type": "string",
            "required": false,
            "enum": [
              "open",
              "high",
              "low",
              "close",
              "volume"
            ],
            "default": "close",
            "x-default-value": "close",
            "x-example": "close",
            "x-example-value": "close"
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return technical indicator values on or after the date",
            "type": "string",
            "required": false,
            "x-example": "2018-01-01",
            "x-example-value": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return technical indicator values on or before the date",
            "type": "string",
            "required": false,
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of results to return",
            "type": "integer",
            "maximum": 10000,
            "default": 100,
            "x-example": 100,
            "x-example-value": 100,
            "x-default-value": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecuritySimpleMovingAverage"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices/technicals/sr": {
      "get": {
        "tags": [
          "Security",
          "Technical"
        ],
        "summary": "Stochastic Oscillator",
        "operationId": "get_security_price_technicals_sr",
        "description": "The Stochastic Oscillator (SO) is a range-bound momentum indicator that ranges from 0 to 100 and follows the velocity of the momentum itself, not the underlying price or volume. When SO is above 80 it indicates that a security is trading at the high end of its period`s high-low range and vice versa if the reading is below 20.",
        "x-note": "None",
        "x-history": "History is available back to the 1960s for actively trading securities (where applicable) and 2007 for delisted securities.",
        "x-data-type": "End of Day",
        "x-update-freq": "5:00 PM EST Daily",
        "x-data-source": "Intrinio",
        "x-additional-comments": "None",
        "x-group": "Technical Indicators",
        "x-index": 1427,
        "x-sample-data-url": "/securities/AAPL/prices/technicals/sr",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/technical-indicators",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "period",
            "description": "The number of observations to calculate %K of Stochastic Oscillator",
            "type": "integer",
            "required": false,
            "default": 14,
            "minimum": 3,
            "x-default-value": 14,
            "x-example": 14,
            "x-example-value": 14
          },
          {
            "in": "query",
            "name": "signal_period",
            "description": "The number of observations to calculate the %D (the Simple Moving Average of %K) as a signal line for Stochastic Oscillator",
            "type": "integer",
            "required": false,
            "default": 3,
            "minimum": 3,
            "x-default-value": 3,
            "x-example": 3,
            "x-example-value": 3
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return technical indicator values on or after the date",
            "type": "string",
            "required": false,
            "x-example": "2018-01-01",
            "x-example-value": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return technical indicator values on or before the date",
            "type": "string",
            "required": false,
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of results to return",
            "type": "integer",
            "maximum": 10000,
            "default": 100,
            "x-example": 100,
            "x-example-value": 100,
            "x-default-value": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityStochasticOscillator"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices/technicals/trix": {
      "get": {
        "tags": [
          "Security",
          "Technical"
        ],
        "summary": "Triple Exponential Average",
        "operationId": "get_security_price_technicals_trix",
        "description": "The Triple Exponential Average (TEA) is a momentum indicator used to identify when a security is oversold and overbought. By exponentially smoothing out the underlying security`s moving average, the TEA  filters out insignificant price movements. A positive TEA is often believed to indicate momentum is increasing and a negative TEA indicates that momentum is decreasing.",
        "x-note": "None",
        "x-history": "History is available back to the 1960s for actively trading securities (where applicable) and 2007 for delisted securities.",
        "x-data-type": "End of Day",
        "x-update-freq": "5:00 PM EST Daily",
        "x-data-source": "Intrinio",
        "x-additional-comments": "None",
        "x-group": "Technical Indicators",
        "x-index": 1428,
        "x-sample-data-url": "/securities/AAPL/prices/technicals/trix",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/technical-indicators",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "period",
            "description": "The number of observations to calculate Exponential Moving Average for Triple Exponential Average",
            "type": "integer",
            "required": false,
            "default": 15,
            "minimum": 2,
            "x-default-value": 15,
            "x-example": 15,
            "x-example-value": 15
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return technical indicator values on or after the date",
            "type": "string",
            "required": false,
            "x-example": "2018-01-01",
            "x-example-value": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return technical indicator values on or before the date",
            "type": "string",
            "required": false,
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of results to return",
            "type": "integer",
            "maximum": 10000,
            "default": 100,
            "x-example": 100,
            "x-example-value": 100,
            "x-default-value": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityTripleExponentialAverage"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices/technicals/tsi": {
      "get": {
        "tags": [
          "Security",
          "Technical"
        ],
        "summary": "True Strength Index",
        "operationId": "get_security_price_technicals_tsi",
        "description": "The True Strength Index (TSI) is a momentum oscillator used to identify building trends and trend reversals, typically by signalling overbought and oversold conditions. TSI fluctuates between positive and negative values, and traders typically combine its signal with other momentum oscillators to increase its strength. When TSI crosses the signal line into positive territory it is presumed to be an entrance opportunity and vice versa when the TSI crosses into negative territory.",
        "x-note": "None",
        "x-history": "History is available back to the 1960s for actively trading securities (where applicable) and 2007 for delisted securities.",
        "x-data-type": "End of Day",
        "x-update-freq": "5:00 PM EST Daily",
        "x-data-source": "Intrinio",
        "x-additional-comments": "None",
        "x-group": "Technical Indicators",
        "x-index": 1429,
        "x-sample-data-url": "/securities/AAPL/prices/technicals/tsi",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/technical-indicators",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "low_period",
            "description": "The number of observations to calculate low period Exponential Moving Average for smoothing in True Strength Index",
            "type": "integer",
            "required": false,
            "default": 13,
            "minimum": 3,
            "x-default-value": 13,
            "x-example": 13,
            "x-example-value": 13
          },
          {
            "in": "query",
            "name": "high_period",
            "description": "The number of observations to calculate high period Exponential Moving Average for smoothing in True Strength Index",
            "type": "integer",
            "required": false,
            "default": 25,
            "minimum": 3,
            "x-default-value": 25,
            "x-example": 25,
            "x-example-value": 25
          },
          {
            "in": "query",
            "name": "price_key",
            "description": "The Stock Price field to use when calculating True Strength Index",
            "type": "string",
            "required": false,
            "enum": [
              "open",
              "high",
              "low",
              "close",
              "volume"
            ],
            "default": "close",
            "x-default-value": "close",
            "x-example": "close",
            "x-example-value": "close"
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return technical indicator values on or after the date",
            "type": "string",
            "required": false,
            "x-example": "2018-01-01",
            "x-example-value": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return technical indicator values on or before the date",
            "type": "string",
            "required": false,
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of results to return",
            "type": "integer",
            "maximum": 10000,
            "default": 100,
            "x-example": 100,
            "x-example-value": 100,
            "x-default-value": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityTrueStrengthIndex"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices/technicals/uo": {
      "get": {
        "tags": [
          "Security",
          "Technical"
        ],
        "summary": "Ultimate Oscillator",
        "operationId": "get_security_price_technicals_uo",
        "description": "The Ultimate Oscillator (UO) is a range bound technical indicator that moves between 0 and 100 and is calculated with 3 timeframes, typically 7, 14, and 28 day periods. When UO`s value is above 70 a security is categorized as overbought and when UO`s value is below 30 a security is categorized as oversold.",
        "x-note": "None",
        "x-history": "History is available back to the 1960s for actively trading securities (where applicable) and 2007 for delisted securities.",
        "x-data-type": "End of Day",
        "x-update-freq": "5:00 PM EST Daily",
        "x-data-source": "Intrinio",
        "x-additional-comments": "None",
        "x-group": "Technical Indicators",
        "x-index": 1430,
        "x-sample-data-url": "/securities/AAPL/prices/technicals/uo",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/technical-indicators",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "short_period",
            "description": "The number of observations to calculate the short period for Ultimate Oscillator",
            "type": "integer",
            "required": false,
            "default": 7,
            "x-default-value": 7,
            "x-example": 7,
            "x-example-value": 7
          },
          {
            "in": "query",
            "name": "medium_period",
            "description": "The number of observations to calculate the medium period for Ultimate Oscillator",
            "type": "integer",
            "required": false,
            "default": 14,
            "x-default-value": 14,
            "x-example": 14,
            "x-example-value": 14
          },
          {
            "in": "query",
            "name": "long_period",
            "description": "The number of observations to calculate the long period for Ultimate Oscillator",
            "type": "integer",
            "required": false,
            "default": 28,
            "minimum": 4,
            "x-default-value": 28,
            "x-example": 28,
            "x-example-value": 28
          },
          {
            "in": "query",
            "name": "short_weight",
            "description": "The weight of short Buying Pressure average for Ultimate Oscillator",
            "type": "number",
            "format": "float",
            "required": false,
            "default": 4.0,
            "x-default-value": 4.0,
            "x-example": 4.0,
            "x-example-value": 4.0
          },
          {
            "in": "query",
            "name": "medium_weight",
            "description": "The weight of medium Buying Pressure average for Ultimate Oscillator",
            "type": "number",
            "format": "float",
            "required": false,
            "default": 2.0,
            "x-default-value": 2.0,
            "x-example": 2.0,
            "x-example-value": 2.0
          },
          {
            "in": "query",
            "name": "long_weight",
            "description": "The weight of long Buying Pressure average for Ultimate Oscillator",
            "type": "number",
            "format": "float",
            "required": false,
            "default": 1.0,
            "x-default-value": 1.0,
            "x-example": 1.0,
            "x-example-value": 1.0
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return technical indicator values on or after the date",
            "type": "string",
            "required": false,
            "x-example": "2018-01-01",
            "x-example-value": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return technical indicator values on or before the date",
            "type": "string",
            "required": false,
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of results to return",
            "type": "integer",
            "maximum": 10000,
            "default": 100,
            "x-example": 100,
            "x-example-value": 100,
            "x-default-value": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityUltimateOscillator"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices/technicals/vi": {
      "get": {
        "tags": [
          "Security",
          "Technical"
        ],
        "summary": "Vortex Indicator",
        "operationId": "get_security_price_technicals_vi",
        "description": "The Vortex Indicator (VI) is composed of an uptrend line (VI+) and a downtrend line (VI-). When VI+ crosses VI- from below it typically indicates an entry into a given security. When VI- crosses VI+ from below it typically triggers an exit and that the current trend is reversing course.",
        "x-note": "None",
        "x-history": "History is available back to the 1960s for actively trading securities (where applicable) and 2007 for delisted securities.",
        "x-data-type": "End of Day",
        "x-update-freq": "5:00 PM EST Daily",
        "x-data-source": "Intrinio",
        "x-additional-comments": "None",
        "x-group": "Technical Indicators",
        "x-index": 1431,
        "x-sample-data-url": "/securities/AAPL/prices/technicals/vi",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/technical-indicators",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "period",
            "description": "The number of observations to calculate Vortex Indicator",
            "type": "integer",
            "required": false,
            "default": 14,
            "minimum": 4,
            "x-default-value": 14,
            "x-example": 14,
            "x-example-value": 14
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return technical indicator values on or after the date",
            "type": "string",
            "required": false,
            "x-example": "2018-01-01",
            "x-example-value": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return technical indicator values on or before the date",
            "type": "string",
            "required": false,
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of results to return",
            "type": "integer",
            "maximum": 10000,
            "default": 100,
            "x-example": 100,
            "x-example-value": 100,
            "x-default-value": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityVortexIndicator"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices/technicals/vpt": {
      "get": {
        "tags": [
          "Security",
          "Technical"
        ],
        "summary": "Volume-price Trend",
        "operationId": "get_security_price_technicals_vpt",
        "description": "The volume price trend (VPT) is a technical indicator that uses price & volume to determine whether a trend is established. Typically, when a security is trending upwards, there is more volume on positive days than negative ones, and as a result VPT should be increasing on these days as well. However, if VPT fails to increase past its previous high during an outbreak, this is suggested to indicate the rally is losing strength.",
        "x-note": "None",
        "x-history": "History is available back to the 1960s for actively trading securities (where applicable) and 2007 for delisted securities.",
        "x-data-type": "End of Day",
        "x-update-freq": "5:00 PM EST Daily",
        "x-data-source": "Intrinio",
        "x-additional-comments": "None",
        "x-group": "Technical Indicators",
        "x-index": 1432,
        "x-sample-data-url": "/securities/AAPL/prices/technicals/vpt",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/technical-indicators",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return technical indicator values on or after the date",
            "type": "string",
            "required": false,
            "x-example": "2018-01-01",
            "x-example-value": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return technical indicator values on or before the date",
            "type": "string",
            "required": false,
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of results to return",
            "type": "integer",
            "maximum": 10000,
            "default": 100,
            "x-example": 100,
            "x-example-value": 100,
            "x-default-value": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityVolumePriceTrend"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices/technicals/vwap": {
      "get": {
        "tags": [
          "Security",
          "Technical"
        ],
        "summary": "Volume Weighted Average Price",
        "operationId": "get_security_price_technicals_vwap",
        "description": "Volume Weighted Average Price (VWAP) is a lagging technical indicator that is used in combination with a security`s price. When the underlying price rises above its VWAP, it is often interpreted as a bullish signal, and vice versa in the opposite direction.",
        "x-note": "None",
        "x-history": "History is available back to the 1960s for actively trading securities (where applicable) and 2007 for delisted securities.",
        "x-data-type": "End of Day",
        "x-update-freq": "5:00 PM EST Daily",
        "x-data-source": "Intrinio",
        "x-additional-comments": "None",
        "x-group": "Technical Indicators",
        "x-index": 1433,
        "x-sample-data-url": "/securities/AAPL/prices/technicals/vwap",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/technical-indicators",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return technical indicator values on or after the date",
            "type": "string",
            "required": false,
            "x-example": "2018-01-01",
            "x-example-value": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return technical indicator values on or before the date",
            "type": "string",
            "required": false,
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of results to return",
            "type": "integer",
            "maximum": 10000,
            "default": 100,
            "x-example": 100,
            "x-example-value": 100,
            "x-default-value": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityVolumeWeightedAveragePrice"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/prices/technicals/wr": {
      "get": {
        "tags": [
          "Security",
          "Technical"
        ],
        "summary": "Williams %R",
        "operationId": "get_security_price_technicals_wr",
        "description": "Williams %R is a momentum indicator used to determine overbought and oversold environments for a security and fluctuates between 0 and -100. When Williams %R is above -20 the security is considered to be overbought and when Williams %R is under -80 the security is considered to be oversold.",
        "x-note": "None",
        "x-history": "History is available back to the 1960s for actively trading securities (where applicable) and 2007 for delisted securities.",
        "x-data-type": "End of Day",
        "x-update-freq": "5:00 PM EST Daily",
        "x-data-source": "Intrinio",
        "x-additional-comments": "None",
        "x-group": "Technical Indicators",
        "x-index": 1434,
        "x-sample-data-url": "/securities/AAPL/prices/technicals/wr",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/technical-indicators",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "period",
            "description": "The number of observations to look-back when calculating Williams %R",
            "type": "integer",
            "required": false,
            "default": 14,
            "minimum": 5,
            "x-default-value": 14,
            "x-example": 14,
            "x-example-value": 14
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "Return technical indicator values on or after the date",
            "type": "string",
            "required": false,
            "x-example": "2018-01-01",
            "x-example-value": "2018-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "Return technical indicator values on or before the date",
            "type": "string",
            "required": false,
            "x-example": "2019-01-01",
            "x-example-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "The number of results to return",
            "type": "number",
            "format": "integer",
            "maximum": 10000,
            "default": 100,
            "x-example": 100,
            "x-example-value": 100,
            "x-default-value": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityWilliamsR"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/quote": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Quote for a Security",
        "operationId": "get_security_quote",
        "description": "Returns many popular metrics for a security from multiple products conveniently in one API. Realtime stock price data requires at least one realtime product subscription (IEX, NASDAQ Basic, and/or Delayed SIP).  If you are subscribed to multiple realtime stock price products, the api will return the most recent realtime stock price. Previous close price and percent change fields require both an EoD US Stock Price subscription and a realtime stock price subscription. Market_cap, price_to_earnings, and dividendyield data fields require a fundamentals subscription.",
        "x-group": "Real-time Prices",
        "x-index": 1105,
        "x-sample-data-url": "/securities/AAPL/quote",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/us-real-time-prices",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "active_only",
            "type": "boolean",
            "description": "Whether to return only realtime prices from today.",
            "x-example": false,
            "default": false,
            "required": false
          },
          {
            "in": "query",
            "name": "source",
            "description": "Return the realtime price from the specified source instead of the most recent.",
            "type": "string",
            "enum": [
              "iex",
              "utp_delayed",
              "cta_a_delayed",
              "cta_b_delayed",
              "otc_delayed",
              "delayed_sip",
              "nasdaq_basic",
              "cboe_one_delayed",
              "iex_delayed"
            ],
            "x-example": "delayed_sip",
            "x-example-value": "delayed_sip",
            "required": false
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityQuote"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/trades": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Security Trades By Symbol",
        "operationId": "get_security_trades_by_symbol",
        "description": "Returns all trades for a symbol between start time and end time, up to seven days ago for the specified source.",
        "x-history": "N/A",
        "x-data-type": "Realtime | 15-Min Delayed",
        "x-update-freq": "Intraday",
        "x-data-source": "IEX, NASDAQ Basic, Delayed SIP",
        "x-additional-comments": "This endpoint pages in time descending order to make gap resolution more efficient.",
        "x-group": "Real-Time Prices",
        "x-index": 1010,
        "x-sample-data-url": "/securities/AAPL/trades?source=nasdaq_basic&start_date=2023-07-01&start_time=11:00:00.000&end_date=2023-07-01&end_time=12:00:00.000&timezone=UTC&page_size=100",
        "x-sandbox": false,
        "x-documentation-url": "https://intrinio.com/docs/get_security_trades_by_symbol",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "The ticker symbol for which trades are being requested.",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": "security_us"
          },
          {
            "in": "query",
            "name": "source",
            "description": "The specific source of the data being requested.  Specifying delayed sip will result in the system automatically determining which delayed sip source (cta_delayed, cta_b_delayed, utp_delayed, otc_delayed) to use.",
            "type": "string",
            "enum": [
              "nasdaq_basic",
              "delayed_sip",
              "iex",
              "cta_a_delayed",
              "cta_b_delayed",
              "utp_delayed",
              "otc_delayed",
              "cboe_one_delayed",
              "iex_delayed"
            ],
            "x-example": "~null",
            "x-example-value": "nasdaq_basic",
            "required": true
          },
          {
            "in": "query",
            "name": "start_date",
            "description": "The start date for the data being requested.",
            "type": "string",
            "format": "date",
            "x-example": "~null",
            "x-example-value": "2023-07-05",
            "required": false
          },
          {
            "in": "query",
            "name": "start_time",
            "description": "The start time for the data being requested.",
            "type": "string",
            "x-example": "~null",
            "x-example-value": 39600.0,
            "required": false
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "The end date for the data being requested.",
            "type": "string",
            "format": "date",
            "x-example": "~null",
            "x-example-value": "2023-07-05",
            "required": false
          },
          {
            "in": "query",
            "name": "end_time",
            "description": "The end time for the data being requested.",
            "type": "string",
            "x-example": "~null",
            "x-example-value": 39600.0,
            "required": false
          },
          {
            "in": "query",
            "name": "timezone",
            "type": "string",
            "description": "The timezone the start and end date/times use.",
            "required": false,
            "enum": [
              "Africa/Algiers",
              "Africa/Cairo",
              "Africa/Casablanca",
              "Africa/Harare",
              "Africa/Johannesburg",
              "Africa/Monrovia",
              "Africa/Nairobi",
              "America/Argentina/Buenos_Aires",
              "America/Bogota",
              "America/Caracas",
              "America/Chicago",
              "America/Chihuahua",
              "America/Denver",
              "America/Godthab",
              "America/Guatemala",
              "America/Guyana",
              "America/Halifax",
              "America/Indiana/Indianapolis",
              "America/Juneau",
              "America/La_Paz",
              "America/Lima",
              "America/Lima",
              "America/Los_Angeles",
              "America/Mazatlan",
              "America/Mexico_City",
              "America/Mexico_City",
              "America/Monterrey",
              "America/Montevideo",
              "America/New_York",
              "America/Phoenix",
              "America/Regina",
              "America/Santiago",
              "America/Sao_Paulo",
              "America/St_Johns",
              "America/Tijuana",
              "Asia/Almaty",
              "Asia/Baghdad",
              "Asia/Baku",
              "Asia/Bangkok",
              "Asia/Bangkok",
              "Asia/Chongqing",
              "Asia/Colombo",
              "Asia/Dhaka",
              "Asia/Dhaka",
              "Asia/Hong_Kong",
              "Asia/Irkutsk",
              "Asia/Jakarta",
              "Asia/Jerusalem",
              "Asia/Kabul",
              "Asia/Kamchatka",
              "Asia/Karachi",
              "Asia/Karachi",
              "Asia/Kathmandu",
              "Asia/Kolkata",
              "Asia/Kolkata",
              "Asia/Kolkata",
              "Asia/Kolkata",
              "Asia/Krasnoyarsk",
              "Asia/Kuala_Lumpur",
              "Asia/Kuwait",
              "Asia/Magadan",
              "Asia/Muscat",
              "Asia/Muscat",
              "Asia/Novosibirsk",
              "Asia/Rangoon",
              "Asia/Riyadh",
              "Asia/Seoul",
              "Asia/Shanghai",
              "Asia/Singapore",
              "Asia/Srednekolymsk",
              "Asia/Taipei",
              "Asia/Tashkent",
              "Asia/Tbilisi",
              "Asia/Tehran",
              "Asia/Tokyo",
              "Asia/Tokyo",
              "Asia/Tokyo",
              "Asia/Ulaanbaatar",
              "Asia/Urumqi",
              "Asia/Vladivostok",
              "Asia/Yakutsk",
              "Asia/Yekaterinburg",
              "Asia/Yerevan",
              "Atlantic/Azores",
              "Atlantic/Cape_Verde",
              "Atlantic/South_Georgia",
              "Australia/Adelaide",
              "Australia/Brisbane",
              "Australia/Darwin",
              "Australia/Hobart",
              "Australia/Melbourne",
              "Australia/Melbourne",
              "Australia/Perth",
              "Australia/Sydney",
              "Etc/UTC",
              "UTC",
              "Europe/Amsterdam",
              "Europe/Athens",
              "Europe/Belgrade",
              "Europe/Berlin",
              "Europe/Berlin",
              "Europe/Bratislava",
              "Europe/Brussels",
              "Europe/Bucharest",
              "Europe/Budapest",
              "Europe/Copenhagen",
              "Europe/Dublin",
              "Europe/Helsinki",
              "Europe/Istanbul",
              "Europe/Kaliningrad",
              "Europe/Kiev",
              "Europe/Lisbon",
              "Europe/Ljubljana",
              "Europe/London",
              "Europe/London",
              "Europe/Madrid",
              "Europe/Minsk",
              "Europe/Moscow",
              "Europe/Moscow",
              "Europe/Paris",
              "Europe/Prague",
              "Europe/Riga",
              "Europe/Rome",
              "Europe/Samara",
              "Europe/Sarajevo",
              "Europe/Skopje",
              "Europe/Sofia",
              "Europe/Stockholm",
              "Europe/Tallinn",
              "Europe/Vienna",
              "Europe/Vilnius",
              "Europe/Volgograd",
              "Europe/Warsaw",
              "Europe/Zagreb",
              "Pacific/Apia",
              "Pacific/Auckland",
              "Pacific/Auckland",
              "Pacific/Chatham",
              "Pacific/Fakaofo",
              "Pacific/Fiji",
              "Pacific/Guadalcanal",
              "Pacific/Guam",
              "Pacific/Honolulu",
              "Pacific/Majuro",
              "Pacific/Midway",
              "Pacific/Midway",
              "Pacific/Noumea",
              "Pacific/Pago_Pago",
              "Pacific/Port_Moresby",
              "Pacific/Tongatapu"
            ],
            "default": "UTC",
            "x-example": "UTC",
            "x-example-value": "UTC",
            "x-default-value": "UTC"
          },
          {
            "in": "query",
            "name": "darkpool_only",
            "type": "boolean",
            "required": false,
            "description": "Set to true to show only darkpool trades",
            "default": false,
            "x-example": false
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The maximum number of results to return per page.",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "min_size",
            "type": "integer",
            "required": false,
            "description": "Trades must be larger or equal to this size.",
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SecurityTradesResult"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/zacks/analyst_ratings": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Zacks Analyst Ratings for Security",
        "operationId": "get_security_zacks_analyst_ratings",
        "description": "This database offers consensus analyst recommendations for over 5,000 US and Canadian listed companies.",
        "x-note": "Ratings are consensus, meaning there will be a single rating for a given company and time period. This will not provide individual analyst ratings with analyst name and institution.",
        "x-history": "Current only by default. History available back to 1985 for an additional fee varying by number of years of history needed.",
        "x-data-type": "End of Day",
        "x-update-freq": "Updates at 6 AM and 8 AM UTC Daily",
        "x-data-source": "Zacks Investment Research",
        "x-additional-comments": "This endpoint offers advanced filtering across the entire available universe, allowing you to return a list of companies meeting a very specific set of criteria. | An analyst rating of 1 is a strong buy, and a 5 is a strong sell. The lower the rating the higher the sentiment.",
        "x-group": "Ratings & Price Targets",
        "x-index": 1403,
        "x-sample-data-url": "/securities/AAPL/zacks/analyst_ratings",
        "x-sandbox": true,
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us",
              "security_intl"
            ]
          },
          {
            "in": "query",
            "name": "start_date",
            "type": "string",
            "description": "Limit ratings to those on or after this date",
            "required": false,
            "x-example": "~null",
            "x-example-value": "2019-01-01",
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "end_date",
            "type": "string",
            "description": "Limit ratings to those on or before this date",
            "required": false,
            "x-example": "~null",
            "x-example-value": "2019-12-31",
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "mean_greater",
            "type": "number",
            "description": "Return only records with a mean (average) higher than this value",
            "required": false,
            "minimum": 1,
            "maximum": 5,
            "x-example": "~null",
            "x-example-value": 1.5,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "mean_less",
            "type": "number",
            "description": "Return only records with a mean (average) lower than this value",
            "required": false,
            "minimum": 1,
            "maximum": 5,
            "x-example": "~null",
            "x-example-value": 3.0,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "strong_buys_greater",
            "type": "integer",
            "minimum": 0,
            "description": "Return only records with more than this many Strong Buy recommendations",
            "required": false,
            "x-example": "~null",
            "x-example-value": 5,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "strong_buys_less",
            "type": "integer",
            "minimum": 0,
            "description": "Return only records with fewer than this many Strong Buy recommendations",
            "required": false,
            "x-example": "~null",
            "x-example-value": 10,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "buys_greater",
            "type": "integer",
            "minimum": 0,
            "description": "Return only records with more than this many Buy recommendations",
            "required": false,
            "x-example": "~null",
            "x-example-value": 2,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "buys_less",
            "type": "integer",
            "minimum": 0,
            "description": "Return only records with fewer than this many Buy recommendations",
            "required": false,
            "x-example": "~null",
            "x-example-value": 1,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "holds_greater",
            "type": "integer",
            "minimum": 0,
            "description": "Return only records with more than this many Hold recommendations",
            "required": false,
            "x-example": "~null",
            "x-example-value": 3,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "holds_less",
            "type": "integer",
            "minimum": 0,
            "description": "Return only records with fewer than this many Hold recommendations",
            "required": false,
            "x-example": "~null",
            "x-example-value": 5,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "sells_greater",
            "type": "integer",
            "minimum": 0,
            "description": "Return only records with more than this many Sell recommendations",
            "required": false,
            "x-example": "~null",
            "x-example-value": 8,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "sells_less",
            "type": "integer",
            "minimum": 0,
            "description": "Return only records with fewer than this many Sell recommendations",
            "required": false,
            "x-example": "~null",
            "x-example-value": 7,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "strong_sells_greater",
            "type": "integer",
            "minimum": 0,
            "description": "Return only records with more than this many Strong Sell recommendations",
            "required": false,
            "x-example": "~null",
            "x-example-value": 8,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "strong_sells_less",
            "type": "integer",
            "minimum": 0,
            "description": "Return only records with fewer than this many Strong Sell recommendations",
            "required": false,
            "x-example": "~null",
            "x-example-value": 8,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "total_greater",
            "type": "integer",
            "minimum": 0,
            "description": "Return only records with more than this many recommendations, regardless of type",
            "required": false,
            "x-example": "~null",
            "x-example-value": 20,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "total_less",
            "type": "integer",
            "minimum": 0,
            "description": "Return only records with fewer than this many recommendations, regardless of type",
            "required": false,
            "x-example": "~null",
            "x-example-value": 7,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityZacksAnalystRatings"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/zacks/analyst_ratings/snapshot": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Zacks Analyst Ratings Snapshot",
        "operationId": "get_security_zacks_analyst_ratings_snapshot",
        "description": "This database offers current and historical consensus analyst recommendation snapshots for over 5,000 US and Canadian listed companies.",
        "x-note": "Ratings are consensus, meaning there will be a single rating for a given company and time period. This will not provide individual analyst ratings with analyst name and institution.",
        "x-history": "Rolling Two Year Snapshot History",
        "x-data-type": "End of Day",
        "x-update-freq": "Updates at 6 AM and 8 AM UTC Daily",
        "x-data-source": "Zacks Investment Research",
        "x-additional-comments": "An analyst rating of 1 is a strong buy, and a 5 is a strong sell. The lower the rating the higher the sentiment.",
        "x-group": "Ratings & Price Targets",
        "x-index": 1000,
        "x-sample-data-url": "/securities/AAPL/zacks/analyst_ratings/snapshot",
        "x-sandbox": true,
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us",
              "security_intl"
            ]
          },
          {
            "in": "query",
            "name": "date",
            "type": "string",
            "description": "Lookup a historical snapshot on the given date",
            "required": false,
            "x-example": "~null",
            "x-example-value": "2019-01-01"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityZacksAnalystRatingsSnapshot"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/zacks/eps_surprises": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Zacks EPS Surprises for Security",
        "operationId": "get_security_zacks_eps_surprises",
        "description": "Returns historical estimated and actual earnings, guidance, and announcement dates for a specified symbol.",
        "x-history": "History available back to 1994 with price varying by number of years of history needed.",
        "x-data-type": "End of Day",
        "x-update-freq": "Updates at 6 AM and 8 AM UTC Daily",
        "x-data-source": "Zacks Investment Research",
        "x-additional-comments": "Companies report their EPS figures quarterly that will either differ or mirror the consensus estimates (those estimates that analysts have compiled) which reveal the economic well being of a company. The stock price usually reacts immediately. If the actual reported EPS is greater than the EPS estimate (positive EPS surprise), the stock price will generally rise, and if the actual earnings fail to meet the consensus earnings estimates, the stock prices will generally fall (negative EPS surprise). A company that has a consistent track record of beating their consensus EPS estimates will generally do well over time. | This endpoint returns the latest and historical data across the entire universe available, with advanced filtering if needed. Great for creating a historical earnings calendar with beat/miss indicators.",
        "x-group": "Historical Guidance",
        "x-index": 1002,
        "x-sample-data-url": "/securities/AAPL/zacks/eps_surprises",
        "x-sandbox": true,
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us",
              "security_intl"
            ]
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityZacksEPSSurprises"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/securities/{identifier}/zacks/sales_surprises": {
      "get": {
        "tags": [
          "Security"
        ],
        "summary": "Zacks Sales Surprises for Security",
        "operationId": "get_security_zacks_sales_surprises",
        "description": "This database returns historical estimated and actual sales, guidance, and announcement dates for a specified US or Canadian company.",
        "x-history": "History available back to 2000 with price varying by number of years of history needed.",
        "x-data-type": "End of Day",
        "x-update-freq": "Updates at 6 AM and 8 AM UTC Daily",
        "x-data-source": "Zacks Investment Research",
        "x-additional-comments": "Use this endpoint to create a historical earnings beat/miss chart for a single company. Use the `EPS Surprise` endpoint to return latest and historical guidance across the entire universe to build an earnings calendar.",
        "x-group": "Historical Guidance",
        "x-index": 1003,
        "x-sample-data-url": "/securities/AAPL/zacks/sales_surprises",
        "x-sandbox": true,
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us",
              "security_intl"
            ]
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseSecurityZacksSalesSurprises"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/stock_exchanges": {
      "get": {
        "tags": [
          "Stock Exchange"
        ],
        "summary": "All Stock Exchanges",
        "operationId": "get_all_stock_exchanges",
        "description": "Returns all Stock Exchanges matching the specified parameters",
        "x-group": "Security Reference Data",
        "x-index": 1003,
        "x-sample-data-url": "/stock_exchanges",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/security-reference-data",
        "parameters": [
          {
            "in": "query",
            "name": "city",
            "description": "Filter by city",
            "type": "string",
            "required": false,
            "x-example": "New York",
            "x-example-value": "New York"
          },
          {
            "in": "query",
            "name": "country",
            "description": "Filter by country",
            "type": "string",
            "required": false,
            "x-example": "UNITED STATES OF AMERICA",
            "x-example-value": "UNITED STATES OF AMERICA",
            "x-default-value": "UNITED STATES OF AMERICA"
          },
          {
            "in": "query",
            "name": "country_code",
            "description": "Filter by ISO country code",
            "type": "string",
            "required": false,
            "x-example": "US",
            "x-example-value": "US"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseStockExchanges"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/stock_exchanges/{identifier}": {
      "get": {
        "tags": [
          "Stock Exchange"
        ],
        "summary": "Lookup Stock Exchange",
        "operationId": "get_stock_exchange_by_id",
        "description": "Returns the Stock Exchange with the given `identifier`",
        "x-group": "Security Reference Data",
        "x-index": 1004,
        "x-sample-data-url": "/stock_exchanges/USCOMP",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/security-reference-data",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Stock Exchange identifier (MIC or Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "USCOMP",
            "x-example-value": "USCOMP",
            "x-default-value": "USCOMP",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "stock_exchange"
            ]
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/StockExchange"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/stock_exchanges/{identifier}/betas": {
      "get": {
        "tags": [
          "Stock Exchange"
        ],
        "summary": "Security Betas",
        "operationId": "get_stock_exchange_betas",
        "description": "Returns security beta data in the Stock Exchange with the given `identifier`",
        "x-group": "Technical Indicators",
        "x-index": 1006,
        "x-sample-data-url": "/stock_exchanges/USCOMP/betas",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/us-historical-end-of-day-prices",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Stock Exchange identifier (MIC or Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "USCOMP",
            "x-example-value": "USCOMP",
            "x-default-value": "USCOMP",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "stock_exchange"
            ]
          },
          {
            "in": "query",
            "name": "type",
            "description": "Only of the given type",
            "enum": [
              "weekly",
              "monthly"
            ],
            "type": "string",
            "default": "weekly",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "date",
            "description": "Return data for this period end date.",
            "type": "date",
            "x-example": "2024-04-24",
            "required": false
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseStockExchangeBetas"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/stock_exchanges/{identifier}/gainers": {
      "get": {
        "tags": [
          "Stock Exchange"
        ],
        "summary": "Top Gainers by Exchange",
        "operationId": "get_stock_exchange_gainers",
        "description": "Returns securities with the highest gain percent change traded on the chosen stock exchange.",
        "x-group": "Real-Time Prices",
        "x-index": 1008,
        "x-sample-data-url": "/stock_exchanges/USCOMP/gainers",
        "x-sandbox": true,
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Stock Exchange identifier (MIC or Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "USCOMP",
            "x-example-value": "USCOMP",
            "x-default-value": "USCOMP",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "stock_exchange"
            ]
          },
          {
            "in": "query",
            "name": "min_price",
            "description": "The minimum price filter",
            "type": "number",
            "required": false
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "source",
            "description": "Return the realtime price from the specified source instead of the most recent.",
            "type": "string",
            "enum": [
              "iex",
              "utp_delayed",
              "cta_a_delayed",
              "cta_b_delayed",
              "otc_delayed",
              "delayed_sip",
              "nasdaq_basic",
              "cboe_one_delayed",
              "iex_delayed"
            ],
            "x-example": "delayed_sip",
            "x-example-value": "delayed_sip",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseStockExchangeMovers"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/stock_exchanges/{identifier}/losers": {
      "get": {
        "tags": [
          "Stock Exchange"
        ],
        "summary": "Top Losers by Exchange",
        "operationId": "get_stock_exchange_losers",
        "description": "Returns securities with the highest loss percent change traded on the chosen stock exchange.",
        "x-group": "Real-Time Prices",
        "x-index": 1009,
        "x-sample-data-url": "/stock_exchanges/USCOMP/losers",
        "x-sandbox": true,
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Stock Exchange identifier (MIC or Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "USCOMP",
            "x-example-value": "USCOMP",
            "x-default-value": "USCOMP",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "stock_exchange"
            ]
          },
          {
            "in": "query",
            "name": "min_price",
            "description": "The minimum price filter",
            "type": "number",
            "required": false
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "source",
            "description": "Return the realtime price from the specified source instead of the most recent.",
            "type": "string",
            "enum": [
              "iex",
              "utp_delayed",
              "cta_a_delayed",
              "cta_b_delayed",
              "otc_delayed",
              "delayed_sip",
              "nasdaq_basic",
              "cboe_one_delayed",
              "iex_delayed"
            ],
            "x-example": "delayed_sip",
            "x-example-value": "delayed_sip",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseStockExchangeMovers"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/stock_exchanges/{identifier}/prices": {
      "get": {
        "tags": [
          "Stock Exchange"
        ],
        "summary": "Stock Prices by Exchange",
        "operationId": "get_stock_exchange_prices",
        "description": "Returns end-of-day stock prices for Securities on the Stock Exchange with `identifier` and on the `price_date` (or the latest date that prices are available)",
        "x-group": "Historical End of Day Prices",
        "x-index": 1002,
        "x-sample-data-url": "/stock_exchanges/USCOMP/prices",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/us-historical-end-of-day-prices",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Stock Exchange identifier (MIC or Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "USCOMP",
            "x-example-value": "USCOMP",
            "x-default-value": "USCOMP",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "stock_exchange"
            ]
          },
          {
            "in": "query",
            "name": "date",
            "description": "The date for which to return prices. May not be used with the start_date and end_date parameters.",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "2018-08-14"
          },
          {
            "in": "query",
            "name": "start_date",
            "type": "string",
            "format": "date",
            "description": "The start of the date range you're querying. May not be used with date parameter.",
            "required": false,
            "x-example": "2020-08-14"
          },
          {
            "in": "query",
            "name": "end_date",
            "type": "string",
            "format": "date",
            "description": "The end of the date range you're querying. May not be used with date parameter.",
            "required": false,
            "x-example": "2022-08-14"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          },
          {
            "in": "query",
            "name": "tickers",
            "type": "array",
            "required": false,
            "collectionFormat": "csv",
            "description": "The comma-delimited list of ticker symbols to filter down to. If not provided, the entire stock exchange is returned.",
            "items": {
              "type": "string"
            },
            "default": "~null",
            "x-example": "AAPL,MSFT,NVDA",
            "x-example-value": "AAPL,MSFT,NVDA"
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseStockExchangeStockPrices"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/stock_exchanges/{identifier}/prices/adjustments": {
      "get": {
        "tags": [
          "Stock Exchange"
        ],
        "summary": "Stock Price Adjustments by Exchange",
        "operationId": "get_stock_exchange_price_adjustments",
        "description": "Returns stock price adjustments for the Stock Exchange with the given `identifier`",
        "x-group": "Historical End of Day Prices",
        "x-index": 1003,
        "x-sample-data-url": "/stock_exchanges/USCOMP/prices/adjustments?date=2018-08-14",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/us-historical-end-of-day-prices",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Stock Exchange identifier (MIC or Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "USCOMP",
            "x-example-value": "USCOMP",
            "x-default-value": "USCOMP",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "stock_exchange"
            ]
          },
          {
            "in": "query",
            "name": "date",
            "description": "The date for which to return price adjustments",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "2018-08-14"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseStockExchangeStockPriceAdjustments"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/stock_exchanges/{identifier}/prices/adjustments/dividends": {
      "get": {
        "tags": [
          "Stock Exchange"
        ],
        "summary": "Dividends by date for exchange",
        "operationId": "get_stock_exchange_price_adjustments_dividends",
        "description": "Returns dividend adjustments for the Stock Exchange with the given `identifier`",
        "x-group": "Historical End of Day Prices",
        "x-index": 1003,
        "x-sample-data-url": "/stock_exchanges/USCOMP/prices/adjustments?dividends=true",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/us-historical-end-of-day-prices",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Stock Exchange identifier (MIC or Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "USCOMP",
            "x-example-value": "USCOMP",
            "x-default-value": "USCOMP",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "stock_exchange"
            ]
          },
          {
            "in": "query",
            "name": "date",
            "description": "The date for which to return dividends",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "2025-06-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseStockExchangeStockPriceAdjustments"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/stock_exchanges/{identifier}/prices/adjustments/splits": {
      "get": {
        "tags": [
          "Stock Exchange"
        ],
        "summary": "Splits by date for exchange",
        "operationId": "get_stock_exchange_price_adjustments_splits",
        "description": "Returns split adjustments for the Stock Exchange with the given `identifier`",
        "x-group": "Historical End of Day Prices",
        "x-index": 1003,
        "x-sample-data-url": "/stock_exchanges/USCOMP/prices/adjustments?splits=true",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/us-historical-end-of-day-prices",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Stock Exchange identifier (MIC or Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "USCOMP",
            "x-example-value": "USCOMP",
            "x-default-value": "USCOMP",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "stock_exchange"
            ]
          },
          {
            "in": "query",
            "name": "date",
            "description": "The date for which to return splits",
            "type": "string",
            "format": "date",
            "required": false,
            "x-example": "2025-06-01"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseStockExchangeStockPriceAdjustments"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/stock_exchanges/{identifier}/prices/realtime": {
      "get": {
        "tags": [
          "Stock Exchange"
        ],
        "summary": "Realtime Stock Prices by Exchange",
        "operationId": "get_stock_exchange_realtime_prices",
        "description": "Returns realtime stock prices for the Stock Exchange with the given `identifier`",
        "x-group": "Real-Time Prices",
        "x-index": 1001,
        "x-sample-data-url": "/stock_exchanges/USCOMP/prices/realtime",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/us-real-time-prices",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Stock Exchange identifier (MIC or Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "USCOMP",
            "x-example-value": "USCOMP",
            "x-default-value": "USCOMP",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "stock_exchange"
            ]
          },
          {
            "in": "query",
            "name": "source",
            "type": "array",
            "required": false,
            "collectionFormat": "csv",
            "description": "Return realtime prices from the specified comma-delimited data sources. If no source is specified, all sources available to user are used.",
            "items": {
              "type": "string",
              "enum": [
                "iex",
                "iex_delayed",
                "utp_delayed",
                "cta_a_delayed",
                "cta_b_delayed",
                "otc_delayed",
                "delayed_sip",
                "nasdaq_basic",
                "cboe_one_delayed"
              ]
            },
            "default": "~null",
            "x-example": "iex,delayed_sip",
            "x-example-value": "iex,delayed_sip"
          },
          {
            "in": "query",
            "name": "active_only",
            "description": "Returns prices only from the most recent trading day.",
            "type": "boolean",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "traded_today",
            "description": "Returns prices only from securities which have traded on the most recent trading day.",
            "type": "boolean",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "tickers",
            "type": "array",
            "required": false,
            "collectionFormat": "csv",
            "description": "The comma-delimited list of ticker symbols to filter to. If not provided, the entire stock exchange is returned.",
            "items": {
              "type": "string"
            },
            "default": "~null",
            "x-example": "AAPL,MSFT,NVDA",
            "x-example-value": "AAPL,MSFT,NVDA"
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseStockExchangeRealtimeStockPrices"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/stock_exchanges/{identifier}/quote": {
      "get": {
        "tags": [
          "Stock Exchange"
        ],
        "summary": "Realtime Quote Prices by Exchange",
        "operationId": "get_stock_exchange_quote",
        "description": "Returns many popular metrics for securities from a given exchange 'identifier' from multiple products conveniently in one API. Realtime stock price data requires at least one realtime product subscription (IEX, NASDAQ Basic, and/or Delayed SIP).  If you are subscribed to multiple realtime stock price products, the api will return the most recent realtime stock price. Previous close price and percent change fields require both an EoD US Stock Price subscription and a realtime stock price subscription. Market_cap, price_to_earnings, and dividendyield data fields require a fundamentals subscription.",
        "x-group": "Real-Time Prices",
        "x-index": 1002,
        "x-sample-data-url": "/stock_exchanges/USCOMP/quote",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/us-real-time-prices",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Stock Exchange identifier (MIC or Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "USCOMP",
            "x-example-value": "USCOMP",
            "x-default-value": "USCOMP",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "stock_exchange"
            ]
          },
          {
            "in": "query",
            "name": "source",
            "description": "Return the realtime price from the specified source instead of the most recent.",
            "type": "string",
            "enum": [
              "iex",
              "utp_delayed",
              "cta_a_delayed",
              "cta_b_delayed",
              "otc_delayed",
              "delayed_sip",
              "nasdaq_basic",
              "cboe_one_delayed",
              "iex_delayed"
            ],
            "x-example": "delayed_sip",
            "x-example-value": "delayed_sip",
            "required": false
          },
          {
            "in": "query",
            "name": "active_only",
            "description": "Returns prices only from the most recent trading day.",
            "type": "boolean",
            "required": false,
            "x-example": "~null"
          },
          {
            "in": "query",
            "name": "tickers",
            "type": "array",
            "required": true,
            "collectionFormat": "csv",
            "description": "The comma-delimited list of ticker symbols to return quotes for.",
            "items": {
              "type": "string"
            },
            "default": "~null",
            "x-example": "AAPL,MSFT,NVDA",
            "x-example-value": "AAPL,MSFT,NVDA"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseStockExchangeQuote"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/stock_exchanges/{identifier}/securities": {
      "get": {
        "tags": [
          "Stock Exchange"
        ],
        "summary": "Securities by Exchange",
        "operationId": "get_stock_exchange_securities",
        "description": "Returns Securities traded on the Stock Exchange with `identifier`",
        "x-group": "Security Reference Data",
        "x-index": 1005,
        "x-sample-data-url": "/stock_exchanges/USCOMP/securities",
        "x-sandbox": true,
        "x-documentation-url": "https://intrinio.com/docs/security-reference-data",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "A Stock Exchange identifier (MIC or Intrinio ID)",
            "type": "string",
            "required": true,
            "x-example": "USCOMP",
            "x-example-value": "USCOMP",
            "x-default-value": "USCOMP",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "stock_exchange"
            ]
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseStockExchangeSecurities"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/zacks/analyst_ratings": {
      "get": {
        "tags": [
          "Zacks"
        ],
        "summary": "Zacks Analyst Ratings",
        "operationId": "get_zacks_analyst_ratings",
        "description": "This database offers consensus analyst recommendations for over 5,000 US and Canadian listed companies.",
        "x-group": "Zacks",
        "x-note": "Ratings are consensus, meaning there will be a single rating for a given company and time period. This will not provide individual analyst ratings with analyst name and institution.",
        "x-history": "Current only by default. History available back to 1985 for an additional fee varying by number of years of history needed.",
        "x-data-type": "End of Day",
        "x-update-freq": "Updates at 6 AM and 8 AM UTC Daily",
        "x-data-source": "Zacks Investment Research",
        "x-additional-comments": "This endpoint offers advanced filtering across the entire available universe, allowing you to return a list of companies meeting a very specific set of criteria. | An analyst rating of 1 is a strong buy, and a 5 is a strong sell. The lower the rating the higher the sentiment.",
        "x-index": 1001,
        "x-sample-data-url": "/zacks/analyst_ratings",
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": false,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "start_date",
            "type": "string",
            "format": "date",
            "description": "Limit ratings to those on or after this date",
            "required": false,
            "x-example": "~null",
            "x-example-value": "2019-01-01",
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "end_date",
            "type": "string",
            "format": "date",
            "description": "Limit ratings to those on or before this date",
            "required": false,
            "x-example": "~null",
            "x-example-value": "2019-12-31",
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "mean_greater",
            "type": "number",
            "description": "Return only records with a mean (average) higher than this value",
            "required": false,
            "minimum": 1,
            "maximum": 5,
            "x-example": "~null",
            "x-example-value": 1.5,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "mean_less",
            "type": "number",
            "description": "Return only records with a mean (average) lower than this value",
            "required": false,
            "minimum": 1,
            "maximum": 5,
            "x-example": "~null",
            "x-example-value": 3.0,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "strong_buys_greater",
            "type": "integer",
            "minimum": 0,
            "description": "Return only records with more than this many Strong Buy recommendations",
            "required": false,
            "x-example": "~null",
            "x-example-value": 5,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "strong_buys_less",
            "type": "integer",
            "minimum": 0,
            "description": "Return only records with fewer than this many Strong Buy recommendations",
            "required": false,
            "x-example": "~null",
            "x-example-value": 10,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "buys_greater",
            "type": "integer",
            "minimum": 0,
            "description": "Return only records with more than this many Buy recommendations",
            "required": false,
            "x-example": "~null",
            "x-example-value": 2,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "buys_less",
            "type": "integer",
            "minimum": 0,
            "description": "Return only records with fewer than this many Buy recommendations",
            "required": false,
            "x-example": "~null",
            "x-example-value": 1,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "holds_greater",
            "type": "integer",
            "minimum": 0,
            "description": "Return only records with more than this many Hold recommendations",
            "required": false,
            "x-example": "~null",
            "x-example-value": 3,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "holds_less",
            "type": "integer",
            "minimum": 0,
            "description": "Return only records with fewer than this many Hold recommendations",
            "required": false,
            "x-example": "~null",
            "x-example-value": 5,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "sells_greater",
            "type": "integer",
            "minimum": 0,
            "description": "Return only records with more than this many Sell recommendations",
            "required": false,
            "x-example": "~null",
            "x-example-value": 8,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "sells_less",
            "type": "integer",
            "minimum": 0,
            "description": "Return only records with fewer than this many Sell recommendations",
            "required": false,
            "x-example": "~null",
            "x-example-value": 7,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "strong_sells_greater",
            "type": "integer",
            "minimum": 0,
            "description": "Return only records with more than this many Strong Sell recommendations",
            "required": false,
            "x-example": "~null",
            "x-example-value": 8,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "strong_sells_less",
            "type": "integer",
            "minimum": 0,
            "description": "Return only records with fewer than this many Strong Sell recommendations",
            "required": false,
            "x-example": "~null",
            "x-example-value": 8,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "total_greater",
            "type": "integer",
            "minimum": 0,
            "description": "Return only records with more than this many recommendations, regardless of type",
            "required": false,
            "x-example": "~null",
            "x-example-value": 20,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "total_less",
            "type": "integer",
            "minimum": 0,
            "description": "Return only records with fewer than this many recommendations, regardless of type",
            "required": false,
            "x-example": "~null",
            "x-example-value": 7,
            "x-remove-param": true
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseZacksAnalystRatings"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/zacks/ebitda_consensus": {
      "get": {
        "tags": [
          "Zacks"
        ],
        "summary": "Zacks EBITDA Consensus",
        "operationId": "get_zacks_ebitda_consensus",
        "description": "This database offers consensus EBITDA-related estimates for over 4,000 US and Canadian listed companies.",
        "x-note": "Estimates are consensus, meaning there will be a single estimate for a given company and time period. This will not provide individual analyst estimates with analyst name and institution.",
        "x-data-type": "End of Day",
        "x-group": "Estimates",
        "x-update-freq": "Updates at 8 PM daily",
        "x-data-source": "Zacks Investment Research",
        "x-index": 1000,
        "x-sample-data-url": "/zacks/ebitda_consensus",
        "x-sandbox": false,
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "A Company identifier (Ticker, CIK, LEI, Intrinio ID)",
            "type": "string",
            "required": false,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "company"
            ]
          },
          {
            "in": "query",
            "name": "type",
            "type": "string",
            "description": "Limit EBITDA estimates to this type",
            "required": false,
            "x-example": "~null",
            "x-example-value": "pretax_income"
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseZacksEBITDAConsensus"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/zacks/eps_estimates": {
      "get": {
        "tags": [
          "Zacks"
        ],
        "summary": "Zacks EPS Estimates",
        "operationId": "get_zacks_eps_estimates",
        "description": "This database offers consensus earnings estimates for over 5,000 US and Canadian listed companies.",
        "x-note": "Estimates are consensus, meaning there will be a single estimate for a given company and time period. This will not provide individual analyst estimates with analyst name and institution.",
        "x-history": "Current only by default. Annual history available back to 1979 and quarterly history available back to 1984 for an additional fee varying by number of years of history needed.",
        "x-data-type": "End of Day",
        "x-group": "Estimates",
        "x-update-freq": "Updates at 6 AM and 8 AM UTC Daily",
        "x-data-source": "Zacks Investment Research",
        "x-additional-comments": "Earnings per share estimates are analyst’s opinions of how much profit a company will show based on factors such as management, anticipated sales, demand, competition, and overall economic conditions. This is the main benchmark against which actual earnings are measured. | Although history is not included by default, we still provide historical snapshots 30, 60 and 90 days in the past, along with a percent change field to get a sense for how the estimate has changed over time.",
        "x-index": 1000,
        "x-sample-data-url": "/zacks/eps_estimates",
        "x-sandbox": false,
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "A Company identifier (Ticker, CIK, LEI, Intrinio ID)",
            "type": "string",
            "required": false,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "company"
            ]
          },
          {
            "in": "query",
            "name": "start_date",
            "type": "string",
            "format": "date",
            "description": "Limit EPS estimates to those on or after this date",
            "required": false,
            "x-example": "~null",
            "x-example-value": "2020-01-01",
            "x-default-value": "2020-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "type": "string",
            "format": "date",
            "description": "Limit EPS estimates to those on or before this date",
            "required": false,
            "x-example": "~null",
            "x-example-value": "2020-12-31"
          },
          {
            "in": "query",
            "name": "fiscal_year",
            "description": "Only for the given fiscal year",
            "type": "integer",
            "required": false,
            "x-example": "~null",
            "x-example-value": 2020,
            "x-default-value": 2020
          },
          {
            "in": "query",
            "name": "fiscal_period",
            "description": "The fiscal period",
            "enum": [
              "Q1TTM",
              "Q2TTM",
              "Q3TTM",
              "FY",
              "Q1",
              "Q2",
              "Q3",
              "Q4",
              "Q2YTD",
              "Q3YTD"
            ],
            "type": "string",
            "required": false,
            "x-example": "~null",
            "x-example-value": "FY",
            "x-default-value": "FY"
          },
          {
            "in": "query",
            "name": "calendar_year",
            "description": "Only for the given calendar year",
            "type": "integer",
            "required": false,
            "x-example": "~null",
            "x-example-value": 2020,
            "x-default-value": 2020
          },
          {
            "in": "query",
            "name": "calendar_period",
            "description": "The calendar period",
            "enum": [
              "Q1TTM",
              "Q2TTM",
              "Q3TTM",
              "FY",
              "Q1",
              "Q2",
              "Q3",
              "Q4",
              "Q2YTD",
              "Q3YTD"
            ],
            "type": "string",
            "required": false,
            "x-example": "~null",
            "x-example-value": "FY",
            "x-default-value": "FY"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseZacksEPSEstimates"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/zacks/eps_growth_rates": {
      "get": {
        "tags": [
          "Zacks"
        ],
        "summary": "Zacks EPS Growth Rates",
        "operationId": "get_zacks_eps_growth_rates",
        "description": "This database offers consensus EPS growth rate estimates, comparing company estimates to historical company estimates, industry estimates, and S&P 500 index estimates.",
        "x-group": "Estimates",
        "x-note": "Estimates are consensus, meaning there will be a single estimate for a given company and time period. This will not provide individual analyst estimates with analyst name and institution.",
        "x-history": "N/A",
        "x-data-type": "End of Day",
        "x-update-freq": "Updates at 6 AM and 8 AM UTC Daily",
        "x-data-source": "Zacks Investment Research",
        "x-additional-comments": "Earnings growth is one of the most important factors to track, as stocks exhibiting exceptionally surging profit levels tend to indicate strong future prospects and attract the attention of most investors. | Try leaving the `identifier` parameter blank to return data for the entire available universe.",
        "x-index": 1001,
        "x-sample-data-url": "/zacks/eps_growth_rates",
        "x-sandbox": false,
        "parameters": [
          {
            "in": "query",
            "name": "company",
            "description": "Filings for the given `company` identifier (ticker, CIK, LEI, Intrinio ID)",
            "type": "string",
            "required": false,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "company"
            ]
          },
          {
            "in": "query",
            "name": "industry_group_name",
            "description": "Return only growth rates for companies in the given Zacks industry group name",
            "type": "string",
            "required": false,
            "x-example": "~null",
            "x-example-value": "COMP-MINI"
          },
          {
            "in": "query",
            "name": "industry_group_number",
            "description": "Return only growth rates for companies in the given Zacks industry group number",
            "type": "string",
            "required": false,
            "x-example": "~null",
            "x-example-value": 199
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseZacksEPSGrowthRates"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/zacks/eps_surprises": {
      "get": {
        "tags": [
          "Zacks"
        ],
        "summary": "Zacks EPS Surprises",
        "operationId": "get_zacks_eps_surprises",
        "description": "This database returns historical estimated and actual earnings, guidance, and announcement dates for 17,000+ US and Canadian listed companies.",
        "x-group": "Historical Guidance",
        "x-history": "History available back to 1994 with price varying by number of years of history needed.",
        "x-data-type": "End of Day",
        "x-update-freq": "Updates at 6 AM and 8 AM UTC Daily",
        "x-data-source": "Zacks Investment Research",
        "x-additional-comments": "Companies report their EPS figures quarterly that will either differ or mirror the consensus estimates (those estimates that analysts have compiled) which reveal the economic well being of a company. The stock price usually reacts immediately. If the actual reported EPS is greater than the EPS estimate (positive EPS surprise), the stock price will generally rise, and if the actual earnings fail to meet the consensus earnings estimates, the stock prices will generally fall (negative EPS surprise). A company that has a consistent track record of beating their consensus EPS estimates will generally do well over time. | This endpoint returns the latest and historical data across the entire universe available, with advanced filtering if needed. Great for creating a historical earnings calendar with beat/miss indicators.",
        "x-index": 1000,
        "x-sample-data-url": "/zacks/eps_surprises",
        "x-sandbox": true,
        "parameters": [
          {
            "in": "query",
            "name": "start_date",
            "type": "string",
            "format": "date",
            "description": "Limit EPS surprises to those on or after this date",
            "required": false,
            "x-example": "~null",
            "x-example-value": "2019-01-01",
            "x-default-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "type": "string",
            "format": "date",
            "description": "Limit EPS surprises to those on or before this date",
            "required": false,
            "x-example": "~null",
            "x-example-value": "2019-12-31"
          },
          {
            "in": "query",
            "name": "eps_actual_greater",
            "type": "number",
            "description": "Return only records with an actual EPS higher than this value",
            "required": false,
            "x-example": "~null",
            "x-example-value": 1.0
          },
          {
            "in": "query",
            "name": "eps_actual_less",
            "type": "number",
            "description": "Return only records with an actual EPS lower than this value",
            "required": false,
            "x-example": "~null",
            "x-example-value": 2.0
          },
          {
            "in": "query",
            "name": "eps_mean_estimate_greater",
            "type": "number",
            "description": "Return only records with an EPS mean estimate greater than this value",
            "required": false,
            "x-example": "~null",
            "x-example-value": 1.0
          },
          {
            "in": "query",
            "name": "eps_mean_estimate_less",
            "type": "number",
            "description": "Return only records with an EPS mean estimate lower than this value",
            "required": false,
            "x-example": "~null",
            "x-example-value": 2.0
          },
          {
            "in": "query",
            "name": "eps_amount_diff_greater",
            "type": "number",
            "description": "Return only records with an EPS amount difference greater than this value",
            "required": false,
            "x-example": "~null",
            "x-example-value": 1.0
          },
          {
            "in": "query",
            "name": "eps_amount_diff_less",
            "type": "number",
            "description": "Return only records with an EPS amount difference less than this value",
            "required": false,
            "x-example": "~null",
            "x-example-value": 1.0
          },
          {
            "in": "query",
            "name": "eps_percent_diff_greater",
            "type": "number",
            "description": "Return only records with an EPS percent difference greater than this value",
            "required": false,
            "x-example": "~null",
            "x-example-value": 0.0
          },
          {
            "in": "query",
            "name": "eps_percent_diff_less",
            "type": "number",
            "description": "Return only records with an EPS percent difference less than this value",
            "required": false,
            "x-example": "~null",
            "x-example-value": 0.0
          },
          {
            "in": "query",
            "name": "eps_count_estimate_greater",
            "type": "number",
            "description": "Return only records with an EPS count estimate greater than this value",
            "required": false,
            "x-example": "~null",
            "x-example-value": 5.0
          },
          {
            "in": "query",
            "name": "eps_count_estimate_less",
            "type": "number",
            "description": "Return only records with an EPS count estimate less than this value",
            "required": false,
            "x-example": "~null",
            "x-example-value": 10.0
          },
          {
            "in": "query",
            "name": "eps_std_dev_estimate_greater",
            "type": "number",
            "description": "Return only records with an EPS standard deviation greater than this value",
            "required": false,
            "x-example": "~null",
            "x-example-value": 0.0
          },
          {
            "in": "query",
            "name": "eps_std_dev_estimate_less",
            "type": "number",
            "description": "Return only records with an EPS standard deviation less than this value",
            "required": false,
            "x-example": "~null",
            "x-example-value": 1.0
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseZacksEPSSurprises"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/zacks/etf_holdings": {
      "get": {
        "tags": [
          "Zacks"
        ],
        "summary": "Zacks ETF Holdings",
        "operationId": "get_zacks_etf_holdings",
        "description": "Returns Zacks ETF holdings data",
        "x-group": "Zacks",
        "x-index": 2007,
        "x-sample-data-url": "/zacks/etf_holdings",
        "x-sandbox": false,
        "x-hidden": true,
        "parameters": [
          {
            "in": "query",
            "name": "etf_ticker",
            "type": "string",
            "description": "Return holdings of the ETF with the given ticker",
            "required": false,
            "x-example": "SPY",
            "x-example-value": "SPY",
            "x-default-value": "SPY"
          },
          {
            "in": "query",
            "name": "holding_symbol",
            "type": "string",
            "description": "Return holdings where the instrument being held has the given trading symbol",
            "required": false,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL"
          },
          {
            "in": "query",
            "name": "weight_greater",
            "type": "number",
            "description": "Return on the holdings with a weight greater than",
            "required": false,
            "x-example": "~null",
            "x-example-value": 2.5,
            "x-default-value": 2.5
          },
          {
            "in": "query",
            "name": "weight_less",
            "type": "number",
            "description": "Return on the holdings with a weight less than",
            "required": false,
            "x-example": "~null",
            "x-example-value": 2.5,
            "x-default-value": 2.5
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseZacksETFHoldings"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/zacks/forward_pe": {
      "get": {
        "tags": [
          "Zacks"
        ],
        "summary": "Zacks Forward PE Estimates",
        "operationId": "get_zacks_forward_pe",
        "description": "This database offers price-to-earning ratio estimates for over 4,000 US and Canadian listed companies.",
        "x-note": "Estimates are consensus, meaning there will be a single estimate for a given company and time period. This will not provide individual analyst estimates with analyst name and institution.",
        "x-data-type": "End of Day",
        "x-group": "Estimates",
        "x-update-freq": "Updates at 8 PM daily",
        "x-data-source": "Zacks Investment Research",
        "x-index": 1000,
        "x-sample-data-url": "/zacks/forward_pe",
        "x-sandbox": false,
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseZacksForwardPEs"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ]
      }
    },
    "/zacks/forward_pe/{identifier}": {
      "get": {
        "tags": [
          "Zacks"
        ],
        "summary": "Zacks Forward PE by identifer",
        "operationId": "get_zacks_forward_pe_by_identifier",
        "description": "Returns the forward PE estimates for the identifier",
        "x-sample-data-url": "/zacks/forward_pe/AAPL",
        "x-group": "Zacks",
        "x-index": 1001,
        "x-documentation-url": "https://intrinio.com/docs/zacks-forward-pe",
        "parameters": [
          {
            "in": "path",
            "name": "identifier",
            "description": "An Intrinio ID or ticker for a Security",
            "type": "string",
            "required": true,
            "x-example": "MSFT",
            "x-example-value": "MSFT",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ZacksForwardPE"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/zacks/institutional_holdings": {
      "get": {
        "tags": [
          "Zacks"
        ],
        "summary": "Zacks Institutional Holdings",
        "operationId": "get_zacks_institutional_holdings",
        "description": "Returns Zacks institutional holdings data",
        "x-group": "Zacks",
        "x-index": 2008,
        "x-sample-data-url": "/zacks/institutional_holdings",
        "x-sandbox": false,
        "x-hidden": true,
        "parameters": [
          {
            "in": "query",
            "name": "ticker",
            "type": "string",
            "description": "Return holdings where the company being held has the given ticker",
            "required": false,
            "x-example": "~null",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL"
          },
          {
            "in": "query",
            "name": "owner_cik",
            "type": "string",
            "description": "Return holdings where the owner/holder has the given Central Index Key (CIK)",
            "required": false,
            "x-example": "~null",
            "x-example-value": "~null",
            "x-default-value": "~null"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseZacksInstitutionalHoldings"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/zacks/institutional_holdings/companies": {
      "get": {
        "tags": [
          "Zacks"
        ],
        "summary": "Zacks Institutional Holding Companies",
        "operationId": "get_zacks_institutional_holding_companies",
        "description": "Returns Zacks institutional holding companies data",
        "x-group": "Zacks",
        "x-index": 2008,
        "x-sample-data-url": "/zacks/institutional_holdings/companies",
        "x-sandbox": false,
        "x-hidden": true,
        "parameters": [
          {
            "in": "query",
            "name": "ticker",
            "type": "string",
            "description": "Return companies with the given ticker",
            "required": false,
            "x-example": "~null",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseZacksInstitutionalHoldingCompanies"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/zacks/institutional_holdings/owners": {
      "get": {
        "tags": [
          "Zacks"
        ],
        "summary": "Zacks Institutional Holding Owners",
        "operationId": "get_zacks_institutional_holding_owners",
        "description": "Returns Zacks institutional holding owners data",
        "x-group": "Zacks",
        "x-index": 2008,
        "x-sample-data-url": "/zacks/institutional_holdings/owners",
        "x-sandbox": false,
        "x-hidden": true,
        "parameters": [
          {
            "in": "query",
            "name": "cik",
            "type": "string",
            "description": "Return owners with the given Central Index Key (CIK)",
            "required": false,
            "x-example": "~null",
            "x-example-value": "~null",
            "x-default-value": "~null"
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseZacksInstitutionalHoldingOwners"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/zacks/long_term_growth_rates": {
      "get": {
        "tags": [
          "Zacks"
        ],
        "summary": "Zacks Long Term Growth Rates",
        "operationId": "get_zacks_long_term_growth_rates",
        "description": "This database offers consensus long term growth rate estimates, including insight into changes in estimates and revisions over time.",
        "x-group": "Estimates",
        "x-note": "Estimates are consensus, meaning there will be a single estimate for a given company and time period. This will not provide individual analyst estimates with analyst name and institution.",
        "x-history": "N/A",
        "x-data-type": "End of Day",
        "x-update-freq": "Updates at 6 AM and 8 AM UTC Daily",
        "x-data-source": "Zacks Investment Research",
        "x-additional-comments": "Long-term growth is an estimate of the compound average rate of growth an analyst expects over and is expressed as a percentage increase per year.",
        "x-index": 1002,
        "x-sample-data-url": "/zacks/long_term_growth_rates",
        "x-sandbox": false,
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)",
            "type": "string",
            "required": false,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "security_us"
            ]
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseZacksLongTermGrowthRates"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/zacks/sales_estimates": {
      "get": {
        "tags": [
          "Zacks"
        ],
        "summary": "Zacks Sales Estimates",
        "operationId": "get_zacks_sales_estimates",
        "description": "This database offers consensus sales estimates for over 5,000 US and Canadian listed companies.",
        "x-note": "Estimates are consensus, meaning there will be a single estimate for a given company and time period. This will not provide individual analyst estimates with analyst name and institution.",
        "x-history": "Current only by default. Annual history available back to 1979 and quarterly history available back to 1984 for an additional fee varying by number of years of history needed.",
        "x-data-type": "End of Day",
        "x-group": "Estimates",
        "x-update-freq": "Updates at 6 AM and 8 AM UTC Daily",
        "x-data-source": "Zacks Investment Research",
        "x-additional-comments": "Sales estimates are analyst’s opinions of how much sales a company will show based on factors considered.",
        "x-index": 1000,
        "x-sample-data-url": "/zacks/sales_estimates",
        "x-sandbox": false,
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "A Company identifier (Ticker, CIK, LEI, Intrinio ID)",
            "type": "string",
            "required": false,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "company"
            ]
          },
          {
            "in": "query",
            "name": "start_date",
            "type": "string",
            "format": "date",
            "description": "Limit Sales estimates to those on or after this date",
            "required": false,
            "x-example": "~null",
            "x-example-value": "2020-01-01",
            "x-default-value": "2020-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "type": "string",
            "format": "date",
            "description": "Limit Sales estimates to those on or before this date",
            "required": false,
            "x-example": "~null",
            "x-example-value": "2020-12-31"
          },
          {
            "in": "query",
            "name": "fiscal_year",
            "description": "Only for the given fiscal year",
            "type": "integer",
            "required": false,
            "x-example": "~null",
            "x-example-value": 2020,
            "x-default-value": 2020
          },
          {
            "in": "query",
            "name": "fiscal_period",
            "description": "The fiscal period",
            "enum": [
              "Q1TTM",
              "Q2TTM",
              "Q3TTM",
              "FY",
              "Q1",
              "Q2",
              "Q3",
              "Q4",
              "Q2YTD",
              "Q3YTD"
            ],
            "type": "string",
            "required": false,
            "x-example": "~null",
            "x-example-value": "FY",
            "x-default-value": "FY"
          },
          {
            "in": "query",
            "name": "calendar_year",
            "description": "Only for the given calendar year",
            "type": "integer",
            "required": false,
            "x-example": "~null",
            "x-example-value": 2020,
            "x-default-value": 2020
          },
          {
            "in": "query",
            "name": "calendar_period",
            "description": "The calendar period",
            "enum": [
              "Q1TTM",
              "Q2TTM",
              "Q3TTM",
              "FY",
              "Q1",
              "Q2",
              "Q3",
              "Q4",
              "Q2YTD",
              "Q3YTD"
            ],
            "type": "string",
            "required": false,
            "x-example": "~null",
            "x-example-value": "FY",
            "x-default-value": "FY"
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseZacksSalesEstimates"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/zacks/sales_surprises": {
      "get": {
        "tags": [
          "Zacks"
        ],
        "summary": "Zacks Sales Surprises",
        "operationId": "get_zacks_sales_surprises",
        "description": "This database returns historical estimated and actual sales, guidance, and announcement dates for 17,000+ US and Canadian listed companies.",
        "x-group": "Historical Guidance",
        "x-history": "History available back to 2000 with price varying by number of years of history needed.",
        "x-data-type": "End of Day",
        "x-update-freq": "Updates at 6 AM and 8 AM UTC Daily",
        "x-data-source": "Zacks Investment Research",
        "x-additional-comments": "Companies report their sales figures quarterly that will either differ or mirror the consensus estimates (those estimates that analysts have compiled) which reveal the economic well being of a company. The stock price usually reacts immediately. If the actual reported sales is greater than the sales estimate (positive sales surprise), the stock price will generally rise, and if the actual sales fail to meet the consensus sales estimates, the stock prices will generally fall (negative sales surprise). A company that has a consistent track record of beating their consensus sales estimates will generally do well over time. | This endpoint returns the latest and historical data across the entire universe available, with advanced filtering if needed. Great for creating a historical earnings calendar with beat/miss indicators.",
        "x-index": 1001,
        "x-sample-data-url": "/zacks/sales_surprises",
        "x-sandbox": true,
        "parameters": [
          {
            "in": "query",
            "name": "start_date",
            "type": "string",
            "format": "date",
            "description": "Limit sales surprises to those on or after this date",
            "required": false,
            "x-example": "~null",
            "x-example-value": "2019-01-01",
            "x-default-value": "2019-01-01"
          },
          {
            "in": "query",
            "name": "end_date",
            "type": "string",
            "format": "date",
            "description": "Limit sales surprises to those on or before this date",
            "required": false,
            "x-example": "~null",
            "x-example-value": "2019-12-31"
          },
          {
            "in": "query",
            "name": "sales_actual_greater",
            "type": "number",
            "description": "Return only records with an actual sales higher than this value",
            "required": false,
            "x-example": "~null",
            "x-example-value": 40000000000.0
          },
          {
            "in": "query",
            "name": "sales_actual_less",
            "type": "number",
            "description": "Return only records with an actual sales lower than this value",
            "required": false,
            "x-example": "~null",
            "x-example-value": 70000000000.0
          },
          {
            "in": "query",
            "name": "sales_mean_estimate_greater",
            "type": "number",
            "description": "Return only records with a sales mean estimate greater than this value",
            "required": false,
            "x-example": "~null",
            "x-example-value": 40000000000.0
          },
          {
            "in": "query",
            "name": "sales_mean_estimate_less",
            "type": "number",
            "description": "Return only records with a sales mean estimate lower than this value",
            "required": false,
            "x-example": "~null",
            "x-example-value": 70000000000.0
          },
          {
            "in": "query",
            "name": "sales_amount_diff_greater",
            "type": "number",
            "description": "Return only records with a sales amount difference greater than this value",
            "required": false,
            "x-example": "~null",
            "x-example-value": -2000000000.0
          },
          {
            "in": "query",
            "name": "sales_amount_diff_less",
            "type": "number",
            "description": "Return only records with a sales amount difference less than this value",
            "required": false,
            "x-example": "~null",
            "x-example-value": 0.0
          },
          {
            "in": "query",
            "name": "sales_percent_diff_greater",
            "type": "number",
            "description": "Return only records with a sales percent difference greater than this value",
            "required": false,
            "x-example": "~null",
            "x-example-value": 0.0
          },
          {
            "in": "query",
            "name": "sales_percent_diff_less",
            "type": "number",
            "description": "Return only records with a sales percent difference less than this value",
            "required": false,
            "x-example": "~null",
            "x-example-value": 0.0
          },
          {
            "in": "query",
            "name": "sales_count_estimate_greater",
            "type": "number",
            "description": "Return only records with a sales count estimate greater than this value",
            "required": false,
            "x-example": "~null",
            "x-example-value": 1.0
          },
          {
            "in": "query",
            "name": "sales_count_estimate_less",
            "type": "number",
            "description": "Return only records with a sales count estimate less than this value",
            "required": false,
            "x-example": "~null",
            "x-example-value": 3.0
          },
          {
            "in": "query",
            "name": "sales_std_dev_estimate_greater",
            "type": "number",
            "description": "Return only records with a sales standard deviation greater than this value",
            "required": false,
            "x-example": "~null",
            "x-example-value": 0.0
          },
          {
            "in": "query",
            "name": "sales_std_dev_estimate_less",
            "type": "number",
            "description": "Return only records with a sales standard deviation less than this value",
            "required": false,
            "x-example": "~null",
            "x-example-value": 1000000000.0
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseZacksSalesSurprises"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/zacks/target_price_consensuses": {
      "get": {
        "tags": [
          "Zacks"
        ],
        "summary": "Zacks Target Price Consensuses",
        "operationId": "get_zacks_target_price_consensuses",
        "description": "Returns the latest Zacks target price consensus data",
        "x-group": "Ratings & Price Targets",
        "x-index": 1002,
        "x-sample-data-url": "/zacks/target_price_consensuses",
        "x-sandbox": false,
        "parameters": [
          {
            "in": "query",
            "name": "identifier",
            "description": "Filings for the given `company` identifier (ticker, CIK, LEI, Intrinio ID)",
            "type": "string",
            "required": false,
            "x-example": "AAPL",
            "x-example-value": "AAPL",
            "x-default-value": "AAPL",
            "x-lookup-mode": "identifier",
            "x-lookup-types": [
              "company"
            ]
          },
          {
            "in": "query",
            "name": "industry_group_number",
            "description": "Return only growth rates for companies in the given Zacks industry group number",
            "type": "string",
            "required": false,
            "x-example": "~null",
            "x-example-value": 199
          },
          {
            "in": "query",
            "name": "page_size",
            "type": "integer",
            "required": false,
            "description": "The number of results to return",
            "maximum": 10000,
            "default": 100,
            "x-example": 100
          },
          {
            "in": "query",
            "name": "next_page",
            "description": "Gets the next page of data from a previous API call",
            "type": "string",
            "x-example": "~null",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiResponseZacksTargetPriceConsensuses"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        },
        "produces": [
          "application/json"
        ]
      }
    }
  },
  "definitions": {
    "AccumulationDistributionIndexTechnicalValue": {
      "type": "object",
      "description": "The date_time and adi values of a Accumulation/Distribution Index technical indicator calculation",
      "properties": {
        "date_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date_time of the observation"
        },
        "adi": {
          "type": "number",
          "format": "float",
          "description": "The Accumulation/Distribution Index calculation value"
        }
      }
    },
    "ApiResponseBulkDownloadLinks": {
      "type": "object",
      "properties": {
        "bulk_downloads": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BulkDownloadSummary"
          }
        }
      }
    },
    "ApiResponseCompanies": {
      "type": "object",
      "properties": {
        "companies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompanySummary"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseCompaniesSearch": {
      "type": "object",
      "properties": {
        "companies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompanySummary"
          }
        }
      }
    },
    "ApiResponseCompanyAnswers": {
      "type": "object",
      "properties": {
        "source": {
          "type": "string",
          "description": "The organziation the answer data was sourced from"
        },
        "query": {
          "type": "string",
          "description": "The query posed to the Thea API"
        },
        "answers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TheaEntityAnswer"
          }
        },
        "companies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompanySummary"
          }
        }
      }
    },
    "ApiResponseCompanyDailyMetrics": {
      "type": "object",
      "properties": {
        "daily_metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompanyDailyMetric"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseCompanyFilings": {
      "type": "object",
      "properties": {
        "filings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilingSummary"
          }
        },
        "company": {
          "$ref": "#/definitions/CompanySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseCompanyFundamentals": {
      "type": "object",
      "properties": {
        "fundamentals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FundamentalSummary"
          }
        },
        "company": {
          "$ref": "#/definitions/CompanySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseCompanyHistoricalData": {
      "type": "object",
      "properties": {
        "historical_data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HistoricalData"
          }
        },
        "company": {
          "$ref": "#/definitions/CompanySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseCompanyInsiderTransactionFilings": {
      "type": "object",
      "properties": {
        "transaction_filings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InsiderTransactionFiling"
          }
        },
        "company": {
          "type": "object",
          "description": "The company associated with the transaction filing",
          "$ref": "#/definitions/CompanySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseCompanyNews": {
      "type": "object",
      "properties": {
        "news": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompanyNewsSummary"
          }
        },
        "company": {
          "$ref": "#/definitions/CompanySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseCompanyNewsBody": {
      "type": "object",
      "description": "A news article body about a company",
      "properties": {
        "body": {
          "type": "string",
          "description": "The article body."
        }
      }
    },
    "ApiResponseCompanyPublicFloatResult": {
      "type": "object",
      "description": "An company public floats result contains all public floats corresponding to the provided query.",
      "properties": {
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        },
        "company": {
          "$ref": "#/definitions/CompanySummary"
        },
        "public_floats": {
          "type": "array",
          "description": "Array of all the public floats in this page of the result.",
          "items": {
            "$ref": "#/definitions/CompanyPublicFloat"
          }
        }
      }
    },
    "ApiResponseCompanyRecognize": {
      "type": "object",
      "properties": {
        "companies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompanySummary"
          }
        }
      }
    },
    "ApiResponseCompanySecurities": {
      "type": "object",
      "properties": {
        "securities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecuritySummary"
          }
        },
        "company": {
          "$ref": "#/definitions/CompanySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseCompanySharesOutstanding": {
      "type": "object",
      "properties": {
        "shares_outstanding": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompanySharesOutstanding"
          }
        },
        "company": {
          "$ref": "#/definitions/CompanySummary"
        }
      }
    },
    "ApiResponseDataTags": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataTag"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseDataTagsSearch": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataTag"
          }
        }
      }
    },
    "ApiResponseESGCompanies": {
      "type": "object",
      "properties": {
        "companies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ESGCompanySummary"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseESGCompanyComprehensiveRatingHistory": {
      "type": "object",
      "properties": {
        "ratings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ESGComprehensiveRating"
          }
        },
        "company": {
          "type": "object",
          "$ref": "#/definitions/ESGCompanySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseESGCompanyRatingHistory": {
      "type": "object",
      "properties": {
        "ratings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ESGRating"
          }
        },
        "company": {
          "type": "object",
          "$ref": "#/definitions/ESGCompanySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseESGLatest": {
      "type": "object",
      "properties": {
        "ratings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ESGRatingWithCompany"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseESGLatestComprehensive": {
      "type": "object",
      "properties": {
        "ratings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ESGComprehensiveRatingWithCompany"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseETFHoldings": {
      "type": "object",
      "properties": {
        "holdings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ETFHolding"
          }
        },
        "etf": {
          "$ref": "#/definitions/ETFSummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseETFs": {
      "type": "object",
      "properties": {
        "etfs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ETFSummary"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseEconomicIndexHistoricalData": {
      "type": "object",
      "properties": {
        "historical_data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HistoricalData"
          }
        },
        "index": {
          "$ref": "#/definitions/EconomicIndexSummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseEconomicIndices": {
      "type": "object",
      "properties": {
        "indices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EconomicIndexSummary"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseEconomicIndicesSearch": {
      "type": "object",
      "properties": {
        "indices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EconomicIndexSummary"
          }
        }
      }
    },
    "ApiResponseEodIndexPrices": {
      "type": "object",
      "properties": {
        "prices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EodIndexPriceSummary"
          }
        },
        "index": {
          "type": "object",
          "description": "The index",
          "$ref": "#/definitions/ApiResponseIndex"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseEodIndexPricesAll": {
      "type": "object",
      "properties": {
        "prices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EodIndexPrice"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseFilingAnswers": {
      "type": "object",
      "properties": {
        "source": {
          "type": "string",
          "description": "The organziation the answer data was sourced from"
        },
        "query": {
          "type": "string",
          "description": "The query posed to the Thea API"
        },
        "answers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TheaEntityAnswer"
          }
        },
        "companies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Filing"
          }
        }
      }
    },
    "ApiResponseFilingFundamentals": {
      "type": "object",
      "properties": {
        "fundamentals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FundamentalSummary"
          }
        },
        "filing": {
          "$ref": "#/definitions/FilingSummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseFilingNotes": {
      "type": "object",
      "properties": {
        "filing_notes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilingNoteSummary"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseFilingNotesSearch": {
      "type": "object",
      "properties": {
        "filing_notes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilingNoteSummary"
          }
        }
      }
    },
    "ApiResponseFilings": {
      "type": "object",
      "properties": {
        "filings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Filing"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseForexCurrencies": {
      "type": "object",
      "properties": {
        "currencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ForexCurrency"
          }
        }
      }
    },
    "ApiResponseForexPairs": {
      "type": "object",
      "properties": {
        "pairs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ForexPair"
          }
        }
      }
    },
    "ApiResponseForexPrices": {
      "type": "object",
      "properties": {
        "prices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ForexPrice"
          }
        },
        "pair": {
          "description": "The Forex currency pair for which prices were requested",
          "$ref": "#/definitions/ForexPair"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseHistoricalData": {
      "type": "object",
      "properties": {
        "historical_data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HistoricalData"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseIndex": {
      "type": "object",
      "properties": {
        "symbol": {
          "type": "string",
          "description": "The index symbol"
        },
        "name": {
          "type": "string",
          "description": "The index name"
        }
      }
    },
    "ApiResponseIndexConstituents": {
      "type": "object",
      "properties": {
        "index": {
          "type": "object",
          "description": "The index",
          "$ref": "#/definitions/ApiResponseIndex"
        },
        "date": {
          "type": "string",
          "format": "date",
          "description": "The date when an update was last received for the index constituents"
        },
        "constituents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecuritySummary"
          }
        }
      }
    },
    "ApiResponseIndexIntervals": {
      "type": "object",
      "properties": {
        "intervals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IndexInterval"
          },
          "description": "Array of index intervals"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseIndices": {
      "type": "object",
      "properties": {
        "indices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiResponseIndex"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseInitialPublicOfferings": {
      "type": "object",
      "properties": {
        "initial_public_offerings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompanyInitialPublicOffering"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseInsiderTransactionFilings": {
      "type": "object",
      "properties": {
        "transaction_filings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InsiderTransactionFiling"
          }
        },
        "owner": {
          "type": "object",
          "description": "The owner associated with the transaction filing",
          "$ref": "#/definitions/OwnerSummary"
        },
        "company": {
          "type": "object",
          "description": "The company associated with the transaction filing",
          "$ref": "#/definitions/CompanySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseMunicipalities": {
      "type": "object",
      "properties": {
        "municipalities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Municipality"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseMunicipalitiyFinancials": {
      "type": "object",
      "properties": {
        "financials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MunicipalityFinancial"
          }
        },
        "municipality": {
          "$ref": "#/definitions/Municipality"
        }
      }
    },
    "ApiResponseNews": {
      "type": "object",
      "properties": {
        "news": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompanyNews"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseOptionPrices": {
      "type": "object",
      "properties": {
        "prices": {
          "type": "array",
          "description": "A list of option prices in descending order by date",
          "items": {
            "$ref": "#/definitions/OptionPrice"
          }
        },
        "option": {
          "$ref": "#/definitions/Option"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseOptions": {
      "type": "object",
      "properties": {
        "options": {
          "type": "array",
          "description": "A list of options contracts with the given symbol",
          "items": {
            "$ref": "#/definitions/Option"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseOptionsAggregates": {
      "type": "object",
      "properties": {
        "aggregates": {
          "type": "array",
          "description": "A list of option expiration dates in descending order",
          "items": {
            "$ref": "#/definitions/OptionsAggregate"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseOptionsChain": {
      "type": "object",
      "properties": {
        "chain": {
          "type": "array",
          "description": "A list of options for the provided expiration date their respective option prices.",
          "items": {
            "$ref": "#/definitions/OptionChain"
          }
        }
      }
    },
    "ApiResponseOptionsChainEod": {
      "type": "object",
      "properties": {
        "chain": {
          "type": "array",
          "description": "A list of realtime options for the provided expiration date their respective option prices.",
          "items": {
            "$ref": "#/definitions/OptionChainEod"
          }
        }
      }
    },
    "ApiResponseOptionsChainRealtime": {
      "type": "object",
      "properties": {
        "chain": {
          "type": "array",
          "description": "A list of realtime options for the provided expiration date their respective option prices.",
          "items": {
            "$ref": "#/definitions/OptionChainRealtime"
          }
        }
      }
    },
    "ApiResponseOptionsExpirations": {
      "type": "object",
      "properties": {
        "expirations": {
          "type": "array",
          "description": "A list of option expiration dates in descending order",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ApiResponseOptionsGreekContractRealtime": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "array",
          "description": "Any messages or warnings about the data",
          "items": {
            "type": "string"
          }
        },
        "option": {
          "$ref": "#/definitions/Option"
        },
        "greeks": {
          "$ref": "#/definitions/OptionSyntheticGreeksRealtime"
        }
      }
    },
    "ApiResponseOptionsGreeksByTickerRealtime": {
      "type": "object",
      "properties": {
        "security": {
          "description": "The Security resolved from the given identifier",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        },
        "messages": {
          "type": "array",
          "description": "Any messages or warnings about the data",
          "items": {
            "type": "string"
          }
        },
        "contracts": {
          "type": "array",
          "description": "The options greeks data for this security",
          "items": {
            "$ref": "#/definitions/ApiResponseOptionsGreekContractRealtime"
          }
        }
      }
    },
    "ApiResponseOptionsImpliedMove": {
      "type": "object",
      "properties": {
        "implied_move": {
          "description": "The data pertaining to the implied move.",
          "$ref": "#/definitions/OptionImpliedMoveData"
        },
        "messages": {
          "type": "array",
          "description": "Any messages or warnings about the data",
          "items": {
            "type": "string"
          }
        },
        "underlying_price": {
          "type": "number",
          "description": "The price of the underlying instrument."
        },
        "expiration": {
          "type": "string",
          "description": "The date on which the Option expires. The Option becomes invalid after this date and cannot be exercised."
        },
        "atm_strike": {
          "type": "number",
          "description": "The at-the-money strike price for the implied move calculation."
        },
        "straddle_price": {
          "type": "number",
          "description": "The straddle price for the implied move calculation."
        },
        "symbol": {
          "type": "string",
          "description": "The symbol for the underlying instrument."
        }
      }
    },
    "ApiResponseOptionsPriceRealtime": {
      "type": "object",
      "properties": {
        "price": {
          "$ref": "#/definitions/OptionPriceRealtime"
        },
        "stats": {
          "$ref": "#/definitions/OptionStatsRealtime"
        },
        "option": {
          "$ref": "#/definitions/OptionRealtime"
        },
        "extended_price": {
          "$ref": "#/definitions/OptionPriceRealtimeExtended"
        }
      }
    },
    "ApiResponseOptionsPricesBatchRealtime": {
      "type": "object",
      "properties": {
        "contracts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OptionPriceBatchRealtime"
          }
        }
      }
    },
    "ApiResponseOptionsPricesByTickerEod": {
      "type": "object",
      "properties": {
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        },
        "prices": {
          "type": "array",
          "description": "The contracts pricing for this security.",
          "items": {
            "$ref": "#/definitions/OptionsPriceEod"
          }
        }
      }
    },
    "ApiResponseOptionsPricesByTickerRealtime": {
      "type": "object",
      "properties": {
        "security": {
          "description": "The Security resolved from the given identifier",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        },
        "contracts": {
          "type": "array",
          "description": "The contracts pricing for this security.",
          "items": {
            "$ref": "#/definitions/ApiResponseOptionsPriceRealtime"
          }
        }
      }
    },
    "ApiResponseOptionsPricesEod": {
      "type": "object",
      "properties": {
        "prices": {
          "type": "array",
          "description": "A list of options prices with the given symbol",
          "items": {
            "$ref": "#/definitions/OptionPriceEod"
          }
        },
        "option": {
          "$ref": "#/definitions/OptionEod"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseOptionsRealtime": {
      "type": "object",
      "properties": {
        "options": {
          "type": "array",
          "description": "A list of options contracts with the given symbol",
          "items": {
            "$ref": "#/definitions/OptionRealtime"
          }
        }
      }
    },
    "ApiResponseOptionsStatsRealtime": {
      "type": "object",
      "properties": {
        "stats": {
          "$ref": "#/definitions/OptionStatsRealtime"
        },
        "factors": {
          "$ref": "#/definitions/OptionFactorsRealtime"
        },
        "option": {
          "$ref": "#/definitions/OptionRealtime"
        }
      }
    },
    "ApiResponseOptionsTickers": {
      "type": "object",
      "properties": {
        "tickers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ApiResponseOptionsUnusualActivity": {
      "type": "object",
      "properties": {
        "trades": {
          "type": "array",
          "description": "A list of unusual trades for a given company identifier",
          "items": {
            "$ref": "#/definitions/OptionUnusualTrade"
          }
        }
      }
    },
    "ApiResponseOwnerInsiderTransactionFilings": {
      "type": "object",
      "properties": {
        "transaction_filings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InsiderTransactionFiling"
          }
        },
        "owner": {
          "type": "object",
          "description": "The owner associated with the transaction filing",
          "$ref": "#/definitions/OwnerSummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseOwnerInstitutionalHoldings": {
      "type": "object",
      "properties": {
        "holdings": {
          "items": {
            "$ref": "#/definitions/InstitutionalHolding"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseOwners": {
      "type": "object",
      "properties": {
        "owners": {
          "type": "array",
          "description": "A list of owners",
          "items": {
            "$ref": "#/definitions/OwnerSummary"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseRealtimeIndexPrices": {
      "type": "object",
      "properties": {
        "prices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RealtimeIndexPrice"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseReportedFinancials": {
      "type": "object",
      "properties": {
        "reported_financials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportedFinancial"
          }
        },
        "fundamental": {
          "$ref": "#/definitions/Fundamental"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSICIndexHistoricalData": {
      "type": "object",
      "properties": {
        "historical_data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HistoricalData"
          }
        },
        "index": {
          "$ref": "#/definitions/SICIndex"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSICIndices": {
      "type": "object",
      "properties": {
        "indices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SICIndex"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSICIndicesSearch": {
      "type": "object",
      "properties": {
        "indices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SICIndex"
          }
        }
      }
    },
    "ApiResponseSecurities": {
      "type": "object",
      "properties": {
        "securities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecuritySummary"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecuritiesSearch": {
      "type": "object",
      "properties": {
        "securities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecuritySummary"
          }
        }
      }
    },
    "ApiResponseSecurityAccumulationDistributionIndex": {
      "type": "object",
      "description": "The Accumulation Distribution Index calculations for the Stock Prices of the given Security",
      "properties": {
        "technicals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccumulationDistributionIndexTechnicalValue"
          }
        },
        "indicator": {
          "type": "object",
          "description": "The name and symbol of the technical indicator",
          "$ref": "#/definitions/TechnicalIndicator"
        },
        "security": {
          "type": "object",
          "description": "The Security of the Stock Price",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityAverageDailyTradingVolume": {
      "type": "object",
      "description": "The Average Trading Volume calculations for the Stock Prices of the given Security",
      "properties": {
        "technicals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AverageDailyTradingVolumeTechnicalValue"
          }
        },
        "indicator": {
          "type": "object",
          "description": "The name and symbol of the technical indicator",
          "$ref": "#/definitions/TechnicalIndicator"
        },
        "security": {
          "type": "object",
          "description": "The Security of the Stock Price",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityAverageDirectionalIndex": {
      "type": "object",
      "description": "The Average Directional Index calculations for the Stock Prices of the given Security",
      "properties": {
        "technicals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AverageDirectionalIndexTechnicalValue"
          }
        },
        "indicator": {
          "type": "object",
          "description": "The name and symbol of the technical indicator",
          "$ref": "#/definitions/TechnicalIndicator"
        },
        "security": {
          "type": "object",
          "description": "The Security of the Stock Price",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityAverageTrueRange": {
      "type": "object",
      "description": "The Average True Range calculations for the Stock Prices of the given Security",
      "properties": {
        "technicals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AverageTrueRangeTechnicalValue"
          }
        },
        "indicator": {
          "type": "object",
          "description": "The name and symbol of the technical indicator",
          "$ref": "#/definitions/TechnicalIndicator"
        },
        "security": {
          "type": "object",
          "description": "The Security of the Stock Price",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityAwesomeOscillator": {
      "type": "object",
      "description": "The Awesome Oscillator calculations for the Stock Prices of the given Security",
      "properties": {
        "technicals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AwesomeOscillatorTechnicalValue"
          }
        },
        "indicator": {
          "type": "object",
          "description": "The name and symbol of the technical indicator",
          "$ref": "#/definitions/TechnicalIndicator"
        },
        "security": {
          "type": "object",
          "description": "The Security of the Stock Price",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityBollingerBands": {
      "type": "object",
      "description": "The Bollinger Bands calculations for the Stock Prices of the given Security",
      "properties": {
        "technicals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BollingerBandsTechnicalValue"
          }
        },
        "indicator": {
          "type": "object",
          "description": "The name and symbol of the technical indicator",
          "$ref": "#/definitions/TechnicalIndicator"
        },
        "security": {
          "type": "object",
          "description": "The Security of the Stock Price",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityChaikinMoneyFlow": {
      "type": "object",
      "description": "The Chaikin Money Flow calculations for the Stock Prices of the given Security",
      "properties": {
        "technicals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChaikinMoneyFlowTechnicalValue"
          }
        },
        "indicator": {
          "type": "object",
          "description": "The name and symbol of the technical indicator",
          "$ref": "#/definitions/TechnicalIndicator"
        },
        "security": {
          "type": "object",
          "description": "The Security of the Stock Price",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityCommodityChannelIndex": {
      "type": "object",
      "description": "The Commodity Channel Index calculations for the Stock Prices of the given Security",
      "properties": {
        "technicals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommodityChannelIndexTechnicalValue"
          }
        },
        "indicator": {
          "type": "object",
          "description": "The name and symbol of the technical indicator",
          "$ref": "#/definitions/TechnicalIndicator"
        },
        "security": {
          "type": "object",
          "description": "The Security of the Stock Price",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityDetrendedPriceOscillator": {
      "type": "object",
      "description": "The Detrended Price Oscillator calculations for the Stock Prices of the given Security",
      "properties": {
        "technicals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DetrendedPriceOscillatorTechnicalValue"
          }
        },
        "indicator": {
          "type": "object",
          "description": "The name and symbol of the technical indicator",
          "$ref": "#/definitions/TechnicalIndicator"
        },
        "security": {
          "type": "object",
          "description": "The Security of the Stock Price",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityDonchianChannel": {
      "type": "object",
      "description": "The Donchian Channel calculations for the Stock Prices of the given Security",
      "properties": {
        "technicals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DonchianChannelTechnicalValue"
          }
        },
        "indicator": {
          "type": "object",
          "description": "The name and symbol of the technical indicator",
          "$ref": "#/definitions/TechnicalIndicator"
        },
        "security": {
          "type": "object",
          "description": "The Security of the Stock Price",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityEaseOfMovement": {
      "type": "object",
      "description": "The Ease of Movement calculations for the Stock Prices of the given Security",
      "properties": {
        "technicals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EaseOfMovementTechnicalValue"
          }
        },
        "indicator": {
          "type": "object",
          "description": "The name and symbol of the technical indicator",
          "$ref": "#/definitions/TechnicalIndicator"
        },
        "security": {
          "type": "object",
          "description": "The Security of the Stock Price",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityForceIndex": {
      "type": "object",
      "description": "The Force Index calculations for the Stock Prices of the given Security",
      "properties": {
        "technicals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ForceIndexTechnicalValue"
          }
        },
        "indicator": {
          "type": "object",
          "description": "The name and symbol of the technical indicator",
          "$ref": "#/definitions/TechnicalIndicator"
        },
        "security": {
          "type": "object",
          "description": "The Security of the Stock Price",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityHistoricalData": {
      "type": "object",
      "properties": {
        "historical_data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HistoricalData"
          }
        },
        "security": {
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityIchimokuKinkoHyo": {
      "type": "object",
      "description": "The Ichimoku Kinko Hyo calculations for the Stock Prices of the given Security",
      "properties": {
        "technicals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IchimokuKinkoHyoTechnicalValue"
          }
        },
        "indicator": {
          "type": "object",
          "description": "The name and symbol of the technical indicator",
          "$ref": "#/definitions/TechnicalIndicator"
        },
        "security": {
          "type": "object",
          "description": "The Security of the Stock Price",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityInstitutionalOwnership": {
      "type": "object",
      "properties": {
        "ownership": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstitutionalOwnership"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityIntervalPrices": {
      "type": "object",
      "properties": {
        "intervals": {
          "type": "array",
          "description": "Open, close, high, low, volume, average price, and change ratio for a particular interval",
          "items": {
            "$ref": "#/definitions/StockPriceInterval"
          }
        },
        "security": {
          "description": "The Security resolved from the given identifier",
          "$ref": "#/definitions/SecuritySummary"
        },
        "source": {
          "type": "string",
          "description": "The source of the data",
          "enum": [
            "realtime",
            "delayed",
            "nasdaq_basic",
            "nasdaq_basic_filtered",
            "nasdaq_basic_last_sale",
            "cboe_one"
          ]
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityKeltnerChannel": {
      "type": "object",
      "description": "The Keltner Channel calculations for the Stock Prices of the given Security",
      "properties": {
        "technicals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeltnerChannelTechnicalValue"
          }
        },
        "indicator": {
          "type": "object",
          "description": "The name and symbol of the technical indicator",
          "$ref": "#/definitions/TechnicalIndicator"
        },
        "security": {
          "type": "object",
          "description": "The Security of the Stock Price",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityKnowSureThing": {
      "type": "object",
      "description": "The Know Sure Thing calculations for the Stock Prices of the given Security",
      "properties": {
        "technicals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KnowSureThingTechnicalValue"
          }
        },
        "indicator": {
          "type": "object",
          "description": "The name and symbol of the technical indicator",
          "$ref": "#/definitions/TechnicalIndicator"
        },
        "security": {
          "type": "object",
          "description": "The Security of the Stock Price",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityMassIndex": {
      "type": "object",
      "description": "The Mass Index calculations for the Stock Prices of the given Security",
      "properties": {
        "technicals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MassIndexTechnicalValue"
          }
        },
        "indicator": {
          "type": "object",
          "description": "The name and symbol of the technical indicator",
          "$ref": "#/definitions/TechnicalIndicator"
        },
        "security": {
          "type": "object",
          "description": "The Security of the Stock Price",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityMoneyFlowIndex": {
      "type": "object",
      "description": "The Money Flow Index calculations for the Stock Prices of the given Security",
      "properties": {
        "technicals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MoneyFlowIndexTechnicalValue"
          }
        },
        "indicator": {
          "type": "object",
          "description": "The name and symbol of the technical indicator",
          "$ref": "#/definitions/TechnicalIndicator"
        },
        "security": {
          "type": "object",
          "description": "The Security of the Stock Price",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityMovingAverageConvergenceDivergence": {
      "type": "object",
      "description": "The Moving Average Convergence Divergence calculations for the Stock Prices of the given Security",
      "properties": {
        "technicals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MovingAverageConvergenceDivergenceTechnicalValue"
          }
        },
        "indicator": {
          "type": "object",
          "description": "The name and symbol of the technical indicator",
          "$ref": "#/definitions/TechnicalIndicator"
        },
        "security": {
          "type": "object",
          "description": "The Security of the Stock Price",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityNegativeVolumeIndex": {
      "type": "object",
      "description": "The Negative Volume Index calculations for the Stock Prices of the given Security",
      "properties": {
        "technicals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NegativeVolumeIndexTechnicalValue"
          }
        },
        "indicator": {
          "type": "object",
          "description": "The name and symbol of the technical indicator",
          "$ref": "#/definitions/TechnicalIndicator"
        },
        "security": {
          "type": "object",
          "description": "The Security of the Stock Price",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityOnBalanceVolume": {
      "type": "object",
      "description": "The On-balance Volume calculations for the Stock Prices of the given Security",
      "properties": {
        "technicals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OnBalanceVolumeTechnicalValue"
          }
        },
        "indicator": {
          "type": "object",
          "description": "The name and symbol of the technical indicator",
          "$ref": "#/definitions/TechnicalIndicator"
        },
        "security": {
          "type": "object",
          "description": "The Security of the Stock Price",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityOnBalanceVolumeMean": {
      "type": "object",
      "description": "The On-balance Volume Mean calculations for the Stock Prices of the given Security",
      "properties": {
        "technicals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OnBalanceVolumeMeanTechnicalValue"
          }
        },
        "indicator": {
          "type": "object",
          "description": "The name and symbol of the technical indicator",
          "$ref": "#/definitions/TechnicalIndicator"
        },
        "security": {
          "type": "object",
          "description": "The Security of the Stock Price",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityQuote": {
      "type": "object",
      "description": "A realtime price quote of a security.",
      "properties": {
        "security": {
          "type": "object",
          "description": "The Security of the stock quote",
          "$ref": "#/definitions/SecuritySummary"
        },
        "last": {
          "type": "number",
          "description": "The price of the latest trade"
        },
        "last_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when the last trade occurred."
        },
        "source": {
          "type": "string",
          "description": "The source of the pricing data."
        },
        "open": {
          "type": "number",
          "description": "The open price from the latest day of trading."
        },
        "high": {
          "type": "number",
          "description": "The highest price from the latest day of trading."
        },
        "low": {
          "type": "number",
          "description": "The lowest price from the latest day of trading."
        },
        "exchange_volume": {
          "type": "number",
          "description": "The volume of the security from the source."
        },
        "market_volume": {
          "type": "number",
          "description": "The volume of the security for the entire market."
        },
        "eod_fifty_two_week_high": {
          "type": "number",
          "description": "The 52 week high price."
        },
        "eod_fifty_two_week_low": {
          "type": "number",
          "description": "The 52 week low price."
        },
        "marketcap": {
          "type": "number",
          "description": "The current market cap."
        },
        "pricetoearnings": {
          "type": "number",
          "description": "The current price to earnings."
        },
        "previous_close": {
          "type": "number",
          "description": "The previous close price."
        },
        "previous_close_date": {
          "type": "string",
          "format": "date",
          "description": "The date of the previous close."
        },
        "change": {
          "type": "number",
          "description": "The difference in last price from the last close price"
        },
        "change_percent": {
          "type": "number",
          "description": "The percent difference in last price from the last close price"
        },
        "adj_close_5_days_ago": {
          "type": "number",
          "description": "The adjusted close price 5 days ago."
        },
        "adj_close_30_days_ago": {
          "type": "number",
          "description": "The adjusted close price 30 days ago."
        },
        "adj_close_90_days_ago": {
          "type": "number",
          "description": "The adjusted close price 90 days ago."
        },
        "adj_close_180_days_ago": {
          "type": "number",
          "description": "The adjusted close price 180 days ago."
        },
        "adj_close_365_days_ago": {
          "type": "number",
          "description": "The adjusted close price 365 days ago."
        },
        "adj_close_730_days_ago": {
          "type": "number",
          "description": "The adjusted close price 730 days ago."
        },
        "adj_close_1825_days_ago": {
          "type": "number",
          "description": "The adjusted close price 1825 days ago."
        },
        "adj_close_year_to_date": {
          "type": "number",
          "description": "The adjusted close price at the start of the calendar year."
        },
        "change_percent_5_days": {
          "type": "number",
          "description": "The percent change from the adjusted price 5 days ago to now."
        },
        "change_percent_30_days": {
          "type": "number",
          "description": "The percent change from the adjusted price 30 days ago to now."
        },
        "change_percent_90_days": {
          "type": "number",
          "description": "The percent change from the adjusted price 90 days ago to now."
        },
        "change_percent_180_days": {
          "type": "number",
          "description": "The percent change from the adjusted price 180 days ago to now."
        },
        "change_percent_365_days": {
          "type": "number",
          "description": "The percent change from the adjusted price 365 days ago to now."
        },
        "change_percent_730_days_ago": {
          "type": "number",
          "description": "The percent change from the adjusted price 730 days ago to now."
        },
        "change_percent_1825_days": {
          "type": "number",
          "description": "The percent change from the adjusted price 1825 days ago to now."
        },
        "change_percent_year_to_date": {
          "type": "number",
          "description": "The percent change from the adjusted price since the start of the calendar year to now."
        },
        "extended_hours_last": {
          "type": "number",
          "description": "The price of the latest trade in pre and post market trading.  Might be null during normal trading"
        },
        "extended_hours_change": {
          "type": "number",
          "description": "The difference in extended_hours_last price from most recent official close price"
        },
        "extended_hours_change_percent": {
          "type": "number",
          "description": "The percent difference in extended_hours_last from the most recent official close price"
        }
      }
    },
    "ApiResponseSecurityRelativeStrengthIndex": {
      "type": "object",
      "description": "The Relative Strength Index calculations for the Stock Prices of the given Security",
      "properties": {
        "technicals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelativeStrengthIndexTechnicalValue"
          }
        },
        "indicator": {
          "type": "object",
          "description": "The name and symbol of the technical indicator",
          "$ref": "#/definitions/TechnicalIndicator"
        },
        "security": {
          "type": "object",
          "description": "The Security of the Stock Price",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecuritySimpleMovingAverage": {
      "type": "object",
      "description": "The Simple Moving Average calculations for the Stock Prices of the given Security",
      "properties": {
        "technicals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SimpleMovingAverageTechnicalValue"
          }
        },
        "indicator": {
          "type": "object",
          "description": "The name and symbol of the technical indicator",
          "$ref": "#/definitions/TechnicalIndicator"
        },
        "security": {
          "type": "object",
          "description": "The Security of the Stock Price",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityStochasticOscillator": {
      "type": "object",
      "description": "The Stochastic Oscillator calculations for the Stock Prices of the given Security",
      "properties": {
        "technicals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StochasticOscillatorTechnicalValue"
          }
        },
        "indicator": {
          "type": "object",
          "description": "The name and symbol of the technical indicator",
          "$ref": "#/definitions/TechnicalIndicator"
        },
        "security": {
          "type": "object",
          "description": "The Security of the Stock Price",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityStockPriceAdjustments": {
      "type": "object",
      "properties": {
        "stock_price_adjustments": {
          "type": "array",
          "description": "The stock price adjustments for the Security",
          "items": {
            "$ref": "#/definitions/StockPriceAdjustmentSummary"
          }
        },
        "security": {
          "description": "The Security resolved from the given identifier",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityStockPrices": {
      "type": "object",
      "properties": {
        "stock_prices": {
          "type": "array",
          "description": "The stock prices for the Security",
          "items": {
            "$ref": "#/definitions/StockPriceSummary"
          }
        },
        "security": {
          "description": "The Security resolved from the given identifier",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityTripleExponentialAverage": {
      "type": "object",
      "description": "The Triple Exponential Average calculations for the Stock Prices of the given Security",
      "properties": {
        "technicals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TripleExponentialAverageTechnicalValue"
          }
        },
        "indicator": {
          "type": "object",
          "description": "The name and symbol of the technical indicator",
          "$ref": "#/definitions/TechnicalIndicator"
        },
        "security": {
          "type": "object",
          "description": "The Security of the Stock Price",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityTrueStrengthIndex": {
      "type": "object",
      "description": "The True Strength Index calculations for the Stock Prices of the given Security",
      "properties": {
        "technicals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrueStrengthIndexTechnicalValue"
          }
        },
        "indicator": {
          "type": "object",
          "description": "The name and symbol of the technical indicator",
          "$ref": "#/definitions/TechnicalIndicator"
        },
        "security": {
          "type": "object",
          "description": "The Security of the Stock Price",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityUltimateOscillator": {
      "type": "object",
      "description": "The Ultimate Oscillator calculations for the Stock Prices of the given Security",
      "properties": {
        "technicals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UltimateOscillatorTechnicalValue"
          }
        },
        "indicator": {
          "type": "object",
          "description": "The name and symbol of the technical indicator",
          "$ref": "#/definitions/TechnicalIndicator"
        },
        "security": {
          "type": "object",
          "description": "The Security of the Stock Price",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityVolumePriceTrend": {
      "type": "object",
      "description": "The Volume-price Trend calculations for the Stock Prices of the given Security",
      "properties": {
        "technicals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumePriceTrendTechnicalValue"
          }
        },
        "indicator": {
          "type": "object",
          "description": "The name and symbol of the technical indicator",
          "$ref": "#/definitions/TechnicalIndicator"
        },
        "security": {
          "type": "object",
          "description": "The Security of the Stock Price",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityVolumeWeightedAveragePrice": {
      "type": "object",
      "description": "The Volume Weighted Average Price calculations for the Stock Prices of the given Security",
      "properties": {
        "technicals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeWeightedAveragePriceValue"
          }
        },
        "indicator": {
          "type": "object",
          "description": "The name and symbol of the technical indicator",
          "$ref": "#/definitions/TechnicalIndicator"
        },
        "security": {
          "type": "object",
          "description": "The Security of the Stock Price",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityVortexIndicator": {
      "type": "object",
      "description": "The Vortex Indicator calculations for the Stock Prices of the given Security",
      "properties": {
        "technicals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VortexIndicatorTechnicalValue"
          }
        },
        "indicator": {
          "type": "object",
          "description": "The name and symbol of the technical indicator",
          "$ref": "#/definitions/TechnicalIndicator"
        },
        "security": {
          "type": "object",
          "description": "The Security of the Stock Price",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityWilliamsR": {
      "type": "object",
      "description": "The Williams %R calculations for the Stock Prices of the given Security",
      "properties": {
        "technicals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WilliamsRTechnicalValue"
          }
        },
        "indicator": {
          "type": "object",
          "description": "The name and symbol of the technical indicator",
          "$ref": "#/definitions/TechnicalIndicator"
        },
        "security": {
          "type": "object",
          "description": "The Security of the Stock Price",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityZacksAnalystRatings": {
      "type": "object",
      "properties": {
        "analyst_ratings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ZacksAnalystRatingSummary"
          }
        },
        "security": {
          "description": "The Security resolved from the given identifier",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityZacksAnalystRatingsSnapshot": {
      "type": "object",
      "properties": {
        "snapshots": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ZacksAnalystRatingSnapshot"
          }
        },
        "security": {
          "description": "The Security resolved from the given identifier",
          "$ref": "#/definitions/SecuritySummary"
        }
      }
    },
    "ApiResponseSecurityZacksEPSSurprises": {
      "type": "object",
      "properties": {
        "eps_surprises": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ZacksEPSSurpriseSummary"
          }
        },
        "security": {
          "description": "The Security resolved from the given identifier",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseSecurityZacksSalesSurprises": {
      "type": "object",
      "properties": {
        "sales_surprises": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ZacksSalesSurpriseSummary"
          }
        },
        "security": {
          "description": "The Security resolved from the given identifier",
          "$ref": "#/definitions/SecuritySummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseStandardizedFinancials": {
      "type": "object",
      "properties": {
        "standardized_financials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StandardizedFinancial"
          }
        },
        "fundamental": {
          "$ref": "#/definitions/Fundamental"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseStandardizedFinancialsDimensions": {
      "type": "object",
      "properties": {
        "dimensions": {
          "type": "array",
          "description": "The combination of XBRL axis and members that defines the dimensionalization of this fact (if any)",
          "items": {
            "$ref": "#/definitions/StandardizedFinancialsDimension"
          }
        },
        "data_tag": {
          "$ref": "#/definitions/DataTagSummary"
        },
        "fundamental": {
          "$ref": "#/definitions/Fundamental"
        }
      }
    },
    "ApiResponseStockExchangeBetas": {
      "type": "object",
      "properties": {
        "betas": {
          "type": "array",
          "description": "The mover security.",
          "items": {
            "$ref": "#/definitions/Beta"
          }
        },
        "stock_exchange": {
          "description": "The Stock Exchange resolved from the given identifier",
          "$ref": "#/definitions/StockExchange"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseStockExchangeMovers": {
      "type": "object",
      "properties": {
        "movers": {
          "type": "array",
          "description": "The mover security.",
          "items": {
            "$ref": "#/definitions/StockExchangeMover"
          }
        },
        "stock_exchange": {
          "description": "The Stock Exchange resolved from the given identifier",
          "$ref": "#/definitions/StockExchange"
        }
      }
    },
    "ApiResponseStockExchangeQuote": {
      "type": "object",
      "properties": {
        "quotes": {
          "type": "array",
          "description": "The realtime stock prices for all Securities traded on the Stock Exchange",
          "items": {
            "$ref": "#/definitions/ApiResponseSecurityQuote"
          }
        },
        "stock_exchange": {
          "description": "The Stock Exchange resolved from the given identifier",
          "$ref": "#/definitions/StockExchange"
        }
      }
    },
    "ApiResponseStockExchangeRealtimeStockPrices": {
      "type": "object",
      "properties": {
        "stock_prices": {
          "type": "array",
          "description": "The realtime stock prices for all Securities traded on the Stock Exchange",
          "items": {
            "$ref": "#/definitions/RealtimeStockPrice"
          }
        },
        "stock_exchange": {
          "description": "The Stock Exchange resolved from the given identifier",
          "$ref": "#/definitions/StockExchange"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseStockExchangeSecurities": {
      "type": "object",
      "properties": {
        "securities": {
          "type": "array",
          "description": "The securities traded on the Stock Exchange",
          "items": {
            "$ref": "#/definitions/SecuritySummary"
          }
        },
        "stock_exchange": {
          "description": "The Stock Exchange resolved from the given identifier",
          "$ref": "#/definitions/StockExchange"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseStockExchangeStockPriceAdjustments": {
      "type": "object",
      "properties": {
        "stock_price_adjustments": {
          "type": "array",
          "description": "The stock price adjustments for all Securities traded on the Stock Exchange on the given date",
          "items": {
            "$ref": "#/definitions/StockPriceAdjustment"
          }
        },
        "stock_exchange": {
          "description": "The Stock Exchange resolved from the given identifier",
          "$ref": "#/definitions/StockExchange"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseStockExchangeStockPrices": {
      "type": "object",
      "properties": {
        "stock_prices": {
          "type": "array",
          "description": "The stock prices for all Securities traded on the Stock Exchange on the given date",
          "items": {
            "$ref": "#/definitions/StockPrice"
          }
        },
        "stock_exchange": {
          "description": "The Stock Exchange resolved from the given identifier",
          "$ref": "#/definitions/StockExchange"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseStockExchanges": {
      "type": "object",
      "properties": {
        "stock_exchanges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockExchange"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseStockMarketIndexHistoricalData": {
      "type": "object",
      "properties": {
        "historical_data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HistoricalData"
          }
        },
        "index": {
          "$ref": "#/definitions/StockMarketIndexSummary"
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseStockMarketIndices": {
      "type": "object",
      "properties": {
        "indices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockMarketIndexSummary"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseStockMarketIndicesSearch": {
      "type": "object",
      "properties": {
        "indices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockMarketIndexSummary"
          }
        }
      }
    },
    "ApiResponseZacksAnalystRatings": {
      "type": "object",
      "properties": {
        "analyst_ratings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ZacksAnalystRating"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseZacksEBITDAConsensus": {
      "type": "object",
      "properties": {
        "ebitda_consensuses": {
          "type": "array",
          "description": "Zacks target price consensuses for the latest date",
          "items": {
            "$ref": "#/definitions/ZacksEBITDAConsensus"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseZacksEPSEstimates": {
      "type": "object",
      "properties": {
        "estimates": {
          "type": "array",
          "description": "Zacks EPS estimate data for a given date range",
          "items": {
            "$ref": "#/definitions/ZacksEPSEstimate"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseZacksEPSGrowthRates": {
      "type": "object",
      "properties": {
        "eps_growth_rates": {
          "type": "array",
          "description": "Zacks EPS growth rate for the latest date",
          "items": {
            "$ref": "#/definitions/ZacksEPSGrowthRate"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseZacksEPSSurprises": {
      "type": "object",
      "properties": {
        "eps_surprises": {
          "type": "array",
          "description": "Zacks EPS Surprise data for a Security in descending order by actual reported date",
          "items": {
            "$ref": "#/definitions/ZacksEPSSurprise"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseZacksETFHoldings": {
      "type": "object",
      "properties": {
        "holdings": {
          "type": "array",
          "description": "Zacks ETF holding data",
          "items": {
            "$ref": "#/definitions/ZacksETFHolding"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseZacksForwardPEs": {
      "type": "object",
      "properties": {
        "forward_pe": {
          "type": "array",
          "description": "Zacks forward PE ratio estimates",
          "items": {
            "$ref": "#/definitions/ZacksForwardPE"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseZacksInstitutionalHoldingCompanies": {
      "type": "object",
      "properties": {
        "companies": {
          "type": "array",
          "description": "Zacks institutional holding company data",
          "items": {
            "$ref": "#/definitions/ZacksInstitutionalHoldingCompanyDetail"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseZacksInstitutionalHoldingOwners": {
      "type": "object",
      "properties": {
        "owners": {
          "type": "array",
          "description": "Zacks institutional holding owners data",
          "items": {
            "$ref": "#/definitions/ZacksInstitutionalHoldingOwnerDetail"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseZacksInstitutionalHoldings": {
      "type": "object",
      "properties": {
        "holdings": {
          "type": "array",
          "description": "Zacks institutional holding data",
          "items": {
            "$ref": "#/definitions/ZacksInstitutionalHolding"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseZacksLongTermGrowthRates": {
      "type": "object",
      "properties": {
        "long_term_growth_estimates": {
          "type": "array",
          "description": "Zacks latest long term growth rates",
          "items": {
            "$ref": "#/definitions/ZacksLongTermGrowthRate"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseZacksSalesEstimates": {
      "type": "object",
      "properties": {
        "estimates": {
          "type": "array",
          "description": "Zacks Sales estimate data for a given date range",
          "items": {
            "$ref": "#/definitions/ZacksSalesEstimate"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseZacksSalesSurprises": {
      "type": "object",
      "properties": {
        "sales_surprises": {
          "type": "array",
          "description": "Zacks Sales Surprise data for a Security in descending order by actual reported date",
          "items": {
            "$ref": "#/definitions/ZacksSalesSurprise"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ApiResponseZacksTargetPriceConsensuses": {
      "type": "object",
      "properties": {
        "target_price_consensuses": {
          "type": "array",
          "description": "Zacks target price consensuses for the latest date",
          "items": {
            "$ref": "#/definitions/ZacksTargetPriceConsensus"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "AverageDailyTradingVolumeTechnicalValue": {
      "type": "object",
      "description": "The date_time and adtv values of a Average Daily Trading Volume technical indicator calculation",
      "properties": {
        "date_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date_time of the observation"
        },
        "adtv": {
          "type": "number",
          "format": "float",
          "description": "The Average Daily Trading Volume calculation value"
        }
      }
    },
    "AverageDirectionalIndexTechnicalValue": {
      "type": "object",
      "description": "The date_time, adx, di_neg, and di_pos values of a Average Directional Index technical indicator calculation",
      "properties": {
        "date_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date_time of the observation"
        },
        "adx": {
          "type": "number",
          "format": "float",
          "description": "The Average Directional Index value"
        },
        "di_neg": {
          "type": "number",
          "format": "float",
          "description": "The Minus Directional Indicator value"
        },
        "di_pos": {
          "type": "number",
          "format": "float",
          "description": "The Plus Directional Indicator value"
        }
      }
    },
    "AverageTrueRangeTechnicalValue": {
      "type": "object",
      "description": "The date_time and atr values of an Average True range technical indicator calculation",
      "properties": {
        "date_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date_time of the observation"
        },
        "atr": {
          "type": "number",
          "format": "float",
          "description": "The Average True Range calculation value"
        }
      }
    },
    "AwesomeOscillatorTechnicalValue": {
      "type": "object",
      "description": "The date_time and ao values of an Awesome Oscillator technical indicator calculation",
      "properties": {
        "date_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date_time of the observation"
        },
        "ao": {
          "type": "number",
          "format": "float",
          "description": "The Awesome Oscillator calculation value"
        }
      }
    },
    "Beta": {
      "type": "object",
      "description": "A beta value for a security.",
      "properties": {
        "period_end_date": {
          "type": "date",
          "description": "The period end date for this beta value."
        },
        "period_type": {
          "type": "string",
          "description": "Type of period for this beta value.",
          "enum": [
            "weekly",
            "monthly"
          ]
        },
        "one_year_beta": {
          "type": "number",
          "description": "The one year beta value for this security."
        },
        "three_year_beta": {
          "type": "number",
          "description": "The three year beta value for this security."
        },
        "five_year_beta": {
          "type": "number",
          "description": "The five year beta value for this security."
        },
        "seven_year_beta": {
          "type": "number",
          "description": "The seven year beta value for this security."
        },
        "ten_year_beta": {
          "type": "number",
          "description": "The ten year beta value for this security."
        },
        "security": {
          "description": "The Security.",
          "$ref": "#/definitions/SecuritySummary"
        }
      }
    },
    "BollingerBandsTechnicalValue": {
      "type": "object",
      "description": "The date_time, lower_band, middle_band, and upper_band values of a Bollinger Bands technical indicator calculation",
      "properties": {
        "date_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date_time of the observation"
        },
        "lower_band": {
          "type": "number",
          "format": "float",
          "description": "The lower band value of the Bollinger Bands technical indicator calculation"
        },
        "middle_band": {
          "type": "number",
          "format": "float",
          "description": "The middle band value of the Bollinger Bands technical indicator calculation"
        },
        "upper_band": {
          "type": "number",
          "format": "float",
          "description": "The upper band value of the Bollinger Bands technical indicator calculation"
        }
      }
    },
    "BulkDownloadLinks": {
      "type": "object",
      "description": "The url and name of a bulk download link",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the file"
        },
        "url": {
          "type": "string",
          "description": "Link for accessing the bulk download. Expires in 24 hours."
        }
      }
    },
    "BulkDownloadSummary": {
      "type": "object",
      "description": "Information about bulk downloads with download links",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Intrinio ID of the bulk download"
        },
        "name": {
          "type": "string",
          "description": "The name of the bulk download"
        },
        "format": {
          "type": "string",
          "description": "The file format of the bulk download"
        },
        "data_length_bytes": {
          "type": "string",
          "description": "The total length of the bulk download data in bytes"
        },
        "update_frequency": {
          "type": "string",
          "description": "The update frequency for the bulk download"
        },
        "last_updated": {
          "type": "string",
          "format": "date",
          "description": "The date on which the bulk download was last updated"
        },
        "links": {
          "type": "array",
          "description": "Links to all of the files comprising the bulk download. Links expire in 24 hours.",
          "items": {
            "$ref": "#/definitions/BulkDownloadLinks"
          }
        }
      }
    },
    "ChaikinMoneyFlowTechnicalValue": {
      "type": "object",
      "description": "The date_time and cmf values of a Chaikin Money Flow technical indicator calculation",
      "properties": {
        "date_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date_time of the observation"
        },
        "cmf": {
          "type": "number",
          "format": "float",
          "description": "The Chaikin Money Flow calculation value"
        }
      }
    },
    "CommodityChannelIndexTechnicalValue": {
      "type": "object",
      "description": "The date_time and cci values of a Commodity Channel Index technical indicator calculation",
      "properties": {
        "date_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date_time of the observation"
        },
        "cci": {
          "type": "number",
          "format": "float",
          "description": "The Commodity Channel Index calculation value"
        }
      }
    },
    "Company": {
      "type": "object",
      "description": "A company that submits filings to the SEC and has a security traded primarily on a US exchange",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Intrinio ID of the company"
        },
        "ticker": {
          "type": "string",
          "description": "The stock market ticker symbol associated with the company's common stock securities"
        },
        "name": {
          "type": "string",
          "description": "The company's common name"
        },
        "lei": {
          "type": "string",
          "description": "The Legal Entity Identifier (LEI) assigned to the company"
        },
        "legal_name": {
          "type": "string",
          "description": "The company's official legal name"
        },
        "stock_exchange": {
          "type": "string",
          "description": "The Stock Exchange where the company's common stock is primarily traded"
        },
        "sic": {
          "type": "string",
          "description": "The Standard Industrial Classification (SIC) determined by the company and filed with the SEC"
        },
        "short_description": {
          "type": "string",
          "description": "A one or two sentence description of the company's operations"
        },
        "long_description": {
          "type": "string",
          "description": "A one paragraph description of the company's operations and other corporate actions"
        },
        "ceo": {
          "type": "string",
          "description": "The Chief Executive Officer of the company"
        },
        "company_url": {
          "type": "string",
          "description": "The URL of the company's primary corporate website or primary internet property"
        },
        "business_address": {
          "type": "string",
          "description": "The company's business address"
        },
        "mailing_address": {
          "type": "string",
          "description": "The mailing address reported by the company"
        },
        "business_phone_no": {
          "type": "string",
          "description": "The phone number reported by the company"
        },
        "hq_address1": {
          "type": "string",
          "description": "The company's headquarters address - line 1"
        },
        "hq_address2": {
          "type": "string",
          "description": "The company's headquarters address - line 2"
        },
        "hq_address_city": {
          "type": "string",
          "description": "The company's headquarters city"
        },
        "hq_address_postal_code": {
          "type": "string",
          "description": "The company's headquarters postal code"
        },
        "entity_legal_form": {
          "type": "string",
          "description": "The company's legal organization form"
        },
        "cik": {
          "type": "string",
          "description": "The Central Index Key (CIK) assigned to the company by the SEC as a unique identifier, used in SEC filings"
        },
        "latest_filing_date": {
          "type": "string",
          "format": "date",
          "description": "The date of the company's last filing with the SEC"
        },
        "hq_state": {
          "type": "string",
          "description": "The state (US & Canada Only) where the company headquarters are located"
        },
        "hq_country": {
          "type": "string",
          "description": "The country where the company headquarters are located"
        },
        "inc_state": {
          "type": "string",
          "description": "The state (US & Canada Only) where the company is incorporated"
        },
        "inc_country": {
          "type": "string",
          "description": "The country where the company is incorporated"
        },
        "employees": {
          "type": "integer",
          "description": "The number of employees working for the company"
        },
        "entity_status": {
          "type": "string"
        },
        "sector": {
          "type": "string",
          "description": "The company's operating sector",
          "x-db_name": "sector.name"
        },
        "industry_category": {
          "type": "string",
          "description": "The company's operating industry category",
          "x-db_name": "industry_category.name"
        },
        "industry_group": {
          "type": "string",
          "description": "The company's operating industry group",
          "x-db_name": "industry_group.name"
        },
        "template": {
          "type": "string",
          "description": "The financial statement template used by Intrinio to standardize the as reported data"
        },
        "standardized_active": {
          "type": "boolean",
          "description": "If true, the company has standardized and as reported fundamental data via the Intrinio API; if false, the company has as-reported data only"
        },
        "first_fundamental_date": {
          "type": "string",
          "format": "date",
          "description": "The period end date of the company's first reported fundamental"
        },
        "last_fundamental_date": {
          "type": "string",
          "format": "date",
          "description": "The period end date of the company's last reported fundamental"
        },
        "first_stock_price_date": {
          "type": "string",
          "format": "date",
          "description": "The date of the company's first stock price, based on the company's primary security, which is typically traded on US exchages"
        },
        "last_stock_price_date": {
          "type": "string",
          "format": "date",
          "description": "The date of the company's last stock price, based on the company's primary security, which is typically traded on US exchages"
        }
      },
      "example": {
        "id": null,
        "ticker": null,
        "name": null,
        "lei": null,
        "legal_name": null,
        "stock_exchange": null,
        "sic": null,
        "short_description": null,
        "long_description": null,
        "ceo": null,
        "company_url": null,
        "business_address": null,
        "mailing_address": null,
        "business_phone_no": null,
        "hq_address1": null,
        "hq_address2": null,
        "hq_address_city": null,
        "hq_address_postal_code": null,
        "entity_legal_form": null,
        "cik": null,
        "latest_filing_date": null,
        "hq_state": null,
        "hq_country": null,
        "inc_state": null,
        "inc_country": null,
        "employees": null,
        "entity_status": null,
        "sector": null,
        "industry_category": null,
        "industry_group": null,
        "template": null,
        "standardized_active": null,
        "first_fundamental_date": null,
        "last_fundamental_date": null,
        "first_stock_price_date": null,
        "last_stock_price_date": null
      }
    },
    "CompanyDailyMetric": {
      "type": "object",
      "description": "A news article about a company",
      "properties": {
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the metric"
        },
        "enterprise_value": {
          "type": "number",
          "description": "The enterprise value."
        },
        "ev_to_ebit": {
          "type": "number",
          "description": "The enterprise value to earnings before interest and taxes ratio."
        },
        "ev_to_ebitda": {
          "type": "number",
          "description": "The enterprise value to earnings before interest, taxes, depreciation, and amoritization ratio."
        },
        "market_cap": {
          "type": "number",
          "description": "The market cap."
        },
        "price_to_book": {
          "type": "number",
          "description": "The price to book ratio."
        },
        "price_to_earnings": {
          "type": "number",
          "description": "The price to earnings ratio."
        },
        "price_to_revenue": {
          "type": "number",
          "description": "The price to revenue ratio."
        },
        "price_to_tangible_book": {
          "type": "number",
          "description": "The price to tangible book ratio."
        },
        "dividend_yield": {
          "type": "number",
          "description": "The dividend yield."
        },
        "earnings_yield": {
          "type": "number",
          "description": "The earnings yield."
        },
        "ev_to_invested_capital": {
          "type": "number",
          "description": "The enterprise value to invested capital ratio."
        },
        "ev_to_revenue": {
          "type": "number",
          "description": "The enterprise value to revenue ratio."
        },
        "ev_to_nopat": {
          "type": "number",
          "description": "The enterprise value to normalized operating profit after tax ratio."
        },
        "ev_to_ocf": {
          "type": "number",
          "description": "The enterprise value to operating cash flow ratio."
        },
        "ev_to_fcff": {
          "type": "number",
          "description": "The enterprise value to free cash flow to the firm ratio."
        },
        "company": {
          "$ref": "#/definitions/CompanySummary"
        }
      }
    },
    "CompanyFiling": {
      "type": "object",
      "description": "A filing submitted to the SEC by a company",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Intrinio ID of the Filing"
        },
        "filing_date": {
          "type": "string",
          "format": "date",
          "description": "The date when the filing was submitted to the SEC by the company"
        },
        "accepted_date": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when the filing was accepted by SEC"
        },
        "period_end_date": {
          "type": "string",
          "format": "date",
          "description": "The ending date of the fiscal period for the filing"
        },
        "report_type": {
          "type": "string",
          "description": "The filing <a href=\"https://docs.intrinio.com/documentation/sec_filing_report_types\" target=\"_blank\">report type</a>"
        },
        "sec_unique_id": {
          "type": "string",
          "description": "A unique identifier for the filing provided by the SEC"
        },
        "filing_url": {
          "type": "string",
          "format": "url",
          "description": "The URL to the filing page on the SEC site"
        },
        "report_url": {
          "type": "string",
          "format": "url",
          "description": "The URL to the actual report on the SEC site"
        },
        "instance_url": {
          "type": "string",
          "format": "url",
          "description": "The URL for the XBRL filing for the report"
        },
        "company": {
          "type": "object",
          "$ref": "#/definitions/CompanySummary"
        }
      }
    },
    "CompanyInitialPublicOffering": {
      "type": "object",
      "description": "A record of a company's initial public offering (IPO). The act of \"going public\" is initiated by an IPO, at which point the company's stock trades on a major stock exchange (such as NYSE or NASDAQ)",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Intrinio ID for the IPO"
        },
        "ticker": {
          "type": "string",
          "description": "The ticker under which the Company will be traded after the IPO takes place"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the IPO, when the stock first trades on a major exchange"
        },
        "status": {
          "type": "string",
          "description": "The status of the IPO. Upcoming IPOs have not taken place yet but are expected to. Priced IPOs have taken place. Withdrawn IPOs were expected to take place, but were subsequently withdrawn and did not take place",
          "enum": [
            "upcoming",
            "priced",
            "withdrawn"
          ]
        },
        "exchange": {
          "type": "string",
          "description": "The acronym of the stock exchange that the company is going to trade publicly on. Typically NYSE or NASDAQ"
        },
        "offer_amount": {
          "type": "number",
          "description": "The total dollar amount of shares offered in the IPO. Typically this is share price * share count"
        },
        "share_price": {
          "type": "number",
          "description": "The price per share at which the IPO was offered"
        },
        "share_price_lowest": {
          "type": "number",
          "description": "The expected lowest price per share at which the IPO will be offered. Before an IPO is priced, companies typically provide a range of prices per share at which they expect to offer the IPO (typically available for upcoming IPOs)"
        },
        "share_price_highest": {
          "type": "number",
          "description": "The expected highest price per share at which the IPO will be offered. Before an IPO is priced, companies typically provide a range of prices per share at which they expect to offer the IPO (typically available for upcoming IPOs)"
        },
        "share_count": {
          "type": "number",
          "description": "The number of shares offered in the IPO"
        },
        "share_count_lowest": {
          "type": "number",
          "description": "The expected lowest number of shares that will be offered in the IPO. Before an IPO is priced, companies typically provide a range of shares that they expect to offer in the IPO (typically available for upcoming IPOs)"
        },
        "share_count_highest": {
          "type": "number",
          "description": "The expected highest number of shares that will be offered in the IPO. Before an IPO is priced, companies typically provide a range of shares that they expect to offer in the IPO (typically available for upcoming IPOs)"
        },
        "announcement_url": {
          "type": "string",
          "description": "The URL to the company's announcement of the IPO"
        },
        "sec_report_url": {
          "type": "string",
          "description": "The IRL to the company's S-1, S-1/A, F-1, or F-1/A SEC filing, which is required to be filed before an IPO takes place."
        },
        "open_price": {
          "type": "number",
          "description": "The opening price at the beginning of the first trading day (only available for priced IPOs)"
        },
        "close_price": {
          "type": "number",
          "description": "The closing price at the end of the first trading day (only available for priced IPOs)"
        },
        "volume": {
          "type": "number",
          "description": "The volume at the end of the first trading day (only available for priced IPOs)"
        },
        "day_change": {
          "type": "number",
          "description": "The percentage change between the open price and the close price on the first trading day (only available for priced IPOs)"
        },
        "week_change": {
          "type": "number",
          "description": "The percentage change between the open price on the first trading day and the close price approximately a week after the first trading day (only available for priced IPOs)"
        },
        "month_change": {
          "type": "number",
          "description": "The percentage change between the open price on the first trading day and the close price approximately a month after the first trading day (only available for priced IPOs)"
        },
        "company": {
          "type": "object",
          "description": "The Company that is going public via the IPO",
          "$ref": "#/definitions/CompanySummary"
        },
        "security": {
          "type": "object",
          "description": "The primary Security for the Company that is going public via the IPO",
          "$ref": "#/definitions/SecuritySummary"
        }
      }
    },
    "CompanyNews": {
      "type": "object",
      "description": "A news article about a company",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Intrinio ID for the news article"
        },
        "title": {
          "type": "string",
          "description": "The title of the news article"
        },
        "publication_date": {
          "type": "string",
          "format": "date-time",
          "description": "The publication date of the news article"
        },
        "url": {
          "type": "string",
          "description": "The url of the news article"
        },
        "summary": {
          "type": "string",
          "description": "A summary of the news article"
        },
        "source": {
          "type": "string",
          "description": "The news source.",
          "enum": [
            "yahoo",
            "moody",
            "moody_us_news",
            "moody_us_press_releases"
          ]
        },
        "company": {
          "type": "object",
          "description": "The Company to which the new article pertains",
          "$ref": "#/definitions/CompanySummary"
        },
        "topics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NewsTopic"
          }
        },
        "copyright": {
          "type": "string",
          "description": "The copyright of the news article"
        },
        "language": {
          "type": "string",
          "description": "The language code of the news article"
        },
        "word_count": {
          "type": "integer",
          "description": "The word count of the news article"
        },
        "spam": {
          "type": "boolean",
          "description": "Whether the news article is marked as spam or not"
        },
        "business_relevance": {
          "type": "number",
          "description": "How strongly correlated the news article is to the business"
        },
        "article_sentiment": {
          "type": "string",
          "description": "The news sentiment.",
          "enum": [
            "positive",
            "neutral",
            "negative"
          ]
        },
        "article_sentiment_confidence": {
          "type": "number",
          "description": "The confidence score of the sentiment rating"
        }
      }
    },
    "CompanyNewsSummary": {
      "type": "object",
      "description": "A news article about a company",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Intrinio ID for the news article"
        },
        "title": {
          "type": "string",
          "description": "The title of the news article"
        },
        "publication_date": {
          "type": "string",
          "format": "date-time",
          "description": "The publication date of the news article"
        },
        "url": {
          "type": "string",
          "description": "The url of the news article"
        },
        "summary": {
          "type": "string",
          "description": "A summary of the news article"
        },
        "source": {
          "type": "string",
          "description": "The news source.",
          "enum": [
            "yahoo",
            "moody",
            "moody_us_news",
            "moody_us_press_releases"
          ]
        },
        "topics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NewsTopic"
          }
        },
        "copyright": {
          "type": "string",
          "description": "The copyright of the news article"
        },
        "language": {
          "type": "string",
          "description": "The language code of the news article"
        },
        "word_count": {
          "type": "integer",
          "description": "The word count of the news article"
        },
        "spam": {
          "type": "boolean",
          "description": "Whether the news article is marked as spam or not"
        },
        "business_relevance": {
          "type": "number",
          "description": "How strongly correlated the news article is to the business"
        },
        "article_sentiment": {
          "type": "string",
          "description": "The news sentiment.",
          "enum": [
            "positive",
            "neutral",
            "negative"
          ]
        },
        "article_sentiment_confidence": {
          "type": "number",
          "description": "The confidence score of the sentiment rating"
        }
      }
    },
    "CompanyPublicFloat": {
      "type": "object",
      "description": "A public float data point.",
      "properties": {
        "date": {
          "type": "string",
          "format": "date",
          "description": "The date of the public float."
        },
        "filing_date": {
          "type": "string",
          "format": "date",
          "description": "The filing date of the public float."
        },
        "public_float_value": {
          "type": "number",
          "description": "The dollar value for company float."
        },
        "public_float_shares": {
          "type": "number",
          "description": "The public shares for the company."
        }
      }
    },
    "CompanySharesOutstanding": {
      "type": "object",
      "description": "The summary of a company that submits filings to the SEC and has a security traded primarily on a US exchange",
      "properties": {
        "xbrl_axis": {
          "type": "string",
          "description": "The xbrl concept axis member reported to the SEC."
        },
        "xbrl_member": {
          "type": "string",
          "description": "Provides information about the class of stock as reported in XBRL"
        },
        "end_date": {
          "type": "string",
          "format": "date",
          "description": "End date of the filing period"
        },
        "title_of_security": {
          "type": "string",
          "description": "The description of the security type"
        },
        "trading_symbol": {
          "type": "string",
          "description": "The symbol under which the security is traded in the exchange"
        },
        "security_exchange_name": {
          "type": "string",
          "description": "The name of the secuirty exchange"
        },
        "shares_outstanding": {
          "type": "number",
          "description": "The amount of stock currently held by all shareholders"
        }
      }
    },
    "CompanySummary": {
      "type": "object",
      "description": "The summary of a company that submits filings to the SEC and has a security traded primarily on a US exchange",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Intrinio ID of the company"
        },
        "ticker": {
          "type": "string",
          "description": "The stock market ticker symbol associated with the company's common stock securities"
        },
        "name": {
          "type": "string",
          "description": "The company's common name"
        },
        "lei": {
          "type": "string",
          "description": "The Legal Entity Identifier (LEI) assigned to the company"
        },
        "cik": {
          "type": "string",
          "description": "The Central Index Key (CIK) assigned to the company"
        }
      }
    },
    "DataTag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Intrinio ID for the Data Tag"
        },
        "name": {
          "type": "string",
          "description": "The readable name of the Data Tag"
        },
        "tag": {
          "type": "string",
          "description": "The code-name of the Data Tag"
        },
        "statement_code": {
          "type": "string",
          "description": "The code of the financial statement to which this Data Tag belongs"
        },
        "statement_type": {
          "type": "string",
          "description": "The format of the financial statment to which this Data Tag belongs",
          "enum": [
            "financial",
            "industrial"
          ]
        },
        "parent": {
          "type": "string",
          "description": "The parent Data Tag forming the statement relationship with the factor"
        },
        "sequence": {
          "type": "number",
          "description": "The order in which the Data Tag appears in its logical group (such as a financial statement)"
        },
        "factor": {
          "type": "string",
          "description": "The operator forming the statement relationship between the child Data Tag (or Data Tags) and the parent Data Tag"
        },
        "balance": {
          "type": "string",
          "description": "Whether the Data Tag represents a credit or debit"
        },
        "type": {
          "type": "string",
          "description": "The nature of the Data Tag, operating or nonoperating"
        },
        "unit": {
          "type": "string",
          "description": "The unit of the Data Tag"
        }
      }
    },
    "DataTagSummary": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Intrinio ID for the Data Tag"
        },
        "name": {
          "type": "string",
          "description": "The readable name of the Data Tag"
        },
        "tag": {
          "type": "string",
          "description": "The code-name of the Data Tag"
        },
        "parent": {
          "type": "string",
          "description": "The parent Data Tag forming the statement relationship with the factor"
        },
        "sequence": {
          "type": "number",
          "description": "The order in which the Data Tag appears in its logical group (such as a financial statement)"
        },
        "factor": {
          "type": "string",
          "description": "The operator forming the statement relationship between the child Data Tag (or Data Tags) and the parent Data Tag"
        },
        "balance": {
          "type": "string",
          "description": "Whether the Data Tag represents a credit or debit"
        },
        "unit": {
          "type": "string",
          "description": "The unit of the Data Tag"
        }
      }
    },
    "DetrendedPriceOscillatorTechnicalValue": {
      "type": "object",
      "description": "The date_time and dpo values of a Detrended Price Oscillator technical indicator calculation",
      "properties": {
        "date_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date_time of the observation"
        },
        "dpo": {
          "type": "number",
          "format": "float",
          "description": "The Detrended Price Oscillator calculation value"
        }
      }
    },
    "DividendRecord": {
      "type": "object",
      "description": "A dividend record for the identifier",
      "properties": {
        "ex_dividend": {
          "type": "number",
          "description": "Amount of dividend in US dollars"
        },
        "currency": {
          "type": "string",
          "description": "The 3-digit currency code the dividend amount was reported in"
        },
        "announcement_date": {
          "type": "string",
          "format": "date",
          "description": "Date dividend was announced"
        },
        "record_date": {
          "type": "string",
          "format": "date",
          "description": "Date before which holders-of-record will receive the dividend"
        },
        "pay_date": {
          "type": "string",
          "format": "date",
          "description": "Date the divdiend was paid"
        },
        "frequency": {
          "type": "string",
          "description": "Identifies payment frequency of announced dividend"
        },
        "status": {
          "type": "string",
          "description": "Status of the dividend",
          "enum": [
            "P",
            "X",
            "S",
            "R"
          ]
        },
        "forward_yield": {
          "type": "number",
          "description": "The forward dividend yield"
        },
        "forward_rate": {
          "type": "number",
          "description": "The forward dividend rate"
        },
        "last_ex_dividend_date": {
          "type": "string",
          "format": "date",
          "description": "The last reported day the stock starts trading without the value of its next dividend payment"
        },
        "security": {
          "$ref": "#/definitions/SecuritySummary"
        }
      }
    },
    "DonchianChannelTechnicalValue": {
      "type": "object",
      "description": "The date_time, lower_bound, and uppoer_bound values of a Donchian Channel technical indicator calculation",
      "properties": {
        "date_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date_time of the observation"
        },
        "lower_bound": {
          "type": "number",
          "format": "float",
          "description": "The lower bound value of the Donchian Channel calculation"
        },
        "upper_bound": {
          "type": "number",
          "format": "float",
          "description": "The upper bound value of the Donchian Channel calculation"
        }
      }
    },
    "ESGCompanySummary": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The Intrinio ID of the company."
        },
        "name": {
          "type": "string",
          "description": "The company’s common name."
        },
        "ticker": {
          "type": "string",
          "description": "The stock market ticker symbol associated with the company’s common stock security."
        },
        "isin": {
          "type": "string",
          "description": "The company's common securities identification 12-digit alphanumeric code."
        },
        "primary_industry": {
          "type": "string",
          "description": "The primary industry associated with the company based on their main revenue generating operations."
        },
        "country": {
          "type": "string",
          "description": "The country in which the company's headquarters or primary place of business is located."
        }
      }
    },
    "ESGComprehensiveRating": {
      "properties": {
        "date": {
          "type": "string",
          "format": "date",
          "description": "Indicates the date on which the ESG Rating was calculated."
        },
        "country_average_rating": {
          "type": "number",
          "description": "The average ESG rating of all companies in a particular country in which the company is a peer of."
        },
        "industry_average_rating": {
          "type": "number",
          "description": "The average ESG rating of all companies in a particular industry in which the company is a peer of."
        },
        "overall_rating": {
          "type": "number",
          "description": "The company's overall aggregated ESG rating, taking into account its ESG scoring from the Community, Employee, Enviroment, and Governance categories."
        },
        "community_rating": {
          "type": "number",
          "description": "The Community Category reflects a companys citizenship, charitable giving, and volunteerism. This category covers the company's human rights record and treatment of its supply chain. It also covers the environmental and social impacts of the companys products and services, and the development of sustainable products, processes and technologies."
        },
        "employee_rating": {
          "type": "number",
          "description": "The Employees category includes disclosure of policies, programs, and performance in diversity, labor relations and labor rights. The evaluation focuses on the quality of policies and programs, compliance with national laws and regulations, and proactive management initiatives. The category includes evaluation of inclusive diversity policies, fair treatment of all employees, robust diversity (EEO-1) programs and training."
        },
        "environment_rating": {
          "type": "number",
          "description": "The Environment category data covers a company's interactions with the environment at large, including use of natural resources. The category evaluates corporate environmental performance, compliance with environmental regulations, and mitigation of environmental footprint. It also includes leadership in addressing climate change through appropriate policies and strategies."
        },
        "governance_rating": {
          "type": "number",
          "description": "Corporate governance refers to leadership structure and the values that determine corporate direction, ethics and performance. The Governance category covers disclosure of policies and procedures, board independence and diversity, executive compensation, attention to stakeholder concerns, and evaluation of a company's culture of ethical leadership and compliance."
        },
        "human_rights_and_supply_chain_rating": {
          "type": "number",
          "description": "The Human Rights and Supply Chain subcategory measures a company's commitment to respecting fundamental human rights conventions. This subcategory covers a company's transparency in overseas sourcing disclosure and monitoring. The subcategory also covers the relationship with and respect for the human rights of indigenous peoples near its proposed or current operations."
        },
        "community_dev_and_philanthropy_rating": {
          "type": "number",
          "description": "The Community Development and Philanthropy subcategory covers the relationship between a company and the communities within which it is embedded. It reflects a company's community citizenship through charitable giving, donations of goods, and volunteerism of staff time. It also includes protecting public health (e.g., avoidance of industrial accidents) and managing the social impacts of its operations."
        },
        "product_rating": {
          "type": "number",
          "description": "The Product subcategory covers the responsibility of a company for the development, design, and management of its products and services. This subcategory reflects a company's capacity to reduce environmental costs, create new market opportunities, and produce or market goods and services that enhance the health and quality of life for consumers."
        },
        "compensation_and_benefits_rating": {
          "type": "number",
          "description": "The Compensation and Benefits subcategory covers a company's capacity to increase its workforce loyalty and productivity. It includes benefits that engage employees and improve worker development. This subcategory also focuses on long-term employment growth and stability by promotion practices, lay-off practices, and relations with retired employees."
        },
        "diversity_and_labor_rights_rating": {
          "type": "number",
          "description": "The Diversity and Labor Rights subcategory covers workplace policies and practices covering fair and non-discriminatory treatment of employees. It covers a company's labor-management relations and participation by employees. Fundamental labor rights include freedom of association and protection of the right to organize."
        },
        "training_health_and_safety_rating": {
          "type": "number",
          "description": "The Training, Safety and Health subcategory measures a company's effectiveness in providing a healthy and safe workplace. It includes programs to support the health, well-being and productivity of all employees. This subcategory includes workplace policies and programs that boost employee morale, workplace productivity and worker development."
        },
        "energy_climate_change_rating": {
          "type": "number",
          "description": "The Energy and Climate Change subcategory measures a company's effectiveness in addressing climate change through appropriate policies and strategies. The subcategory includes energy use, emissions to air of CO2 and other Greenhouse Gas Emissions (GHG) and other alternative environmental technologies."
        },
        "environment_policy_and_reporting_rating": {
          "type": "number",
          "description": "The Environmental Policy and Reporting subcategory includes a company's policies and intention to reduce the environmental impact of a company. The data includes the company's environmental reporting performance, adherence to environmental reporting standards and compliance with investor, regulatory and stakeholders' requests for transparency. Compliance data consists of breaches of regulatory limits and accidental releases."
        },
        "resource_management_rating": {
          "type": "number",
          "description": "The Resource Management subcategory covers how efficiently resources are used in manufacturing and delivering products and services. It includes a company's capacity to reduce the use of materials, energy or water, and to find more efficient solutions by improving its supply chain management. This subcategory includes environmental performance relative to production size."
        },
        "board_rating": {
          "type": "number",
          "description": "The Board subcategory covers a company's effectiveness in following best practices in corporate governance principles related to board membership. It includes how the company provides competitive and proportionate management compensation and its ability to incent executives and board members to achieve both financial and extra-financial targets."
        },
        "leadership_ethics_rating": {
          "type": "number",
          "description": "The Leadership Ethics subcategory measures how a company manages its relationships with its various stakeholders, including investors, customers, communities, and regulators. It measures a company's commitment and effectiveness toward the vision of integrating social and environmental aspects into the overall core strategy. It also measures whether sustainability principles are integrated from the top down into the day-to-day operations of the company."
        },
        "transparency_reporting_rating": {
          "type": "number",
          "description": "The Transparency and Reporting subcategory rates factors including are corporate policies and practices aligned with sustainability goals. It also covers whether the company is a signatory of Global Compact and other leading global entities. It evaluates the assurance (3rd party audit) of the accuracy, completeness, and reliability of its Sustainability or Corporate Social Responsibility reports."
        },
        "country_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's ESG rating in comparison to it's country peers."
        },
        "industry_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's ESG rating in comparison to it's industry peers."
        },
        "overall_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's overall ESG rating in comparison to all companies within the CSRHub ESG universe."
        },
        "community_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's Community rating in comparison to all companies within the CSRHub ESG universe."
        },
        "employee_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's Employee rating in comparison to all companies within the CSRHub ESG universe."
        },
        "environment_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's Environment rating in comparison to all companies within the CSRHub ESG universe."
        },
        "governance_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's Governance rating in comparison to all companies within the CSRHub ESG universe."
        },
        "human_rights_and_supply_chain_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's Human Rights and Supply Chain rating in comparison to all companies within the CSRHub ESG universe."
        },
        "community_dev_and_philanthropy_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's Community, Dev, and Philanthropy rating in comparison to all companies within the CSRHub ESG universe."
        },
        "product_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's Product rating in comparison to all companies within the CSRHub ESG universe."
        },
        "compensation_and_benefits_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's Compensation and Benefits rating in comparison to all companies within the CSRHub ESG universe."
        },
        "diversity_and_labor_rights_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's Diversity and Labor Rights rating in comparison to all companies within the CSRHub ESG universe."
        },
        "training_health_and_safety_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's Training, Health, and Safety rating in comparison to all companies within the CSRHub ESG universe."
        },
        "energy_climate_change_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's Energy Climate Change rating in comparison to all companies within the CSRHub ESG universe."
        },
        "environment_policy_and_reporting_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's Environment Policy and Reporting rating in comparison to all companies within the CSRHub ESG universe."
        },
        "resource_management_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's Resource Management rating in comparison to all companies within the CSRHub ESG universe."
        },
        "board_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's Board rating in comparison to all companies within the CSRHub ESG universe."
        },
        "leadership_ethics_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's Leadership Ethics rating in comparison to all companies within the CSRHub ESG universe."
        },
        "transparency_reporting_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's Transaperency Reporting rating in comparison to all companies within the CSRHub ESG universe."
        }
      }
    },
    "ESGComprehensiveRatingWithCompany": {
      "properties": {
        "date": {
          "type": "string",
          "format": "date",
          "description": "Indicates the date on which the ESG Rating was calculated."
        },
        "country_average_rating": {
          "type": "number",
          "description": "The average ESG rating of all companies in a particular country in which the company is a peer of."
        },
        "industry_average_rating": {
          "type": "number",
          "description": "The average ESG rating of all companies in a particular industry in which the company is a peer of."
        },
        "overall_rating": {
          "type": "number",
          "description": "The company's overall aggregated ESG rating, taking into account its ESG scoring from the Community, Employee, Enviroment, and Governance categories."
        },
        "community_rating": {
          "type": "number",
          "description": "The Community Category reflects a companys citizenship, charitable giving, and volunteerism. This category covers the company's human rights record and treatment of its supply chain. It also covers the environmental and social impacts of the companys products and services, and the development of sustainable products, processes and technologies."
        },
        "employee_rating": {
          "type": "number",
          "description": "The Employees category includes disclosure of policies, programs, and performance in diversity, labor relations and labor rights. The evaluation focuses on the quality of policies and programs, compliance with national laws and regulations, and proactive management initiatives. The category includes evaluation of inclusive diversity policies, fair treatment of all employees, robust diversity (EEO-1) programs and training."
        },
        "environment_rating": {
          "type": "number",
          "description": "The Environment category data covers a company's interactions with the environment at large, including use of natural resources. The category evaluates corporate environmental performance, compliance with environmental regulations, and mitigation of environmental footprint. It also includes leadership in addressing climate change through appropriate policies and strategies."
        },
        "governance_rating": {
          "type": "number",
          "description": "Corporate governance refers to leadership structure and the values that determine corporate direction, ethics and performance. The Governance category covers disclosure of policies and procedures, board independence and diversity, executive compensation, attention to stakeholder concerns, and evaluation of a company's culture of ethical leadership and compliance."
        },
        "human_rights_and_supply_chain_rating": {
          "type": "number",
          "description": "The Human Rights and Supply Chain subcategory measures a company's commitment to respecting fundamental human rights conventions. This subcategory covers a company's transparency in overseas sourcing disclosure and monitoring. The subcategory also covers the relationship with and respect for the human rights of indigenous peoples near its proposed or current operations."
        },
        "community_dev_and_philanthropy_rating": {
          "type": "number",
          "description": "The Community Development and Philanthropy subcategory covers the relationship between a company and the communities within which it is embedded. It reflects a company's community citizenship through charitable giving, donations of goods, and volunteerism of staff time. It also includes protecting public health (e.g., avoidance of industrial accidents) and managing the social impacts of its operations."
        },
        "product_rating": {
          "type": "number",
          "description": "The Product subcategory covers the responsibility of a company for the development, design, and management of its products and services. This subcategory reflects a company's capacity to reduce environmental costs, create new market opportunities, and produce or market goods and services that enhance the health and quality of life for consumers."
        },
        "compensation_and_benefits_rating": {
          "type": "number",
          "description": "The Compensation and Benefits subcategory covers a company's capacity to increase its workforce loyalty and productivity. It includes benefits that engage employees and improve worker development. This subcategory also focuses on long-term employment growth and stability by promotion practices, lay-off practices, and relations with retired employees."
        },
        "diversity_and_labor_rights_rating": {
          "type": "number",
          "description": "The Diversity and Labor Rights subcategory covers workplace policies and practices covering fair and non-discriminatory treatment of employees. It covers a company's labor-management relations and participation by employees. Fundamental labor rights include freedom of association and protection of the right to organize."
        },
        "training_health_and_safety_rating": {
          "type": "number",
          "description": "The Training, Safety and Health subcategory measures a company's effectiveness in providing a healthy and safe workplace. It includes programs to support the health, well-being and productivity of all employees. This subcategory includes workplace policies and programs that boost employee morale, workplace productivity and worker development."
        },
        "energy_climate_change_rating": {
          "type": "number",
          "description": "The Energy and Climate Change subcategory measures a company's effectiveness in addressing climate change through appropriate policies and strategies. The subcategory includes energy use, emissions to air of CO2 and other Greenhouse Gas Emissions (GHG) and other alternative environmental technologies."
        },
        "environment_policy_and_reporting_rating": {
          "type": "number",
          "description": "The Environmental Policy and Reporting subcategory includes a company's policies and intention to reduce the environmental impact of a company. The data includes the company's environmental reporting performance, adherence to environmental reporting standards and compliance with investor, regulatory and stakeholders' requests for transparency. Compliance data consists of breaches of regulatory limits and accidental releases."
        },
        "resource_management_rating": {
          "type": "number",
          "description": "The Resource Management subcategory covers how efficiently resources are used in manufacturing and delivering products and services. It includes a company's capacity to reduce the use of materials, energy or water, and to find more efficient solutions by improving its supply chain management. This subcategory includes environmental performance relative to production size."
        },
        "board_rating": {
          "type": "number",
          "description": "The Board subcategory covers a company's effectiveness in following best practices in corporate governance principles related to board membership. It includes how the company provides competitive and proportionate management compensation and its ability to incent executives and board members to achieve both financial and extra-financial targets."
        },
        "leadership_ethics_rating": {
          "type": "number",
          "description": "The Leadership Ethics subcategory measures how a company manages its relationships with its various stakeholders, including investors, customers, communities, and regulators. It measures a company's commitment and effectiveness toward the vision of integrating social and environmental aspects into the overall core strategy. It also measures whether sustainability principles are integrated from the top down into the day-to-day operations of the company."
        },
        "transparency_reporting_rating": {
          "type": "number",
          "description": "The Transparency and Reporting subcategory rates factors including are corporate policies and practices aligned with sustainability goals. It also covers whether the company is a signatory of Global Compact and other leading global entities. It evaluates the assurance (3rd party audit) of the accuracy, completeness, and reliability of its Sustainability or Corporate Social Responsibility reports."
        },
        "country_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's ESG rating in comparison to it's country peers."
        },
        "industry_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's ESG rating in comparison to it's industry peers."
        },
        "overall_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's overall ESG rating in comparison to all companies within the CSRHub ESG universe."
        },
        "community_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's Community rating in comparison to all companies within the CSRHub ESG universe."
        },
        "employee_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's Employee rating in comparison to all companies within the CSRHub ESG universe."
        },
        "environment_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's Environment rating in comparison to all companies within the CSRHub ESG universe."
        },
        "governance_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's Governance rating in comparison to all companies within the CSRHub ESG universe."
        },
        "human_rights_and_supply_chain_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's Human Rights and Supply Chain rating in comparison to all companies within the CSRHub ESG universe."
        },
        "community_dev_and_philanthropy_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's Community, Dev, and Philanthropy rating in comparison to all companies within the CSRHub ESG universe."
        },
        "product_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's Product rating in comparison to all companies within the CSRHub ESG universe."
        },
        "compensation_and_benefits_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's Compensation and Benefits rating in comparison to all companies within the CSRHub ESG universe."
        },
        "diversity_and_labor_rights_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's Diversity and Labor Rights rating in comparison to all companies within the CSRHub ESG universe."
        },
        "training_health_and_safety_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's Training, Health, and Safety rating in comparison to all companies within the CSRHub ESG universe."
        },
        "energy_climate_change_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's Energy Climate Change rating in comparison to all companies within the CSRHub ESG universe."
        },
        "environment_policy_and_reporting_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's Environment Policy and Reporting rating in comparison to all companies within the CSRHub ESG universe."
        },
        "resource_management_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's Resource Management rating in comparison to all companies within the CSRHub ESG universe."
        },
        "board_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's Board rating in comparison to all companies within the CSRHub ESG universe."
        },
        "leadership_ethics_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's Leadership Ethics rating in comparison to all companies within the CSRHub ESG universe."
        },
        "transparency_reporting_percentile_rank": {
          "type": "number",
          "description": "The percentile rank of the company's Transaperency Reporting rating in comparison to all companies within the CSRHub ESG universe."
        },
        "company": {
          "type": "object",
          "$ref": "#/definitions/ESGCompanySummary"
        }
      }
    },
    "ESGRating": {
      "properties": {
        "date": {
          "type": "string",
          "format": "date",
          "description": "Indicates the date on which the ESG Rating was calculated."
        },
        "community_rating": {
          "type": "number",
          "description": "The Community Category reflects a company's citizenship, charitable giving, and volunteerism. This category covers the company's human rights record and treatment of its supply chain. It also covers the environmental and social impacts of the company's products and services, and the development of sustainable products, processes and technologies."
        },
        "employee_rating": {
          "type": "number",
          "description": "The Employees category includes disclosure of policies, programs, and performance in diversity, labor relations and labor rights. The evaluation focuses on the quality of policies and programs, compliance with national laws and regulations, and proactive management initiatives. The category includes evaluation of inclusive diversity policies, fair treatment of all employees, robust diversity (EEO-1) programs and training."
        },
        "environment_rating": {
          "type": "number",
          "description": "The Environment category data covers a company's interactions with the environment at large, including use of natural resources. The category evaluates corporate environmental performance, compliance with environmental regulations, and mitigation of environmental footprint. It also includes leadership in addressing climate change through appropriate policies and strategies."
        },
        "governance_rating": {
          "type": "number",
          "description": "Corporate governance refers to leadership structure and the values that determine corporate direction, ethics and performance. The Governance category covers disclosure of policies and procedures, board independence and diversity, executive compensation, attention to stakeholder concerns, and evaluation of a companys culture of ethical leadership and compliance."
        }
      }
    },
    "ESGRatingWithCompany": {
      "properties": {
        "date": {
          "type": "string",
          "format": "date",
          "description": "Indicates the date on which the ESG Rating was calculated."
        },
        "community_rating": {
          "type": "number",
          "description": "The Community Category reflects a company's citizenship, charitable giving, and volunteerism. This category covers the company’s human rights record and treatment of its supply chain. It also covers the environmental and social impacts of the companys products and services, and the development of sustainable products, processes and technologies."
        },
        "employee_rating": {
          "type": "number",
          "description": "The Employees category includes disclosure of policies, programs, and performance in diversity, labor relations and labor rights. The evaluation focuses on the quality of policies and programs, compliance with national laws and regulations, and proactive management initiatives. The category includes evaluation of inclusive diversity policies, fair treatment of all employees, robust diversity (EEO-1) programs and training."
        },
        "environment_rating": {
          "type": "number",
          "description": "The Environment category data covers a company’s interactions with the environment at large, including use of natural resources. The category evaluates corporate environmental performance, compliance with environmental regulations, and mitigation of environmental footprint. It also includes leadership in addressing climate change through appropriate policies and strategies."
        },
        "governance_rating": {
          "type": "number",
          "description": "Corporate governance refers to leadership structure and the values that determine corporate direction, ethics and performance. The Governance category covers disclosure of policies and procedures, board independence and diversity, executive compensation, attention to stakeholder concerns, and evaluation of a company’s culture of ethical leadership and compliance."
        },
        "company": {
          "type": "object",
          "$ref": "#/definitions/ESGCompanySummary"
        }
      }
    },
    "ETF": {
      "type": "object",
      "description": "Exchange Traded Fund (ETF) including extensive metadata",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Intrinio ID of the ETF"
        },
        "name": {
          "type": "string",
          "description": "The common name of the ETF"
        },
        "ticker": {
          "type": "string",
          "description": "The common ticker symbol for the ETF"
        },
        "figi_ticker": {
          "type": "string",
          "description": "The OpenFIGI ticker for the ETF"
        },
        "ric": {
          "type": "string",
          "description": "Reuters Instrument Code (RIC) for the ETF"
        },
        "isin": {
          "type": "string",
          "description": "International Securities Identification Number (ISIN) for the ETF"
        },
        "sedol": {
          "type": "string",
          "description": "Stock Exchange Daily Official List (SEDOL) for the ETF"
        },
        "exchange_mic": {
          "type": "string",
          "description": "The exchange Market Identifier Code (MIC) from the International Standards Organization (ISO)"
        },
        "sponsor": {
          "type": "string",
          "description": "The fund manager (ETF) or issuing bank (ETN)"
        },
        "type": {
          "type": "string",
          "description": "High-level classification for the ETF based on its intended investment objective"
        },
        "description": {
          "type": "string",
          "description": "The ETF description as published by the ETF sponsor"
        },
        "inception_date": {
          "type": "string",
          "format": "date",
          "description": "Inception Date for the ETF as published by the ETF sponsor"
        },
        "data_change_date": {
          "type": "string",
          "format": "date",
          "description": "The last date on which there was a change in a classifications data field for this ETF"
        },
        "close_date": {
          "type": "string",
          "format": "date",
          "description": "The date on which this ETF was de-listed if it is no longer listed"
        },
        "is_live_listed": {
          "type": "boolean",
          "description": "If true, the ETF is still listed on an exchange; if false, the ETF is no longer listed"
        },
        "legal_structure": {
          "type": "string",
          "description": "The legal structure as defined in the prospectus"
        },
        "intraday_nav_ticker": {
          "type": "string",
          "description": "Intra-day NAV ticker for the Exchange Traded Fund (ETF)"
        },
        "primary_ticker": {
          "type": "string",
          "description": "The primary ticker field is used for Exchange Traded Products (ETPs) that have multiple listings and share classes. If an ETP has multiple listings or share classes, the same primary ticker is assigned to all the listings and share classes"
        },
        "primary_ticker_country_code": {
          "type": "string",
          "description": "2 letter ISO country code for the country of the primary listing"
        },
        "primary_listing_region": {
          "type": "string",
          "description": "Geographic region in the country of the primary listing falls"
        },
        "net_expense_ratio": {
          "type": "number",
          "description": "Gross expense net of Fee Waivers, as a percentage of net assets as published by the ETF Sponsor"
        },
        "asset_class": {
          "type": "string",
          "description": "Captures the underlying nature of the securities in the Exchanged Traded Product (ETP)"
        },
        "other_asset_types": {
          "type": "string",
          "description": "If 'asset_class' field is classified as 'Other Asset Types' this field captures the specific category of the underlying assets"
        },
        "market_cap_range": {
          "type": "string",
          "description": "Equity ETFs are classified as falling into categories based on the description of their investment strategy in the prospectus.  Examples ('Mega Cap', 'Large Cap', 'Mid Cap', etc.)"
        },
        "holds_only_nyse_stocks": {
          "type": "boolean",
          "description": "If true, the ETF is an equity ETF and holds only stocks listed on NYSE"
        },
        "holds_only_nasdaq_stocks": {
          "type": "boolean",
          "description": "If false, the ETF is an equity ETF and holds only stocks listed on Nasdaq"
        },
        "growth_value_tilt": {
          "type": "string",
          "description": "Classifies equity ETFs as either 'Growth' or Value' based on the stated style tilt in the ETF prospectus. Equity ETFs that do not have a stated style tilt are classified as 'Core / Blend'"
        },
        "growth_type": {
          "type": "string",
          "description": "For ETFs that are classified as 'Growth' in 'growth_value_tilt', this field further identifies those where the stocks in the ETF are both selected and weighted based on their growth (style factor) scores"
        },
        "value_type": {
          "type": "string",
          "description": "For ETFs that are classified as 'Value' in 'growth_value_tilt', this field further identifies those where the stocks in the ETF are both selected and weighted based on their value (style factor) scores"
        },
        "sector": {
          "type": "string",
          "description": "For equity ETFs that aim to provide targeted exposure to a sector or industry, this field identifies the Sector that it provides the exposure to"
        },
        "industry": {
          "type": "string",
          "description": "For equity ETFs that aim to provide targeted exposure to an industry, this field identifies the Industry that it provides the exposure to."
        },
        "sub_industry": {
          "type": "string",
          "description": "For equity ETFs that aim to provide targeted exposure to a sub-industry, this field identifies the sub-industry that it provides the exposure to"
        },
        "cross_sector_theme": {
          "type": "string",
          "description": "For equity ETFs that aim to provide targeted exposure to a specific investment theme that cuts across GICS sectors, this field identifies the specific cross-sector theme.  Examples ('Agri-business', 'Natural Resources', 'Green Investing', etc.)"
        },
        "natural_resources_type": {
          "type": "string",
          "description": "For ETFs that are classified as 'Natural Resources' in the 'cross_sector_theme' field, this field provides further detail on the type of Natural Resources exposure."
        },
        "excludes_financials": {
          "type": "boolean",
          "description": "For equity ETFs, identifies those ETFs where the underlying fund holdings will not hold financials stocks, based on the funds intended objective"
        },
        "excludes_technology": {
          "type": "boolean",
          "description": "For equity ETFs, identifies those ETFs where the underlying fund holdings will not hold technology stocks, based on the funds intended objective"
        },
        "us_or_excludes_us": {
          "type": "string",
          "description": "Takes the value of 'Domestic' for US exposure, 'International' for non-US exposure and 'Global' for exposure that includes all regions including the US"
        },
        "developed_emerging": {
          "type": "string",
          "description": "This field identifies the stage of development of the markets that the ETF provides exposure to"
        },
        "specialized_region": {
          "type": "string",
          "description": "This field is populated if the ETF provides targeted exposure to a specific type of geography-based grouping that does not fall into a specific country or continent grouping.  Examples ('BRIC', 'Chindia', etc.)"
        },
        "continent": {
          "type": "string",
          "description": "This field is populated if the ETF provides targeted exposure to a specific continent or country within that Continent"
        },
        "latin_america_sub_group": {
          "type": "string",
          "description": "For ETFs that are classified as 'Latin America' in the 'continent' field, this field provides further detail on the type of regional exposure"
        },
        "europe_sub_group": {
          "type": "string",
          "description": "For ETFs that are classified as 'Europe' in the 'continent' field, this field provides further detail on the type of regional exposure"
        },
        "asia_sub_group": {
          "type": "string",
          "description": "For ETFs that are classified as 'Asia' in the 'continent' field, this field provides further detail on the type of regional exposure"
        },
        "specific_country": {
          "type": "string",
          "description": "This field is populated if the ETF provides targeted exposure to a specific country"
        },
        "china_listing_location": {
          "type": "string",
          "description": "For ETFs that are classified as 'China' in the 'country' field, this field provides further detail on the type of exposure in the underlying securities"
        },
        "us_state": {
          "type": "string",
          "description": "Takes the value of a US state if the ETF provides targeted exposure to the municipal bonds or equities of companies operating in a specific state in the US"
        },
        "real_estate": {
          "type": "string",
          "description": "For ETFs that provide targeted real estate exposure, this field is populated if the ETF provides targeted exposure to a specific segment of the real estate market"
        },
        "index_weighting_scheme": {
          "type": "string",
          "description": "For ETFs that track an underlying index, this field provides detail on the index weighting type"
        },
        "market_cap_weighting_type": {
          "type": "string",
          "description": "For ETFs that take the value 'Market Cap Weighted' in the 'index_weighting_scheme' field, this field provides detail on the market cap weighting type"
        },
        "fundamental_weighting_type": {
          "type": "string",
          "description": "For ETFs that take the value ‘Fundamental Weighted’ in the 'index_weighting_scheme' field, this field provides detail on the fundamental weighting methodology"
        },
        "dividend_weighting_type": {
          "type": "string",
          "description": "For ETFs that take the value 'Dividend Weighted' in the 'index_weighting_scheme' field, this field provides detail on the dividend weighting methodology"
        },
        "bond_type": {
          "type": "string",
          "description": "For ETFs where 'asset_class_type' is 'Bonds', this field provides detail on the type of bonds held in the ETF"
        },
        "government_bond_types": {
          "type": "string",
          "description": "For bond ETFs that take the value 'Treasury & Government' in 'bond_type', this field provides detail on the exposure"
        },
        "municipal_bond_region": {
          "type": "string",
          "description": "For bond ETFs that take the value 'Municipal' in 'bond_type', this field provides additional detail on the geographic exposure"
        },
        "municipal_vrdo": {
          "type": "boolean",
          "description": "For bond ETFs that take the value 'Municipal' in 'bond_type', this field identifies those ETFs that specifically provide exposure to Variable Rate Demand Obligations"
        },
        "mortgage_bond_types": {
          "type": "string",
          "description": "For bond ETFs that take the value 'Mortgage' in 'bond_type', this field provides additional detail on the type of underlying securities"
        },
        "bond_tax_status": {
          "type": "string",
          "description": "For all US bond ETFs, this field provides additional detail on the tax treatment of the underlying securities"
        },
        "credit_quality": {
          "type": "string",
          "description": "For all bond ETFs, this field helps to identify if the ETF provides targeted exposure to securities of a specific credit quality range"
        },
        "average_maturity": {
          "type": "string",
          "description": "For all bond ETFs, this field helps to identify if the ETF provides targeted exposure to securities of a specific maturity range"
        },
        "specific_maturity_year": {
          "type": "integer",
          "description": "For all bond ETFs that take the value 'Specific Maturity Year' in the 'average_maturity' field, this field specifies the calendar year"
        },
        "bond_currency_denomination": {
          "type": "string",
          "description": "For all bond ETFs, this field provides additional detail on the currency denomination of the underlying securities"
        },
        "laddered": {
          "type": "boolean",
          "description": "For bond ETFs, this field identifies those ETFs that specifically hold bonds in a laddered structure, where the bonds are scheduled to mature in an annual, sequential structure"
        },
        "zero_coupon": {
          "type": "boolean",
          "description": "For bond ETFs, this field identifies those ETFs that specifically hold zero coupon Treasury Bills"
        },
        "floating_rate": {
          "type": "boolean",
          "description": "For bond ETFs, this field identifies those ETFs that specifically hold floating rate bonds"
        },
        "build_america_bonds": {
          "type": "boolean",
          "description": "For municipal bond ETFs, this field identifies those ETFs that specifically hold Build America Bonds"
        },
        "commodity_types": {
          "type": "string",
          "description": "For ETFs where 'asset_class_type' is 'Commodities', this field provides detail on the type of commodities held in the ETF"
        },
        "energy_type": {
          "type": "string",
          "description": "For ETFs where 'commodity_type' is 'Energy', this field provides detail on the type of energy exposure provided by the ETF"
        },
        "agricultural_type": {
          "type": "string",
          "description": "For ETFs where 'commodity_type' is 'Agricultural', this field provides detail on the type of agricultural exposure provided by the ETF"
        },
        "metal_type": {
          "type": "string",
          "description": "For ETFs where 'commodity_type' is 'Gold & Metals', this field provides detail on the type of exposure provided by the ETF"
        },
        "inverse_leveraged": {
          "type": "string",
          "description": "This field is populated if the ETF provides inverse or leveraged exposure"
        },
        "target_date_multi_asset_type": {
          "type": "string",
          "description": "For ETFs where 'asset_class_type' is 'Target Date / MultiAsset', this field provides detail on the type of commodities held in the ETF"
        },
        "currency_hedged": {
          "type": "boolean",
          "description": "This field is populated if the ETF’s strategy involves hedging currency exposure"
        },
        "currency_pair": {
          "type": "string",
          "description": "This field is populated if the ETF’s strategy involves providing exposure to the movements of a currency or involves hedging currency exposure"
        },
        "social_environmental_type": {
          "type": "string",
          "description": "This field is populated if the ETF’s strategy involves providing exposure to a specific social or environmental theme"
        },
        "clean_energy_type": {
          "type": "string",
          "description": "This field is populated if the ETF has a value of 'Clean Energy' in the 'social_environmental_type' field."
        },
        "dividend_type": {
          "type": "string",
          "description": "This field is populated if the ETF has an intended investment objective of holding dividend-oriented stocks as stated in the prospectus"
        },
        "regular_dividend_payor_type": {
          "type": "string",
          "description": "This field is populated if the ETF has a value of 'Dividend – Regular Payors' in the 'dividend_type' field"
        },
        "holds_ml_ps": {
          "type": "boolean",
          "description": "If true, the ETF’s investment objective explicitly specifies that it holds MLPs as an intended part of its investment strategy"
        },
        "holds_preferred_stock": {
          "type": "boolean",
          "description": "If true, the ETF’s investment objective explicitly specifies that it holds preferred stock as an intended part of its investment strategy"
        },
        "holds_closed_end_funds": {
          "type": "boolean",
          "description": "IF true, if the ETF’s investment objective explicitly specifies that it holds closed end funds as an intended part of its investment strategy"
        },
        "quant_strategies_type": {
          "type": "string",
          "description": "This field is populated if the ETF has either an index-linked or active strategy that is based on a proprietary quantitative strategy"
        },
        "other_quant_models": {
          "type": "string",
          "description": "For ETFs where 'quant_strategies_type' is 'Other Quant Model', this field provides the name of the specific proprietary quant model used as the underlying strategy for the ETF"
        },
        "hedge_fund_type": {
          "type": "string",
          "description": "For ETFs where 'other_asset_types' is 'Hedge Fund Replication', this field provides detail on the type of hedge fund replication strategy"
        },
        "derivatives_based": {
          "type": "string",
          "description": "This field is populated if the ETF holds either listed or over-the-counter derivatives in its portfolio"
        },
        "holds_ad_rs": {
          "type": "boolean",
          "description": "If true, he ETF’s investment objective explicitly specifies that it holds American Depositary Receipts (ADRs) as an intended part of its investment strategy"
        },
        "index_linked": {
          "type": "string",
          "description": "This field identifies whether an ETF is index linked or active"
        },
        "includes_short_exposure": {
          "type": "boolean",
          "description": "This field is populated if the ETF has short exposure in any of its holdings e.g. in a long/short or inverse ETF"
        },
        "index_name": {
          "type": "string",
          "description": "This field identifies the name of the underlying index tracked by the ETF, if applicable"
        },
        "parent_index": {
          "type": "string",
          "description": "This field identifies the name of the parent index, which represents the broader universe from which the index underlying the ETF is created, if applicable"
        },
        "index_family": {
          "type": "string",
          "description": "This field identifies the index family to which the index underlying the ETF belongs. The index family is represented as categorized by the index provider"
        },
        "broader_index_family": {
          "type": "string",
          "description": "This field identifies the broader index family to which the index underlying the ETF belongs. The broader index family is represented as categorized by the index provider"
        },
        "index_provider": {
          "type": "string",
          "description": "This field identifies the Index provider for the index underlying the ETF, if applicable"
        },
        "fund_family": {
          "type": "string",
          "description": "This field identifies the fund family to which the ETF belongs, as categorized by the ETF Sponsor"
        },
        "index_ticker": {
          "type": "string",
          "description": "This field identifies the OpenFIGI ticker for the Index underlying the ETF"
        },
        "etn_issuing_bank": {
          "type": "string",
          "description": "If the product is an Exchange Traded Note (ETN), this field identifies the issuing bank"
        },
        "etn_maturity_date": {
          "type": "string",
          "format": "date",
          "description": "If the product is an ETN, this field identifies the maturity date for the ETN"
        },
        "livestock": {
          "type": "string",
          "description": "For ETFs where 'commodity_type' is 'Livestock', this field provides detail on the type of livestock exposure provided by the ETF"
        },
        "dynamic_futures_roll": {
          "type": "boolean",
          "description": "If the product holds futures contracts, this field identifies those products where the roll strategy is dynamic (rather than entirely rules based), so as to minimize roll costs"
        },
        "index_provider_code": {
          "type": "string",
          "description": "This field provides the First Bridge code for each Index provider, corresponding to the index underlying the ETF if applicable"
        },
        "single_category_designation": {
          "type": "string",
          "description": "This categorization is created for those users who want every ETF to be ‘forced’ into a single bucket, so that the assets for all categories will always sum to the total market"
        },
        "registered_countries": {
          "type": "string",
          "description": "The list of countries where the ETF is legally registered for sale. This may differ from where the ETF is domiciled or traded, particularly in Europe"
        },
        "issuing_entity_country_code": {
          "type": "string",
          "description": "The name of the legal entity that issued the Exchange Traded Product (ETP)"
        },
        "ucits": {
          "type": "boolean",
          "description": "If true, the Exchange Traded Product (ETP) is Undertakings for the Collective Investment in Transferable Securities (UCITS) compliant"
        },
        "replication_structure": {
          "type": "string",
          "description": "The replication structure of the Exchange Traded Product (ETP)"
        },
        "domicile": {
          "type": "string",
          "description": "2 letter ISO country code for the country where the ETP is domiciled"
        },
        "base_currency": {
          "type": "string",
          "description": "Base currency of the Exchange Traded Product (ETP) in which the net asset value (NAV) is calculated. Reported using the 3-digit ISO currency code"
        },
        "listing_currency": {
          "type": "string",
          "description": "Listing currency of the Exchange Traded Product (ETP) in which it is traded. Reported using the 3-digit ISO currency code"
        },
        "fund_listing_date": {
          "type": "string",
          "format": "date",
          "description": "The date on which the Exchange Traded Product (ETP) or share class of the ETP is listed on a specific exchange"
        },
        "listing_country_code": {
          "type": "string",
          "description": "2 letter ISO country code for the country where the Exchange Traded Product (ETP) is listed"
        },
        "listing_region": {
          "type": "string",
          "description": "The region in which this specific ETF is listed"
        },
        "smartvs_traditional_beta": {
          "type": "string",
          "description": "This field identifies whether an ETF provides 'Traditional' beta exposure or 'Smart' beta exposure. ETFs that are active (i.e. non-indexed), leveraged / inverse or have a proprietary quant model (i.e. that don’t provide indexed exposure to a targeted factor) are classified separately"
        },
        "smartvs_traditional_beta_level2": {
          "type": "string",
          "description": "This field provides further detail within the traditional and smart beta categories"
        },
        "income_category": {
          "type": "string",
          "description": "Identifies if an Exchange Traded Fund (ETF) falls into a category that is specifically designed to provide a high yield or income"
        },
        "etp_structure_type": {
          "type": "string",
          "description": "Classifies Exchange Traded Products (ETPs) into very broad categories based on its legal structure"
        },
        "month_end_assets": {
          "type": "number",
          "description": "Net assets in millions of dollars as of the most recent month end"
        },
        "etf_portfolio_turnover": {
          "type": "number",
          "description": "The percentage of positions turned over in the last 12 months"
        },
        "firstbridge_id": {
          "type": "string",
          "description": "The FirstBridge unique identifier for the Exchange Traded Fund (ETF)"
        },
        "firstbridge_parent_id": {
          "type": "string",
          "description": "The FirstBridge unique identifier of the parent Exchange Traded Fund (ETF), if applicable"
        },
        "number_of_holdings": {
          "type": "integer",
          "description": "The number of holdings for this Exchange Traded Fund (ETF)"
        }
      }
    },
    "ETFAnalytics": {
      "type": "object",
      "description": "Provides analytics for the Exchange Traded Fund (ETF) including volume, market cap, 52 week high, and 52 week low",
      "properties": {
        "date": {
          "type": "string",
          "format": "date",
          "description": "The calendar date these analytics represent."
        },
        "fifty_two_week_high": {
          "type": "number",
          "description": "Highest trading price for the security in the preceding 52 weeks"
        },
        "fifty_two_week_low": {
          "type": "number",
          "description": "Lowest trading price for the security in the preceding 52 weeks"
        },
        "volume_traded": {
          "type": "number",
          "description": "The total quantity of shares traded on the latest trading day"
        },
        "average_daily_volume_one_month": {
          "type": "number",
          "description": "The average quantity of shares traded per day for the last month"
        },
        "average_daily_volume_three_month": {
          "type": "number",
          "description": "The average quantity of shares traded per day for the last three months"
        },
        "average_daily_volume_six_month": {
          "type": "number",
          "description": "The average quantity of shares traded per day for the last six months"
        },
        "market_cap": {
          "type": "number",
          "description": "The market capitalization for the Exchange Traded Fund (ETF)"
        },
        "shares_outstanding": {
          "type": "number",
          "description": "The number of shares outstanding for the Exchange Traded Fund (ETF)"
        },
        "etf": {
          "$ref": "#/definitions/ETFSummary"
        }
      }
    },
    "ETFHistoricalStats": {
      "type": "object",
      "description": "Historical daily stats for the Exchange Traded Fund (ETF) including net asset value, beta vs spy, returns, and volatility",
      "properties": {
        "messages": {
          "type": "array",
          "description": "A list of messages related to the request, such as warnings or errors.",
          "items": {
            "type": "string",
            "description": "The message"
          }
        },
        "etf": {
          "$ref": "#/definitions/ETFSummary",
          "description": "A brief summary of the ETF it which these stats refer.  Not included when returning historical stats."
        },
        "stats": {
          "type": "array",
          "description": "The historical stats for the ETF",
          "items": {
            "$ref": "#/definitions/ETFStats"
          }
        },
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        }
      }
    },
    "ETFHolding": {
      "type": "object",
      "description": "The Exchange Traded Fund (ETF) holding data",
      "properties": {
        "as_of_date": {
          "type": "string",
          "format": "date",
          "description": "The date on which the holding and their weights correspond"
        },
        "name": {
          "type": "string",
          "description": "The common name for the holding"
        },
        "ticker": {
          "type": "string",
          "description": "The common exchange ticker for the holding"
        },
        "type": {
          "type": "string",
          "description": "The type of instrument for this holding.  Examples (Bond = 'BOND', Equity = 'EQUI', Options = 'OPTN')"
        },
        "composite_figi": {
          "type": "string",
          "description": "DEPRECATED"
        },
        "share_class_figi": {
          "type": "string",
          "description": "The OpenFIGI symbol for the holding"
        },
        "isin": {
          "type": "string",
          "description": "International Securities Identification Number (ISIN) for the holding"
        },
        "ric": {
          "type": "string",
          "description": "Reuters Instrument Code (RIC) for the holding"
        },
        "sedol": {
          "type": "string",
          "description": "Stock Exchange Daily Official List (SEDOL) for the holding"
        },
        "face": {
          "type": "number",
          "description": "Face value of the debt security, if available"
        },
        "coupon": {
          "type": "number",
          "description": "Coupon rate of the debt security, if available"
        },
        "market_value_held": {
          "type": "number",
          "description": "The market value of this holding in the ETF as of the `as_of_date`"
        },
        "notional_value": {
          "type": "number",
          "description": "Notional value of derivatives contracts held in the Exchange Traded Fund (ETF) or Exchange Traded Note (ETN)"
        },
        "maturity": {
          "type": "string",
          "format": "date",
          "description": "Maturity date for the debt security, if available"
        },
        "quantity_held": {
          "type": "number",
          "description": "Number of units of the security held if available"
        },
        "weighting": {
          "type": "number",
          "description": "Fraction of the funds market value held"
        },
        "quantity_units": {
          "type": "number",
          "description": "The unit of the `quanity_held` field. Examples ('oz', 'shares', 'contracts')"
        },
        "quantity_per_share": {
          "type": "number",
          "description": "Number of units of the security held per units of shares outstanding of the Exchange Traded Fund (ETF), if available"
        },
        "contract_expiry_date": {
          "type": "string",
          "format": "date",
          "description": "Expiry date for the futures contract held in the Exchange Traded Fund (ETF) or Exchange Traded Note (ETN)"
        }
      }
    },
    "ETFStats": {
      "type": "object",
      "description": "Daily stats for the Exchange Traded Fund (ETF) including net asset value, beta vs spy, returns, and volatility",
      "properties": {
        "date": {
          "type": "string",
          "format": "date",
          "description": null
        },
        "net_asset_value": {
          "type": "number",
          "description": "The net asset value (NAV = Total Assets - Total Liabilities)"
        },
        "beta_vs_spy": {
          "type": "number",
          "description": "Volatility this ETF is versus the SPY ETF"
        },
        "trailing_one_month_return_split_and_dividend": {
          "type": "number",
          "description": "Trailing one month return including dividends"
        },
        "trailing_one_month_return_split_only": {
          "type": "number",
          "description": "Trailing one month return excluding dividends"
        },
        "trailing_one_year_return_split_and_dividend": {
          "type": "number",
          "description": "Trailing one year return including dividends"
        },
        "trailing_one_year_return_split_only": {
          "type": "number",
          "description": "Trailing one year return excluding dividends"
        },
        "trailing_one_year_volatility_annualized": {
          "type": "number",
          "description": "Annualized standard deviation of daily price returns over trailing 252 trading days"
        },
        "trailing_three_year_annualized_return_split_and_dividend": {
          "type": "number",
          "description": "Trailing three year return including dividends"
        },
        "trailing_three_year_annualized_return_split_only": {
          "type": "number",
          "description": "Trailing three year return excluding dividends"
        },
        "trailing_three_year_volatility_annualized": {
          "type": "number",
          "description": "Annualized standard deviation of daily price returns over trailing 756 trading days"
        },
        "trailing_five_year_annualized_return_split_and_dividend": {
          "type": "number",
          "description": "Trailing five year return including dividends"
        },
        "trailing_five_year_annualized_return_split_only": {
          "type": "number",
          "description": "Trailing five year return excluding dividends"
        },
        "trailing_five_year_volatility_annualized": {
          "type": "number",
          "description": "Annualized standard  deviation  of  daily  price  returns  over  trailing 1260 trading days"
        },
        "trailing_ten_year_annualized_return_split_and_dividend": {
          "type": "number",
          "description": "Trailing ten year return including dividends"
        },
        "trailing_ten_year_annualized_return_split_only": {
          "type": "number",
          "description": "Trailing ten year return excluding dividends"
        },
        "inception_annualized_return_split_and_dividend": {
          "type": "number",
          "description": "Annualized return including dividends since inception"
        },
        "inception_annualized_return_split_only": {
          "type": "number",
          "description": "Annualized return excluding dividends since inception"
        },
        "calendar_year_5_return_split_and_dividend": {
          "type": "number",
          "description": "Five years ago calendar year return including dividends"
        },
        "calendar_year_5_return_split_only": {
          "type": "number",
          "description": "Five years ago calendar year return excluding dividends"
        },
        "calendar_year_4_return_split_and_dividend": {
          "type": "number",
          "description": "Four years ago calendar year return including dividends"
        },
        "calendar_year_4_return_split_only": {
          "type": "number",
          "description": "Four years ago calendar year return excluding dividends"
        },
        "calendar_year_3_return_split_and_dividend": {
          "type": "number",
          "description": "Three years ago calendar year return including dividends"
        },
        "calendar_year_3_return_split_only": {
          "type": "number",
          "description": "Three years ago calendar year return excluding dividends"
        },
        "calendar_year_2_return_split_and_dividend": {
          "type": "number",
          "description": "Two years ago calendar year return including dividends"
        },
        "calendar_year_2_return_split_only": {
          "type": "number",
          "description": "Two years ago calendar year return excluding dividends"
        },
        "calendar_year_1_return_split_and_dividend": {
          "type": "number",
          "description": "One year ago calendar year return including dividends"
        },
        "calendar_year_1_return_split_only": {
          "type": "number",
          "description": "One year ago calendar year return excluding dividends"
        },
        "calendar_year_to_date_return_split_and_dividend": {
          "type": "number",
          "description": "Calendar year to date (YTD) return including dividends"
        },
        "calendar_year_to_date_return_split_only": {
          "type": "number",
          "description": "Calendar year to date (YTD) return excluding dividends"
        },
        "etf": {
          "$ref": "#/definitions/ETFSummary",
          "description": "A brief summary of the ETF to which these stats refer.  Not included when part of historical stats."
        }
      }
    },
    "ETFSummary": {
      "type": "object",
      "description": "Exchange Traded Fund (ETF) sourced from FirstBridge",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Intrinio ID of the ETF"
        },
        "name": {
          "type": "string",
          "description": "The common name of the ETF"
        },
        "ticker": {
          "type": "string",
          "description": "The common ticker symbol for the ETF"
        },
        "figi_ticker": {
          "type": "string",
          "description": "The OpenFIGI ticker for the ETF"
        },
        "ric": {
          "type": "string",
          "description": "Reuters Instrument Code (RIC) for the ETF"
        },
        "isin": {
          "type": "string",
          "description": "International Securities Identification Number (ISIN) for the ETF"
        },
        "sedol": {
          "type": "string",
          "description": "Stock Exchange Daily Official List (SEDOL) for the ETF"
        },
        "exchange_mic": {
          "type": "string",
          "description": "The exchange Market Identifier Code (MIC) from the International Standards Organization (ISO)"
        }
      }
    },
    "EarningsRecord": {
      "type": "object",
      "description": "An earnings record for the identifier",
      "properties": {
        "quarter": {
          "type": "string",
          "description": "The letter “Q” followed by the quarter number the earnings information applies to"
        },
        "time_of_day": {
          "type": "string",
          "description": "Indicates the time of the announcement",
          "enum": [
            "Before Market",
            "During Market",
            "After Market",
            "Unspecified"
          ]
        },
        "broadcast_url": {
          "type": "string",
          "description": "Link for Conference Call recording"
        },
        "transcript_url": {
          "type": "string",
          "description": "Link to the earnings release transcript"
        },
        "transcript_quarter": {
          "type": "string",
          "description": "The letter “Q” followed by the quarter number the earnings transcript applies to"
        },
        "transcript_fiscal_year": {
          "type": "string",
          "description": "Fiscal year in YYYY format for the earnings transcript"
        },
        "conference_call_date": {
          "type": "string",
          "format": "date",
          "description": "Date of the conference call"
        },
        "conference_call_time": {
          "type": "string",
          "description": "Published time of the conference call"
        },
        "conference_call_phone_number": {
          "type": "string",
          "description": "Publicly available phone number for replay conference call"
        },
        "conference_call_passcode": {
          "type": "string",
          "description": "Passcode for replay conference call"
        },
        "last_confirmation_date": {
          "type": "string",
          "format": "date",
          "description": "Date of last earnings date update by a WSH analyst"
        },
        "board_of_directors_meeting_date": {
          "type": "string",
          "format": "date",
          "description": "Date of Board/Shareholder Meeting"
        },
        "board_of_directors_meeting_type": {
          "type": "string",
          "description": "The type of meeting - \"B\" indicates a Board of Directors meeting and \"S\" indicates a Shareholder meeting",
          "enum": [
            "B",
            "S"
          ]
        },
        "company_website": {
          "type": "string",
          "description": "Website link for the company"
        },
        "q1_date": {
          "type": "string",
          "format": "date",
          "description": "Earnings Date for 1st quarter"
        },
        "q2_date": {
          "type": "string",
          "format": "date",
          "description": "Earnings Date for 2nd quarter"
        },
        "q3_date": {
          "type": "string",
          "format": "date",
          "description": "Earnings Date for 3rd quarter"
        },
        "q4_date": {
          "type": "string",
          "format": "date",
          "description": "Earnings Date for 4th quarter"
        },
        "type": {
          "type": "string",
          "description": "The nature of the next reported earnings date - \"V\" indicates a Verified date, \"T\" indicates that the date was gathered from the company, but is still considered Tentative, and \"I\" indicates that the date is forecased or Inferred",
          "enum": [
            "V",
            "T",
            "I"
          ]
        },
        "next_earnings_date": {
          "type": "string",
          "format": "date",
          "description": "Next earnings date"
        },
        "next_earnings_quarter": {
          "type": "string",
          "description": "The quarter of the next earnings release"
        },
        "next_earnings_fiscal_year": {
          "type": "integer",
          "description": "The fiscal year associated with next earnings date and next earnings quarter"
        },
        "preliminary_earnings_date": {
          "type": "string",
          "format": "date",
          "description": "The release date of a preliminary earnings report"
        },
        "security": {
          "$ref": "#/definitions/SecuritySummary"
        }
      }
    },
    "EaseOfMovementTechnicalValue": {
      "type": "object",
      "description": "The date_time and eom values of a Ease of Movement technical indicator calculation",
      "properties": {
        "date_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date_time of the observation"
        },
        "eom": {
          "type": "number",
          "format": "float",
          "description": "The Ease of Movement calculation value"
        }
      }
    },
    "EconomicIndex": {
      "type": "object",
      "description": "An economic index provided by the St. Lous Fed FRED API, such as GDP, Unemployment, Fed Funds Rate, and more.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Intrinio ID for the Index"
        },
        "symbol": {
          "type": "string",
          "description": "The symbol used to identify the Index"
        },
        "name": {
          "type": "string",
          "description": "The name of the Index"
        },
        "continent": {
          "type": "string",
          "description": "The continent of the country of focus for the Index"
        },
        "country": {
          "type": "string",
          "description": "The country of focus for the Index"
        },
        "update_frequency": {
          "type": "string",
          "description": "How often the Index is updated"
        },
        "last_updated": {
          "type": "string",
          "format": "date-time",
          "description": "When the Index was updated last"
        },
        "description": {
          "type": "string",
          "description": "A paragraph describing the index and its scope"
        },
        "observation_start": {
          "type": "string",
          "format": "date",
          "description": "The earliest date for which data is available"
        },
        "observation_end": {
          "type": "string",
          "format": "date",
          "description": "The latest date for which data is available"
        },
        "seasonal_adjustment": {
          "type": "string",
          "description": "Whether the data is adjusted to account for seasonality"
        },
        "units": {
          "type": "string",
          "description": "The units of the data"
        }
      }
    },
    "EconomicIndexSummary": {
      "type": "object",
      "description": "An economic index provided by the St. Lous Fed FRED API, such as GDP, Unemployment, Fed Funds Rate, and more.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Intrinio ID for the Index"
        },
        "symbol": {
          "type": "string",
          "description": "The symbol used to identify the Index"
        },
        "name": {
          "type": "string",
          "description": "The name of the Index"
        },
        "continent": {
          "type": "string",
          "description": "The continent of the country of focus for the Index"
        },
        "country": {
          "type": "string",
          "description": "The country of focus for the Index"
        },
        "update_frequency": {
          "type": "string",
          "description": "How often the Index is updated"
        },
        "last_updated": {
          "type": "string",
          "format": "date-time",
          "description": "When the Index was updated last"
        },
        "observation_start": {
          "type": "string",
          "format": "date",
          "description": "The earliest date for which data is available"
        },
        "observation_end": {
          "type": "string",
          "format": "date",
          "description": "The latest date for which data is available"
        },
        "seasonal_adjustment": {
          "type": "string",
          "description": "Whether the data is adjusted to account for seasonality"
        },
        "units": {
          "type": "string",
          "description": "The units of the data"
        }
      }
    },
    "EodIndexPrice": {
      "type": "object",
      "description": "The end of day price of an index.",
      "properties": {
        "index": {
          "type": "object",
          "description": "The index",
          "$ref": "#/definitions/ApiResponseIndex"
        },
        "close": {
          "type": "number",
          "description": "The close price"
        },
        "open": {
          "type": "number",
          "description": "The open price"
        },
        "high": {
          "type": "number",
          "description": "The high price"
        },
        "low": {
          "type": "number",
          "description": "The low price"
        },
        "volume": {
          "type": "integer",
          "description": "The volume"
        },
        "date": {
          "type": "string",
          "format": "date",
          "description": "The date of the pricing data."
        }
      }
    },
    "EodIndexPriceSummary": {
      "type": "object",
      "description": "The end of day price of an index.",
      "properties": {
        "close": {
          "type": "number",
          "description": "The close price"
        },
        "open": {
          "type": "number",
          "description": "The open price"
        },
        "high": {
          "type": "number",
          "description": "The high price"
        },
        "low": {
          "type": "number",
          "description": "The low price"
        },
        "volume": {
          "type": "integer",
          "description": "The volume"
        },
        "date": {
          "type": "string",
          "format": "date",
          "description": "The date of the pricing data."
        }
      }
    },
    "Filing": {
      "type": "object",
      "description": "A filing submitted to the SEC by a company",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Intrinio ID of the Filing"
        },
        "filing_date": {
          "type": "string",
          "format": "date",
          "description": "The date when the filing was submitted to the SEC by the company"
        },
        "accepted_date": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when the filing was accepted by SEC"
        },
        "period_end_date": {
          "type": "string",
          "format": "date",
          "description": "The ending date of the fiscal period for the filing"
        },
        "report_type": {
          "type": "string",
          "description": "The filing <a href=\"https://docs.intrinio.com/documentation/sec_filing_report_types\" target=\"_blank\">report type</a>"
        },
        "sec_unique_id": {
          "type": "string",
          "description": "A unique identifier for the filing provided by the SEC"
        },
        "filing_url": {
          "type": "string",
          "format": "url",
          "description": "The URL to the filing page on the SEC site"
        },
        "report_url": {
          "type": "string",
          "format": "url",
          "description": "The URL to the actual report on the SEC site"
        },
        "instance_url": {
          "type": "string",
          "format": "url",
          "description": "The URL for the XBRL filing for the report"
        },
        "industry_category": {
          "type": "string",
          "description": "The company's operating industry category",
          "x-db_name": "company.industry_category.name"
        },
        "industry_group": {
          "type": "string",
          "description": "The company's operating industry group",
          "x-db_name": "company.industry_group.name"
        },
        "word_count": {
          "type": "integer",
          "description": "The number of words in the filing"
        },
        "earnings_disclosed_at": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when the earnings information was first disclosed via 8-K filing"
        },
        "earnings_disclosed_8k_id": {
          "type": "string",
          "description": "The Intrinio ID of the 8-K filing where earnings were first disclosed"
        },
        "earnings_8k_url": {
          "type": "string",
          "format": "url",
          "description": "The URL to the 8-K filing page on the SEC site where earnings were first disclosed"
        },
        "company": {
          "type": "object",
          "$ref": "#/definitions/CompanySummary"
        }
      }
    },
    "FilingNote": {
      "type": "object",
      "description": "A filing submitted to the SEC by a company",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Intrinio ID of the note"
        },
        "xbrl_tag": {
          "type": "string",
          "description": "The XBRL Tag used for the note"
        },
        "content": {
          "type": "string",
          "description": "The plain text (after html has been removed) of the note, or text including html if the content_format parameter has been set to html"
        },
        "filing": {
          "type": "object",
          "description": "A filing submitted to the SEC by a company",
          "properties": {
            "cik": {
              "type": "string",
              "description": "The Central Index Key (CIK) assigned to the company"
            },
            "report_type": {
              "type": "string",
              "description": "The filing <a href=\"https://docs.intrinio.com/documentation/sec_filing_report_types\" target=\"_blank\">report type</a>"
            },
            "period_end_date": {
              "type": "string",
              "format": "date",
              "description": "The ending date of the fiscal period for the filing"
            },
            "filing_date": {
              "type": "string",
              "format": "date",
              "description": "The date the report was filed with the SEC"
            }
          }
        }
      }
    },
    "FilingNoteSummary": {
      "type": "object",
      "description": "Metadata for the note retrieved including the Intrinio ID, tag and summary of the filing to which it belongs",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Intrinio ID of the note"
        },
        "xbrl_tag": {
          "type": "string",
          "description": "The XBRL tag used for the note by the filing entity"
        },
        "filing": {
          "type": "object",
          "description": "A filing submitted to the SEC by a company",
          "properties": {
            "cik": {
              "type": "string",
              "description": "The Central Index Key (CIK) assigned to the company"
            },
            "report_type": {
              "type": "string",
              "description": "The filing <a href=\"https://docs.intrinio.com/documentation/sec_filing_report_types\" target=\"_blank\">report type</a>"
            },
            "period_end_date": {
              "type": "string",
              "format": "date",
              "description": "The ending date of the fiscal period for the filing"
            },
            "filing_date": {
              "type": "string",
              "format": "date",
              "description": "The date the report was filed with the SEC"
            }
          }
        }
      }
    },
    "FilingSummary": {
      "type": "object",
      "description": "A filing submitted to the SEC by a company",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Intrinio ID of the Filing"
        },
        "filing_date": {
          "type": "string",
          "format": "date",
          "description": "The date when the filing was submitted to the SEC by the company"
        },
        "accepted_date": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when the filing was accepted by SEC"
        },
        "period_end_date": {
          "type": "string",
          "format": "date",
          "description": "The ending date of the fiscal period for the filing"
        },
        "report_type": {
          "type": "string",
          "description": "The filing <a href=\"https://docs.intrinio.com/documentation/sec_filing_report_types\" target=\"_blank\">report type</a>"
        },
        "sec_unique_id": {
          "type": "string",
          "description": "A unique identifier for the filing provided by the SEC"
        },
        "filing_url": {
          "type": "string",
          "format": "url",
          "description": "The URL to the filing page on the SEC site"
        },
        "report_url": {
          "type": "string",
          "format": "url",
          "description": "The URL to the actual report on the SEC site"
        },
        "instance_url": {
          "type": "string",
          "format": "url",
          "description": "The URL for the XBRL filing for the report"
        }
      }
    },
    "ForceIndexTechnicalValue": {
      "type": "object",
      "description": "The date_time and fi values of a Force Index technical indicator calculation",
      "properties": {
        "date_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date_time of the observation"
        },
        "fi": {
          "type": "number",
          "format": "float",
          "description": "The Force Index calculation value"
        }
      }
    },
    "ForexCurrency": {
      "type": "object",
      "description": "A Forex Currency",
      "properties": {
        "code": {
          "type": "string",
          "description": "The ISO 4217 currency code",
          "example": "AUD"
        },
        "name": {
          "type": "string",
          "description": "The name of the currency",
          "example": "Dollar"
        },
        "country": {
          "type": "string",
          "description": "The country in which the currency is used",
          "example": "Australia"
        }
      }
    },
    "ForexPair": {
      "type": "object",
      "description": "A Forex Currency Pair",
      "properties": {
        "code": {
          "type": "string",
          "description": "The common code of the currency pair",
          "example": "EURUSD"
        },
        "base_currency": {
          "type": "string",
          "description": "The ISO 4217 currency code of the base currency",
          "example": "EUR"
        },
        "quote_currency": {
          "type": "string",
          "description": "The ISO 4217 currency code of the quote currency",
          "example": "USD"
        }
      }
    },
    "ForexPrice": {
      "type": "object",
      "description": "A Forex Price",
      "properties": {
        "occurred_at": {
          "type": "string",
          "description": "The timestamp of the beginning of the timeframe. The open prices would be at this time, while close prices would be at this time plus the timeframe.",
          "example": "2019-01-30T22:00:00.000Z"
        },
        "open_bid": {
          "type": "number",
          "format": "float",
          "description": "Open bid",
          "example": 0.87962
        },
        "high_bid": {
          "type": "number",
          "format": "float",
          "description": "High bid",
          "example": 0.88137
        },
        "low_bid": {
          "type": "number",
          "format": "float",
          "description": "Low bid",
          "example": 0.87582
        },
        "close_bid": {
          "type": "number",
          "format": "float",
          "description": "Close bid",
          "example": 0.87591
        },
        "open_ask": {
          "type": "number",
          "format": "float",
          "description": "Open ask",
          "example": 0.87972
        },
        "high_ask": {
          "type": "number",
          "format": "float",
          "description": "High ask",
          "example": 0.88151
        },
        "low_ask": {
          "type": "number",
          "format": "float",
          "description": "Low ask",
          "example": 0.87646
        },
        "close_ask": {
          "type": "number",
          "format": "float",
          "description": "Close ask",
          "example": 0.87733
        },
        "total_ticks": {
          "type": "integer",
          "description": "Total ticks",
          "example": 199438
        }
      }
    },
    "Fundamental": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Intrinio ID of the Fundamental"
        },
        "statement_code": {
          "type": "string",
          "description": "The code of the financial statement that the Fundamental represents"
        },
        "fiscal_year": {
          "type": "number",
          "description": "The fiscal year"
        },
        "fiscal_period": {
          "type": "string",
          "description": "The fiscal period"
        },
        "type": {
          "type": "string",
          "description": "The type of Fundamental",
          "enum": [
            "reported",
            "restated",
            "calculated"
          ]
        },
        "start_date": {
          "type": "string",
          "format": "date",
          "description": "The period start date"
        },
        "end_date": {
          "type": "string",
          "format": "date",
          "description": "The period start date"
        },
        "filing_date": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when the Fundamental was filed with the SEC"
        },
        "is_latest": {
          "type": "boolean",
          "description": "Is this the latest fundamental available based on the company's most recent filings? Use the Lookup Fundamental endpoint to find the latest fundamental (<a href=\"https://docs.intrinio.com/documentation/web_api/lookup_fundamental_v2\" target=\"_blank\">reference</a>)"
        },
        "updated_date": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when the fundamental was last updated"
        },
        "first_calculable": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when the fundamental was first calculable"
        },
        "earnings_disclosed_at": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when the earnings information was first disclosed via 8-K filing"
        },
        "company": {
          "type": "object",
          "description": "The Company that the Fundamental was belongs to",
          "$ref": "#/definitions/CompanySummary"
        }
      }
    },
    "FundamentalSummary": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Intrinio ID of the Fundamental"
        },
        "statement_code": {
          "type": "string",
          "description": "The code of the financial statement that the Fundamental represents"
        },
        "fiscal_year": {
          "type": "number",
          "description": "The fiscal year"
        },
        "fiscal_period": {
          "type": "string",
          "description": "The fiscal period"
        },
        "type": {
          "type": "string",
          "description": "The type of Fundamental",
          "enum": [
            "reported",
            "restated",
            "calculated"
          ]
        },
        "start_date": {
          "type": "string",
          "format": "date",
          "description": "The period start date"
        },
        "end_date": {
          "type": "string",
          "format": "date",
          "description": "The period start date"
        },
        "filing_date": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when the Fundamental was filed with the SEC"
        },
        "is_latest": {
          "type": "boolean",
          "description": "Is this the latest fundamental available based on the company's most recent filings? Use the Lookup Fundamental endpoint to find the latest fundamental (<a href=\"https://docs.intrinio.com/documentation/web_api/lookup_fundamental_v2\" target=\"_blank\">reference</a>)"
        },
        "updated_date": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when the data related to the fundamental was last updated"
        }
      }
    },
    "HistoricalData": {
      "type": "object",
      "description": "A historcial value for the identifier/item combination a specific date",
      "properties": {
        "date": {
          "type": "string",
          "format": "date",
          "description": "The date that the value is present"
        },
        "value": {
          "type": "number",
          "description": "The historical value"
        }
      }
    },
    "IchimokuKinkoHyoTechnicalValue": {
      "type": "object",
      "description": "The date_time, chikou_span, kijun_sen, senkou_span_a, senkou_span_b, and tenkan_sen values of a Ichimoku Kinko Hyo technical indicator calculation",
      "properties": {
        "date_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date_time of the observation"
        },
        "chikou_span": {
          "type": "number",
          "format": "float",
          "description": "The Chikou Span (Lagging Span) value of the Ichimoku Kinko Hyo calculation"
        },
        "kijun_sen": {
          "type": "number",
          "format": "float",
          "description": "The Kijun-sen (Base Line) value of the Ichimoku Kinko Hyo calculation"
        },
        "senkou_span_a": {
          "type": "number",
          "format": "float",
          "description": "The Senkou Span A (Leading Span A) value of the Ichimoku Kinko Hyo calculation"
        },
        "senkou_span_b": {
          "type": "number",
          "format": "float",
          "description": "The Senkou Span B (Leading Span B) value of the Ichimoku Kinko Hyo calculation"
        },
        "tenkan_sen": {
          "type": "number",
          "format": "float",
          "description": "The Tenskan-sen (Conversion Line) value of the Ichimoku Kinko Hyo calculation"
        }
      }
    },
    "IndexInterval": {
      "type": "object",
      "description": "Open, close, high, low, volume, average price, and change ratio for a particular interval",
      "properties": {
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp that represents the start of the interval span."
        },
        "open": {
          "type": "number",
          "description": "The first traded price during the period",
          "nullable": true,
          "x-nullable": true
        },
        "close": {
          "type": "number",
          "description": "The last traded price during the period",
          "nullable": true,
          "x-nullable": true
        },
        "high": {
          "type": "number",
          "description": "The highest price over the span of the period",
          "nullable": true,
          "x-nullable": true
        },
        "low": {
          "type": "number",
          "description": "The lowest price over the span of the period",
          "nullable": true,
          "x-nullable": true
        },
        "close_time": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp that represents the end of the interval span."
        },
        "interval": {
          "type": "string",
          "description": "The size of the interval.",
          "enum": [
            "SixtyMinute",
            "ThirtyMinute",
            "FifteenMinute",
            "TenMinute",
            "FiveMinute",
            "OneMinute"
          ]
        },
        "average": {
          "type": "number",
          "description": "The average trade price of an individual stock during the interval.",
          "nullable": true,
          "x-nullable": true
        },
        "change": {
          "type": "number",
          "description": "The change ratio from open to close.  ((Close - Open)/Open).",
          "nullable": true,
          "x-nullable": true
        }
      }
    },
    "InsiderTransaction": {
      "type": "object",
      "description": "A transaction where the owner is considered an insider of that company. Criteria for being an insider include being a director, officer, or 10%+ owner in the company. Transactions are detailed for both non-derivative and derivative transactions by the insider.",
      "properties": {
        "director": {
          "type": "boolean",
          "description": "(true/false) A boolean indicating whether or not the owner is a director in the company"
        },
        "officer": {
          "type": "boolean",
          "description": "(true/false) A boolean indicating whether or not the owner is a officer in the company"
        },
        "ten_percent_owner": {
          "type": "boolean",
          "description": "(true/false) A boolean indicating whether or not the owner has a ten percent or greater interest in the company"
        },
        "other_relation": {
          "type": "boolean",
          "description": "(true/false) A boolean indicating whether or not the owner has another relationship with the company beside, direct, officer, or significant owner in the company"
        },
        "officer_title": {
          "type": "string",
          "description": "The officer title of the owner in the company"
        },
        "derivative_transaction": {
          "type": "boolean",
          "description": "(true) A boolean indicating the transaction is a derivative transaction, which may or may not become common stock due to various possible exercise or conversion requirements"
        },
        "ticker": {
          "type": "string",
          "description": "The ticker symbol for the company’s common stock"
        },
        "security_title": {
          "type": "string",
          "description": "The name of the derivative security transacted"
        },
        "conversion_exercise_price": {
          "type": "number",
          "description": "The conversion or exercise price of the derivative security transacted"
        },
        "transaction_date": {
          "type": "string",
          "format": "date",
          "description": "The date of the transaction"
        },
        "deemed_execution_date": {
          "type": "string",
          "format": "date",
          "description": "The date of the transaction had it not a directly identifiable date"
        },
        "transaction_type_code": {
          "type": "string",
          "description": "A symbol representing the transaction type; P = Purchase | S = Sale | A  = Award | M = Conversion to Common | C = Conversion | X = Exercise of Derivative More Transaction Codes"
        },
        "acquisition_disposition_code": {
          "type": "string",
          "description": "A symbol representing whether or not the derivative securities are Acquired or Disposed; A = Acquisition | D = Disposition"
        },
        "amount_of_shares": {
          "type": "number",
          "description": "The number of derivative securities involved in the subject transaction"
        },
        "exercise_date": {
          "type": "string",
          "format": "date",
          "description": "The exercise date of the derivative securities"
        },
        "expiration_date": {
          "type": "string",
          "format": "date",
          "description": "The expiration date of the derivative securities"
        },
        "underlying_security_title": {
          "type": "string",
          "description": "The name of the underlying non-derivative security related to this derivative transaction"
        },
        "underlying_shares": {
          "type": "number",
          "description": "The number of non-derivative shares involved in the subject transaction"
        },
        "transaction_price": {
          "type": "number",
          "description": "The price of the derivative securities"
        },
        "total_shares_owned": {
          "type": "number",
          "description": "The total number of derivative securities owned following the subject transaction"
        },
        "ownership_type_code": {
          "type": "string",
          "description": "A symbol representing the ownership of the securities transacted; D = Direct Ownership | I = Indirect Ownership"
        },
        "company": {
          "type": "object",
          "description": "The company associated with the filing",
          "$ref": "#/definitions/CompanySummary"
        },
        "owner": {
          "type": "object",
          "description": "The owner associated with the filing",
          "$ref": "#/definitions/OwnerSummary"
        }
      }
    },
    "InsiderTransactionFiling": {
      "type": "object",
      "description": "An insider transaction SEC filing and its associated transactions",
      "properties": {
        "filing_date": {
          "type": "string",
          "format": "date",
          "description": "The date of the filing with the SEC made by the owner"
        },
        "filing_url": {
          "type": "string",
          "description": "The URL of the filing with the SEC"
        },
        "issuer_ticker": {
          "type": "string",
          "description": "The ticker of the issuing company."
        },
        "issuer_cik": {
          "type": "string",
          "description": "The Central Index Key (CIK) of the issuing company."
        },
        "issuer_company": {
          "type": "string",
          "description": "The name of the issuing company."
        },
        "transactions": {
          "type": "array",
          "description": "The insider transactions associated with the filing",
          "items": {
            "$ref": "#/definitions/InsiderTransaction"
          }
        },
        "company": {
          "type": "object",
          "description": "The company associated with the filing",
          "$ref": "#/definitions/CompanySummary"
        },
        "owner": {
          "type": "object",
          "description": "The owner associated with the filing",
          "$ref": "#/definitions/OwnerSummary"
        }
      }
    },
    "InstitutionalHolding": {
      "type": "object",
      "description": "A single institutional holding for an owner.",
      "properties": {
        "cusip": {
          "type": "string",
          "description": "The CUSIP number for the security report by the Institutional Owner"
        },
        "ticker": {
          "type": "string",
          "description": "The ticker symbol for the security"
        },
        "security_name": {
          "type": "string",
          "description": "The name of the security"
        },
        "security_type": {
          "type": "string",
          "description": "The type of the security"
        },
        "title_of_class": {
          "type": "string",
          "description": "The class of stock held"
        },
        "stock_exchange": {
          "type": "string",
          "description": "The stock exchange where the security is traded"
        },
        "period_ended": {
          "type": "string",
          "format": "date",
          "description": "The date of the latest 13-F filing on record with the SEC."
        },
        "filing_date": {
          "type": "string",
          "format": "date",
          "description": "The date when the filing was submitted to the SEC by the company"
        },
        "value": {
          "type": "number",
          "description": "The market value in amount of dollars of the holding in the listed security"
        },
        "amount": {
          "type": "number",
          "description": "The number of shares held in the listed security"
        },
        "type": {
          "type": "string",
          "description": "Shares"
        },
        "investment_discretion": {
          "type": "string",
          "description": "Segregate the holdings of securities of a class according to the nature of the investment discretion held by the Manager."
        },
        "other_manager": {
          "type": "string",
          "description": "A code for other managerial authority of the securities listed"
        },
        "sole_voting_authority": {
          "type": "number",
          "description": "The number of shares where the insitutional holder has sole voting authority"
        },
        "shared_voting_authority": {
          "type": "number",
          "description": "The number of shares where the insitutional holder has shared voting authority"
        },
        "no_voting_authority": {
          "type": "number",
          "description": "The number of shares where the insitutional holder has no voting authority"
        }
      }
    },
    "InstitutionalOwnership": {
      "type": "object",
      "description": "The amount of a company's available stock owned by mutual or pension funds, insurance companies, investment firms, private foundations, endowments or other large entities that manage funds on behalf of others.",
      "properties": {
        "owner_cik": {
          "type": "string",
          "description": "The Central Index Key issued by the SEC, which is the unique identifier all owner filings"
        },
        "owner_name": {
          "type": "string",
          "description": "The name of the institutional owner"
        },
        "period_ended": {
          "type": "string",
          "format": "date",
          "description": "The date of the latest 13-F filing on record with the SEC."
        },
        "value": {
          "type": "number",
          "description": "The market value in amount of dollars of the holding in the listed security"
        },
        "amount": {
          "type": "number",
          "description": "The number of shares held in the listed security"
        },
        "sole_voting_authority": {
          "type": "number",
          "description": "The number of shares where the insitutional holder has sole voting authority"
        },
        "shared_voting_authority": {
          "type": "number",
          "description": "The number of shares where the insitutional holder has shared voting authority"
        },
        "no_voting_authority": {
          "type": "number",
          "description": "The number of shares where the insitutional holder has no voting authority"
        },
        "previous_amount": {
          "type": "number",
          "description": "The prior quarter number of shares held by the owner"
        },
        "amount_change": {
          "type": "number",
          "description": "The change in number of shares held from the prior quarter"
        },
        "amount_percent_change": {
          "type": "number",
          "description": "The percentage change in the number of shares held from the prior quarter"
        }
      }
    },
    "KeltnerChannelTechnicalValue": {
      "type": "object",
      "description": "The date_time, lower_band, middle_band, and upper_band values of a Keltner Channel technical indicator calculation",
      "properties": {
        "date_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date_time of the observation"
        },
        "lower_band": {
          "type": "number",
          "format": "float",
          "description": "The lower band value of the Keltner Channel calculation"
        },
        "middle_band": {
          "type": "number",
          "format": "float",
          "description": "The middle band value of the Keltner Channel calculation"
        },
        "upper_band": {
          "type": "number",
          "format": "float",
          "description": "The upper band value of the Keltner Channel calculation"
        }
      }
    },
    "KnowSureThingTechnicalValue": {
      "type": "object",
      "description": "The date_time and kst values of a Know Sure Thing technical indicator calculation",
      "properties": {
        "date_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date_time of the observation"
        },
        "kst": {
          "type": "number",
          "format": "float",
          "description": "The Know Sure Thing calculation value"
        }
      }
    },
    "MarketStatusResult": {
      "type": "object",
      "description": "Returns the open status of NYSE.",
      "properties": {
        "timestamp": {
          "type": "string",
          "description": "The UTC timestamp.",
          "format": "date-time"
        },
        "is_open": {
          "type": "boolean",
          "description": "Whether the market is open or not."
        }
      }
    },
    "MassIndexTechnicalValue": {
      "type": "object",
      "description": "The date_time and mi values of a Mass Index technical indicator calculation",
      "properties": {
        "date_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date_time of the observation"
        },
        "mi": {
          "type": "number",
          "format": "float",
          "description": "The Mass Index calculation value"
        }
      }
    },
    "MoneyFlowIndexTechnicalValue": {
      "type": "object",
      "description": "The date_time and mfi value of a Money Flow Index technical indicator calculation",
      "properties": {
        "date_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date_time of the observation"
        },
        "mfi": {
          "type": "number",
          "format": "float",
          "description": "The Money Flow Index calculation value"
        }
      }
    },
    "MovingAverageConvergenceDivergenceTechnicalValue": {
      "type": "object",
      "description": "The date_time, macd_histogram, macd_line, and signal_line values of a Moving Average Convergence Divergence technical indicator calculation",
      "properties": {
        "date_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date_time of the observation"
        },
        "macd_histogram": {
          "type": "number",
          "format": "float",
          "description": "The histogram value of the Moving Average Convergence Divergence calculation"
        },
        "macd_line": {
          "type": "number",
          "format": "float",
          "description": "The line value of the Moving Average Convergence Divergence calculation"
        },
        "signal_line": {
          "type": "number",
          "format": "float",
          "description": "The signal line value of the Moving Average Convergence Divergence calculation"
        }
      }
    },
    "Municipality": {
      "type": "object",
      "description": "A local Municipality",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Intrinio ID for Municipality"
        },
        "census_id": {
          "type": "number",
          "description": "The ID for the census"
        },
        "government_name": {
          "type": "string",
          "description": "The government name of the Municipality"
        },
        "government_type": {
          "type": "string",
          "description": "The type of government of the Municipality"
        },
        "primary_contact_type": {
          "type": "string",
          "description": "The primary contact type of the Municipality"
        },
        "address1": {
          "type": "string",
          "description": "The first line of the address"
        },
        "address2": {
          "type": "string",
          "description": "The second line of the address (i.e. suite number)"
        },
        "city": {
          "type": "string",
          "description": "The city in which the Municipality is located in"
        },
        "state": {
          "type": "string",
          "description": "The state in which the Municipality is located in"
        },
        "zip": {
          "type": "string",
          "description": "The zip code in which the Municipality is located in"
        },
        "web_site": {
          "type": "string",
          "description": "The web site of the Municipality"
        },
        "population": {
          "type": "number",
          "description": "The population of the Municipality"
        },
        "population_as_of_year": {
          "type": "number",
          "description": "The year from which the population of the Municipality was measured"
        },
        "enrollment": {
          "type": "number",
          "description": "The enrollment of the Municipality"
        },
        "enrollment_as_of_year": {
          "type": "number",
          "description": "The year from which the enrollment of the Municipality was measured"
        },
        "area_name": {
          "type": "string",
          "description": "The name of the area of the Municipality"
        },
        "area_type": {
          "type": "string",
          "description": "The type of area of the Municipality"
        },
        "latitude": {
          "type": "number",
          "format": "float",
          "description": "The latitude of the location of the Municipality"
        },
        "longitude": {
          "type": "number",
          "format": "float",
          "description": "The longitude of the location of the Municipality"
        }
      }
    },
    "MunicipalityFinancial": {
      "type": "object",
      "description": "Financial statement data for a Municipality and a Fiscal Year",
      "properties": {
        "fiscal_year": {
          "type": "number",
          "description": "The fiscal year from which the financial data came from"
        },
        "current_assets": {
          "type": "number",
          "description": "Government-wide holdings that can be liquidated on short notice"
        },
        "non_current_assets": {
          "type": "number",
          "description": "Government-wide holdings not intended for near-term liquidation"
        },
        "deferred_outflows": {
          "type": "number",
          "description": "Government-wide consumptions of net position applicable to a future year"
        },
        "total_assets": {
          "type": "number",
          "description": "Government-wide holdings"
        },
        "total_assets_plus_deferred_outflows": {
          "type": "number",
          "description": "Sum of government-wide total assets and deferred outflows of resources"
        },
        "current_liabilities": {
          "type": "number",
          "description": "Government-wide liabilities that typically become due within one year"
        },
        "current_portion_of_long_term_debt": {
          "type": "number",
          "description": "Government-wide portion of long term obligations, such as bond and loan debt coming due within the next year"
        },
        "net_pension_liability": {
          "type": "number",
          "description": "Government-wide liability for employee pensions net of the fiduciary net position of pension plans in which the government has an interest"
        },
        "net_opeb_liability": {
          "type": "number",
          "description": "Government-wide liability for other postemployment benefits (OPEB). These are benefits (such as death benefits, life insurance, disability, and long-term care) that are paid in the period after employment and that are provided separately from a pension plan, as well as healthcare benefits paid in the period after employment, regardless of the manner in which they are provided. OPEB does not include termination benefits or termination payments for sick leave. Liability is reported net of any OPEB assets the government may control."
        },
        "all_other_long_term_debt": {
          "type": "number",
          "description": "Government-wide liabilities not elsewhere classified"
        },
        "total_liabilities": {
          "type": "number",
          "description": "The sum of the Municipality's all other long term debt, net open liability, net pension liability, and current portion of long term debt"
        },
        "deferred_inflows": {
          "type": "number",
          "description": "Government-wide acquisitions of net position applicable to a future year"
        },
        "total_liabilities_plus_deferred_inflows": {
          "type": "number",
          "description": "Sum of government-wide liabilities and deferred inflows of resources"
        },
        "total_net_position": {
          "type": "number",
          "description": "Government-wide assets and deferred outflows less government-wide liabilities and deferred inflows"
        },
        "total_unrestricted_net_position": {
          "type": "number",
          "description": "Net amount of government-wide assets, deferred outflows of resources, liabilities, and deferred inflows of resources that are not included in the determination of net investment in capital assets or the restricted components of net position"
        },
        "total_expenses": {
          "type": "number",
          "description": "Decreases in net position that occurred during the past year, government-wide"
        },
        "charges_for_services": {
          "type": "number",
          "description": "Charges for services is the term used for a broad category of program revenues that arise from charges to customers, applicants, or others who purchase, use, or directly benefit from the goods, services, or privileges provided, or are otherwise directly affected by the services. Revenues in this category include fees charged for specific services, such as water use or garbage collection; licenses and permits, such as dog licenses, liquor licenses, and building permits; operating special assessments, such as for street cleaning or special street lighting; and any other amounts charged to service recipients. Fines and forfeitures are also included in this category because they result from direct charges to those who are otherwise directly affected by a program or service, even though they receive no benefit. Payments from other governments for goods or services should be reported in this category."
        },
        "operating_grants_and_contributions": {
          "type": "number",
          "description": "Program-specific grants and contributions - includes revenues arising from mandatory and voluntary nonexchange transactions with other governments, organizations, or individuals that are restricted for use in a particular program. Some grants and contributions consist of capital assets or resources that are restricted for capital purposes—to purchase, construct, or renovate capital assets associated with a specific program. These should be reported separately from grants and contributions that may be used either for operating expenses or for capital expenditures of the program at the discretion of the reporting government. These categories of program revenue are specifically attributable to a program and reduce the net expense of that program to the reporting government. For example, a state may provide an operating grant to a county sheriff's department for a drug-awareness-and-enforcement program."
        },
        "capital_grants_and_contributions": {
          "type": "number",
          "description": "Program-specific grants and contributions - includes revenues arising from mandatory and voluntary nonexchange transactions with other governments, organizations, or individuals that are restricted for use in a particular program. Some grants and contributions consist of capital assets or resources that are restricted for capital purposes—to purchase, construct, or renovate capital assets associated with a specific program. These should be reported separately from grants and contributions that may be used either for operating expenses or for capital expenditures of the program at the discretion of the reporting government. These categories of program revenue are specifically attributable to a program and reduce the net expense of that program to the reporting government. For example, a state may provide a capital grant to finance construction of a new jail."
        },
        "general_revenues": {
          "type": "number",
          "description": "All revenues are general revenues unless they are required to be reported as program revenues. All taxes, even those that are levied for a specific purpose, are general revenues and should be reported by type of tax—for example, sales tax, property tax, franchise tax, income tax. All other nontax revenues (including interest, grants, and contributions) that do not meet the criteria to be reported as program revenues should also be reported as general revenues. General revenues should be reported after total net expense of the government's functions."
        },
        "other_revenues": {
          "type": "number",
          "description": "Government-wide revenues not elsewhere classified"
        },
        "total_revenues": {
          "type": "number",
          "description": "Increases in net position that occurred during the past year, government-wide"
        },
        "change_in_net_assets": {
          "type": "number",
          "description": "Difference between the government's net position at the end of the fiscal year and the government's net position at the beginning of the fiscal year"
        },
        "non_spendable_general_fund_balance": {
          "type": "number",
          "description": "The portion of general fund balance classified as nonspendable. The nonspendable fund balance classification includes amounts that cannot be spent because they are either (a) not in spendable form or (b) legally or contractually required to be maintained intact. The “not in spendable form” criterion includes items that are not expected to be converted to cash, for example, inventories and prepaid amounts. It also includes the long-term amount of loans and notes receivable, as well as property acquired for resale. However, if the use of the proceeds from the collection of those receivables or from the sale of those properties is restricted, committed, or assigned, then they should be included in the appropriate fund balance classification (restricted, committed, or assigned), rather than nonspendable fund balance. The corpus (or principal) of a permanent fund is an example of an amount that is legally or contractually required to be maintained intact."
        },
        "restricted_general_fund_balance": {
          "type": "number",
          "description": "The portion of general fund balance classified as restricted. Fund balance should be reported as restricted when constraints placed on the use of resources are either (a) Externally imposed by creditors (such as through debt covenants), grantors, contributors, or laws or regulations of other governments or (b) Imposed by law through constitutional provisions or enabling legislation."
        },
        "committed_general_fund_balance": {
          "type": "number",
          "description": "The portion of general fund balance classified as committed. Amounts that can only be used for specific purposes pursuant to constraints imposed by formal action of the government’s highest level of decision-making authority should be reported as committed fund balance. Those committed amounts cannot be used for any other purpose unless the government removes or changes the specified use by taking the same type of action (for example, legislation, resolution, ordinance) it employed to previously commit those amounts. The authorization specifying the purposes for which amounts can be used should have the consent of both the legislative and executive branches of the government, if applicable. Committed fund balance also should incorporate contractual obligations to the extent that existing resources in the fund have been specifically committed for use in satisfying those contractual requirements."
        },
        "unassigned_general_fund_balance": {
          "type": "number",
          "description": "The portion of general fund balance classified as unassigned. Unassigned fund balance is the residual classification for the general fund. This classification represents fund balance that has not been assigned to other funds and that has not been restricted, committed, or assigned to specific purposes within the general fund. The general fund should be the only fund that reports a positive unassigned fund balance amount. In other governmental funds, if expenditures incurred for specific purposes exceeded the amounts restricted, committed, or assigned to those purposes, it may be necessary to report a negative unassigned fund balance."
        },
        "assigned_general_fund_balance": {
          "type": "number",
          "description": "The portion of general fund balance classified as assigned. Amounts that are constrained by the government’s intent to be used for specific purposes, but are neither restricted nor committed, should be reported as assigned fund balance, except for stabilization arrangements.. Intent should be expressed by (a) the governing body itself or (b) a body (a budget or finance committee, for example) or official to which the governing body has delegated the authority to assign amounts to be used for specific purposes."
        },
        "total_general_fund_balance": {
          "type": "number",
          "description": "General fund balance in all classifications. Fund balance is the difference between governmental fund assets and deferred outflows of resources, and liabilities and deferred inflows of resources. It is sometimes referred to as fund equity. The general fund is used to account for and report all financial resources not accounted for and reported in another governmental fund."
        },
        "non_spendable_governmental_fund_balance": {
          "type": "number",
          "description": "For all governmental funds, the aggregate of fund balances that are classified as nonspendable. The nonspendable fund balance classification includes amounts that cannot be spent because they are either (a) not in spendable form or (b) legally or contractually required to be maintained intact. The “not in spendable form” criterion includes items that are not expected to be converted to cash, for example, inventories and prepaid amounts. It also includes the long-term amount of loans and notes receivable, as well as property acquired for resale. However, if the use of the proceeds from the collection of those receivables or from the sale of those properties is restricted, committed, or assigned, then they should be included in the appropriate fund balance classification (restricted, committed, or assigned), rather than nonspendable fund balance."
        },
        "restricted_governmental_fund_balance": {
          "type": "number",
          "description": "For all governmental funds, the aggregate of fund balances that are classified as restricted. Fund balance should be reported as restricted when constraints placed on the use of resources are either (a) Externally imposed by creditors (such as through debt covenants), grantors, contributors, or laws or regulations of other governments; or (b) Imposed by law through constitutional provisions or enabling legislation."
        },
        "committed_governmental_fund_balance": {
          "type": "number",
          "description": "For all governmental funds, the aggregate of fund balances that are classified as committed. Amounts that can only be used for specific purposes pursuant to constraints imposed by formal action of the government’s highest level of decision-making authority should be reported as committed fund balance. Those committed amounts cannot be used for any other purpose unless the government removes or changes the specified use by taking the same type of action (for example, legislation, resolution, ordinance) it employed to previously commit those amounts. The authorization specifying the purposes for which amounts can be used should have the consent of both the legislative and executive branches of the government, if applicable. Committed fund balance also should incorporate contractual obligations to the extent that existing resources in the fund have been specifically committed for use in satisfying those contractual requirements."
        },
        "unassigned_governmental_fund_balance": {
          "type": "number",
          "description": "For all governmental funds, the aggregate of fund balances that are classified as unassigned. Unassigned fund balance is the residual classification for the general fund. This classification represents fund balance that has not been assigned to other funds and that has not been restricted, committed, or assigned to specific purposes within the general fund. The general fund should be the only fund that reports a positive unassigned fund balance amount. In other governmental funds, if expenditures incurred for specific purposes exceeded the amounts restricted, committed, or assigned to those purposes, it may be necessary to report a negative unassigned fund balance."
        },
        "assigned_governmental_fund_balance": {
          "type": "number",
          "description": "For all governmental funds, the aggregate of fund balances that are classified as assigned. Amounts that are constrained by the government’s intent to be used for specific purposes, but are neither restricted nor committed, should be reported as assigned fund balance, except for stabilization arrangements.. Intent should be expressed by (a) the governing body itself or (b) a body (a budget or finance committee, for example) or official to which the governing body has delegated the authority to assign amounts to be used for specific purposes."
        },
        "total_governmental_fund_balance": {
          "type": "number",
          "description": "For all governmental funds, the aggregate of all fund balances in any classification. Fund balance is the difference between governmental fund assets and deferred outflows of resources, and liabilities and deferred inflows of resources. It is sometimes referred to as fund equity. Governmental funds are used to account for general government activities that are financed primarily through taxes, intergovernmental revenues, and other nonexchange revenues."
        },
        "general_fund_revenues": {
          "type": "number",
          "description": "Increases in financial resources attributable to the general fund. The general fund is used to account for and report all financial resources not accounted for and reported in another governmental fund."
        },
        "general_fund_expenditures": {
          "type": "number",
          "description": "Decreases in financial resources attributable to the general fund. The general fund is used to account for and report all financial resources not accounted for and reported in another governmental fund."
        },
        "general_fund_revenues_over_under_expenditure": {
          "type": "number",
          "description": "Difference between general fund revenues and expenditures.  If positive, this amount is called a surplus.  If negative, it represents a deficit. The general fund is used to account for and report all financial resources not accounted for and reported in another governmental fund."
        },
        "governmental_fund_revenues": {
          "type": "number",
          "description": "Increases in financial resources attributable to any governmental fund. Governmental funds are used to account for general government activities that are financed primarily through taxes, intergovernmental revenues, and other nonexchange revenues."
        },
        "governmental_fund_expenditures": {
          "type": "number",
          "description": "Decreases in financial resources attributable to any governmental fund. Governmental funds are used to account for general government activities that are financed primarily through taxes, intergovernmental revenues, and other nonexchange revenues."
        },
        "governmental_fund_revenues_over_under_expenditure": {
          "type": "number",
          "description": "Difference between revenues and expenditures attributable to all governmental funds.  If positive, this amount is called a surplus.  If negative, it represents a deficit. Governmental funds are used to account for general government activities that are financed primarily through taxes, intergovernmental revenues, and other nonexchange revenues."
        }
      }
    },
    "NegativeVolumeIndexTechnicalValue": {
      "type": "object",
      "description": "The date_time and nvi values of a Negative Volume Index technical indicator calculation",
      "properties": {
        "date_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date_time of the observation"
        },
        "nvi": {
          "type": "number",
          "format": "float",
          "description": "The Negative Volume Index calculation value"
        }
      }
    },
    "NewsTopic": {
      "type": "object",
      "description": "A news topic",
      "properties": {
        "name": {
          "type": "string",
          "description": "The description of the topic."
        }
      }
    },
    "OnBalanceVolumeMeanTechnicalValue": {
      "type": "object",
      "description": "The date_time and obv_mean values of a On-balance Volume Mean technical indicator calculation",
      "properties": {
        "date_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date_time of the observation"
        },
        "obv_mean": {
          "type": "number",
          "format": "float",
          "description": "The On-balance Volume Mean calculation value"
        }
      }
    },
    "OnBalanceVolumeTechnicalValue": {
      "type": "object",
      "description": "The date_time and obv values of a On-balance Volume technical indicator calculation",
      "properties": {
        "date_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date_time of the observation"
        },
        "obv": {
          "type": "number",
          "format": "float",
          "description": "The On-balance Volume calculation value"
        }
      }
    },
    "Option": {
      "type": "object",
      "description": "An option contract gives the buyer of a contract the right to buy or sell a particular asset at a later date at an agreed upon price.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Intrinio ID for the Option."
        },
        "code": {
          "type": "string",
          "description": "The Intrinio Code for the Option."
        },
        "ticker": {
          "type": "string",
          "description": "The ticker symbol of the Security for the Option."
        },
        "expiration": {
          "type": "string",
          "description": "The date on which the Option expires. The Option becomes invalid after this date and cannot be exercised."
        },
        "strike": {
          "type": "number",
          "description": "The strike price is the fixed price at which a derivative can be exercised, and refers to the price of the derivative’s underlying asset.  In a call option, the strike price is the price at which the option holder can purchase the underlying security.  For a put option, the strike price is the price at which the option holder can sell the underlying security."
        },
        "type": {
          "type": "string",
          "description": "The type of Option (put or call). A put option is an option contract giving the owner the right, but not the obligation, to sell a specified amount of an underlying asset at a specified price before the option's expiration date. A call option gives the holder the right to buy an underlying asset at a specified price, before the option's expiration date."
        }
      }
    },
    "OptionChain": {
      "type": "object",
      "description": "An option chain contains an options contract and corresponding price data for that contract on a given date.",
      "properties": {
        "option": {
          "$ref": "#/definitions/Option"
        },
        "price": {
          "$ref": "#/definitions/OptionPrice"
        }
      }
    },
    "OptionChainEod": {
      "type": "object",
      "description": "An realtime option chain contains an options contract and corresponding price data for that contract on a given date.",
      "properties": {
        "option": {
          "$ref": "#/definitions/OptionEod"
        },
        "prices": {
          "$ref": "#/definitions/OptionPriceEod"
        }
      }
    },
    "OptionChainRealtime": {
      "type": "object",
      "description": "An realtime option chain contains an options contract and corresponding price data for that contract on a given date.",
      "properties": {
        "option": {
          "$ref": "#/definitions/OptionRealtime"
        },
        "price": {
          "$ref": "#/definitions/OptionPriceRealtime"
        },
        "stats": {
          "$ref": "#/definitions/OptionStatsRealtime"
        },
        "extended_price": {
          "$ref": "#/definitions/OptionPriceRealtimeExtended"
        }
      }
    },
    "OptionContractsList": {
      "type": "object",
      "properties": {
        "contracts": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "A220121P00055000",
            "A220121P00057500",
            "A220121P00060000"
          ]
        }
      }
    },
    "OptionEod": {
      "type": "object",
      "description": "An option contract gives the buyer of a contract the right to buy or sell a particular asset at a later date at an agreed upon price.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The Intrinio Code for the Option."
        },
        "ticker": {
          "type": "string",
          "description": "The ticker symbol of the Security for the Option."
        },
        "expiration": {
          "type": "string",
          "description": "The date on which the Option expires. The Option becomes invalid after this date and cannot be exercised."
        },
        "strike": {
          "type": "number",
          "description": "The strike price is the fixed price at which a derivative can be exercised, and refers to the price of the derivative’s underlying asset.  In a call option, the strike price is the price at which the option holder can purchase the underlying security.  For a put option, the strike price is the price at which the option holder can sell the underlying security."
        },
        "type": {
          "type": "string",
          "description": "The type of Option (put or call). A put option is an option contract giving the owner the right, but not the obligation, to sell a specified amount of an underlying asset at a specified price before the option's expiration date. A call option gives the holder the right to buy an underlying asset at a specified price, before the option's expiration date."
        }
      }
    },
    "OptionFactorsRealtime": {
      "type": "object",
      "description": "Realtime factors for calculating stats such as greeks and implied volatility for a specific options contract.",
      "properties": {
        "market_price": {
          "type": "number",
          "description": "The market price of the options contract"
        },
        "underlying_price": {
          "type": "number",
          "description": "The market price of the underlying asset"
        },
        "strike_price": {
          "type": "number",
          "description": "The strike price of the options contract"
        },
        "days_to_expiration": {
          "type": "number",
          "description": "The number of days to expiration"
        },
        "risk_free_interest_rate": {
          "type": "number",
          "description": "The current risk-free interest rate, as measured by the 3-month Treasury Bill rate"
        },
        "dividend_yield": {
          "type": "number",
          "description": "The dividend yield of the underlying asset (if applicable)"
        }
      }
    },
    "OptionImpliedMoveData": {
      "type": "object",
      "description": "The data pertaining to the implied move.",
      "properties": {
        "amount": {
          "type": "number",
          "description": "The amount of the implied move."
        },
        "percentage": {
          "type": "number",
          "description": "The percentage of the implied move."
        }
      }
    },
    "OptionInterval": {
      "type": "object",
      "description": "An options interval data point.",
      "properties": {
        "open_time": {
          "type": "string",
          "description": "The UTC timestamp for the time this interval opened.",
          "format": "date-time"
        },
        "close_time": {
          "type": "string",
          "description": "The UTC timestamp for the time this interval closed.",
          "format": "date-time"
        },
        "open": {
          "type": "number",
          "description": "The first traded contract price in this interval."
        },
        "high": {
          "type": "number",
          "description": "The highest traded contract price in this interval."
        },
        "low": {
          "type": "number",
          "description": "The lowest traded contract price in this interval."
        },
        "close": {
          "type": "number",
          "description": "The last traded contract price in this interval."
        },
        "volume": {
          "type": "number",
          "description": "The volume of contracts traded in this interval."
        },
        "average": {
          "type": "number",
          "description": "The volume weighted average price of contract trades in this interval."
        },
        "change": {
          "type": "number",
          "description": "The ratio of Close minus Open to Open."
        },
        "trade_count": {
          "type": "number",
          "description": "The number of qualified trades executed during the period",
          "nullable": true,
          "x-nullable": true
        }
      }
    },
    "OptionIntervalMover": {
      "type": "object",
      "description": "An options interval data point.",
      "properties": {
        "contract": {
          "type": "string",
          "description": "The option contract for the intervals"
        },
        "change": {
          "type": "number",
          "description": "The ratio of Close minus Open to Open."
        },
        "open": {
          "type": "number",
          "description": "The first traded contract price in this interval."
        },
        "high": {
          "type": "number",
          "description": "The highest traded contract price in this interval."
        },
        "low": {
          "type": "number",
          "description": "The lowest traded contract price in this interval."
        },
        "close": {
          "type": "number",
          "description": "The last traded contract price in this interval."
        },
        "volume": {
          "type": "number",
          "description": "The volume of contracts traded in this interval."
        },
        "average": {
          "type": "number",
          "description": "The volume weighted average price of contract trades in this interval."
        },
        "trade_count": {
          "type": "number",
          "description": "The number of contract trades executed in this interval"
        }
      }
    },
    "OptionIntervalsMoversResult": {
      "type": "object",
      "description": "An options intervals result contains all options intervals corresponding to the provided query.",
      "properties": {
        "open_time": {
          "type": "string",
          "description": "The UTC timestamp for the time this interval opened.",
          "format": "date-time"
        },
        "close_time": {
          "type": "string",
          "description": "The UTC timestamp for the time this interval closed.",
          "format": "date-time"
        },
        "size": {
          "type": "string",
          "enum": [
            "SixtyMinute",
            "ThirtyMinute",
            "FifteenMinute",
            "TenMinute",
            "FiveMinute",
            "OneMinute"
          ],
          "description": "The size of the time span for the interval."
        },
        "intervals": {
          "type": "array",
          "description": "Array of all the intervals in the result.",
          "items": {
            "$ref": "#/definitions/OptionIntervalMover"
          }
        }
      }
    },
    "OptionIntervalsResult": {
      "type": "object",
      "description": "An options intervals result contains all options intervals corresponding to the provided query.",
      "properties": {
        "intervals": {
          "type": "array",
          "description": "Array of all the intervals in the result.",
          "items": {
            "$ref": "#/definitions/OptionInterval"
          }
        },
        "contract": {
          "type": "string",
          "description": "The option contract for the intervals"
        },
        "size": {
          "type": "string",
          "enum": [
            "SixtyMinute",
            "ThirtyMinute",
            "FifteenMinute",
            "TenMinute",
            "FiveMinute",
            "OneMinute"
          ],
          "description": "The size of the time span for the interval."
        }
      }
    },
    "OptionPrice": {
      "type": "object",
      "description": "An option price contains price information for a specific options contract.",
      "properties": {
        "date": {
          "type": "string",
          "description": "The date of the price, in the format YYYY-MM-DD"
        },
        "close": {
          "type": "number",
          "description": "The closing price of the options contract."
        },
        "close_bid": {
          "type": "number",
          "description": "The closing bid price of the options contract."
        },
        "close_ask": {
          "type": "number",
          "description": "The closing ask price of the options contract."
        },
        "volume": {
          "type": "integer",
          "description": "The cumulative volume of this options contract that traded that day."
        },
        "volume_bid": {
          "type": "integer",
          "description": "The cumulative volume of this options contract that traded on the bid price that day."
        },
        "volume_ask": {
          "type": "integer",
          "description": "The cumulative volume of this options contract that traded on the ask price that day."
        },
        "trades": {
          "type": "integer",
          "description": "The number of trades executed that for this options contract on that day."
        },
        "open_interest": {
          "type": "integer",
          "description": "The total number of this options contract that are still open."
        },
        "open_interest_change": {
          "type": "integer",
          "description": "The change in the total number of this options contract that are still open from the previous day."
        },
        "next_day_open_interest": {
          "type": "integer",
          "description": "The total number of this options contract that are still open at the start of the next day."
        },
        "implied_volatility": {
          "type": "number",
          "description": "The estimated volatility of the Security's price. Volatility is a statistical measure of dispersion of returns for the Security. Standard deviation of a Security's returns and a market index is an example of a measurement of volatility. Implied volatility approximates the future value of an option, and the option's current value takes this into consideration."
        },
        "implied_volatility_change": {
          "type": "number",
          "description": "The change in implied volatility for that day."
        },
        "delta": {
          "type": "number",
          "description": "Delta measures the degree to which an options contract is exposed to shifts in the price of the underlying Security. Values of delta range from 0.0 to 1.0 for call options and -1.0 to 0.0 for put options. For example, if a put option has a delta of -0.50, if the price of the underlying Security increases by $1, the price of the put option will decrease by $0.50."
        }
      }
    },
    "OptionPriceBatchRealtime": {
      "type": "object",
      "description": "An realtime option chain contains an options contract and corresponding price data for that contract on a given date.",
      "properties": {
        "price": {
          "$ref": "#/definitions/OptionPriceRealtime"
        },
        "stats": {
          "$ref": "#/definitions/OptionStatsRealtime"
        },
        "option": {
          "$ref": "#/definitions/OptionRealtime"
        },
        "extended_price": {
          "$ref": "#/definitions/OptionPriceRealtimeExtended"
        }
      }
    },
    "OptionPriceEod": {
      "type": "object",
      "description": "An option price contains price information for a specific options contract.",
      "properties": {
        "date": {
          "type": "string",
          "description": "The date of the price, in the format YYYY-MM-DD"
        },
        "close": {
          "type": "number",
          "description": "The closing price of the options contract."
        },
        "close_bid": {
          "type": "number",
          "description": "The closing bid price of the options contract."
        },
        "close_ask": {
          "type": "number",
          "description": "The closing ask price of the options contract."
        },
        "volume": {
          "type": "integer",
          "description": "The cumulative volume of this options contract that traded that day."
        },
        "open": {
          "type": "number",
          "description": "The price at the beginning of the period"
        },
        "open_ask": {
          "type": "number",
          "description": "The ask at the beginning of the period"
        },
        "open_bid": {
          "type": "number",
          "description": "The bid at the beginning of the period"
        },
        "open_interest": {
          "type": "integer",
          "description": "The total number of this options contract that are still open."
        },
        "high": {
          "type": "number",
          "description": "The highest price over the span of the period"
        },
        "low": {
          "type": "number",
          "description": "The highest price over the span of the period"
        },
        "mark": {
          "type": "number",
          "description": "The mid price between the latest bid and ask spread"
        },
        "ask_high": {
          "type": "number",
          "description": "The highest ask over the span of the period"
        },
        "ask_low": {
          "type": "number",
          "description": "The lowest ask over the span of the period"
        },
        "bid_high": {
          "type": "number",
          "description": "The highest bid over the span of the period"
        },
        "bid_low": {
          "type": "number",
          "description": "The lowest bid over the span of the period"
        },
        "implied_volatility": {
          "type": "number",
          "description": "The implied volatility of the contract calculated using the Black-Scholes Model."
        },
        "delta": {
          "type": "number",
          "description": "Delta represents the rate of change between the option's price and a $1 change in the underlying asset's price."
        },
        "gamma": {
          "type": "number",
          "description": "Gamma represents the rate of change between an option's delta and the underlying asset's price."
        },
        "theta": {
          "type": "number",
          "description": "Theta represents the rate of change between the option price and time, or time sensitivity - sometimes known as an option's time decay."
        },
        "vega": {
          "type": "number",
          "description": "Vega represents the rate of change between an option's value and the underlying asset's implied volatility."
        },
        "close_time": {
          "type": "string",
          "format": "date-time",
          "description": "The time of the last trade before close."
        },
        "close_size": {
          "type": "integer",
          "description": "The size of the last trade before close."
        },
        "close_bid_time": {
          "type": "string",
          "format": "date-time",
          "description": "The time of the last bid before close."
        },
        "close_bid_size": {
          "type": "integer",
          "description": "The size of the last bid before close."
        },
        "close_ask_time": {
          "type": "string",
          "format": "date-time",
          "description": "The time of the last ask before close."
        },
        "close_ask_size": {
          "type": "integer",
          "description": "The size of the last ask before close."
        },
        "exercise_style": {
          "type": "string",
          "description": "The exercise style."
        }
      }
    },
    "OptionPriceRealtime": {
      "type": "object",
      "description": "An option price contains price information for a specific options contract.",
      "properties": {
        "last": {
          "type": "number",
          "description": "The price of the last trade"
        },
        "last_size": {
          "type": "integer",
          "description": "The size of the last trade"
        },
        "last_timestamp": {
          "type": "string",
          "description": "The time of the last trade",
          "format": "date-time"
        },
        "volume": {
          "type": "integer",
          "description": "The cumulative volume of this options contract that traded that day."
        },
        "ask": {
          "type": "number",
          "description": "The price of the top ask order"
        },
        "ask_size": {
          "type": "integer",
          "description": "The size of the top ask order"
        },
        "ask_timestamp": {
          "type": "string",
          "description": "The timestamp of the top ask order",
          "format": "date-time"
        },
        "bid": {
          "type": "number",
          "description": "The price of the top bid order"
        },
        "bid_size": {
          "type": "integer",
          "description": "The size of the top bid order"
        },
        "bid_timestamp": {
          "type": "string",
          "description": "The time of the top bid order",
          "format": "date-time"
        },
        "open_interest": {
          "type": "integer",
          "description": "The total number of this options contract that are still open."
        },
        "exercise_style": {
          "type": "string",
          "description": "The exercise style of the option.  (\"A\" = \"American\", \"E\" = \"European\")",
          "enum": [
            "A",
            "E"
          ]
        }
      }
    },
    "OptionPriceRealtimeExtended": {
      "type": "object",
      "description": "An extended option price contains extended price information for a specific options contract.",
      "properties": {
        "bid_open": {
          "type": "number",
          "description": "The price of the bid at open"
        },
        "bid_high": {
          "type": "number",
          "description": "The high bid so far today"
        },
        "bid_low": {
          "type": "number",
          "description": "The low bid so far today"
        },
        "ask_open": {
          "type": "number",
          "description": "The price of the ask at open"
        },
        "ask_high": {
          "type": "number",
          "description": "The high ask so far today"
        },
        "ask_low": {
          "type": "number",
          "description": "The low ask so far today"
        },
        "trade_open": {
          "type": "number",
          "description": "The price of the trade at open"
        },
        "trade_high": {
          "type": "number",
          "description": "The high trade so far today"
        },
        "trade_low": {
          "type": "number",
          "description": "The low trade so far today"
        },
        "ask_close": {
          "type": "number",
          "description": "The price of ask at close today"
        },
        "bid_close": {
          "type": "number",
          "description": "The price of bid at close today"
        },
        "trade_close": {
          "type": "number",
          "description": "The price of the last trade of the day"
        },
        "mark": {
          "type": "number",
          "description": "The mark price"
        }
      }
    },
    "OptionRealtime": {
      "type": "object",
      "description": "An option contract gives the buyer of a contract the right to buy or sell a particular asset at a later date at an agreed upon price.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The Intrinio Code for the Option."
        },
        "ticker": {
          "type": "string",
          "description": "The ticker symbol of the Security for the Option."
        },
        "expiration": {
          "type": "string",
          "description": "The date on which the Option expires. The Option becomes invalid after this date and cannot be exercised.",
          "format": "date"
        },
        "strike": {
          "type": "number",
          "description": "The strike price is the fixed price at which a derivative can be exercised, and refers to the price of the derivative’s underlying asset.  In a call option, the strike price is the price at which the option holder can purchase the underlying security.  For a put option, the strike price is the price at which the option holder can sell the underlying security."
        },
        "type": {
          "type": "string",
          "description": "The type of Option (put or call).",
          "enum": [
            "put",
            "call"
          ]
        }
      }
    },
    "OptionSnapshotGroup": {
      "type": "object",
      "description": "An options snapshot group contains all options snapshot parts for a given point in time.",
      "properties": {
        "time": {
          "type": "string",
          "description": "The UTC timestamp of this snapshot group.",
          "format": "date-time"
        },
        "files": {
          "type": "array",
          "description": "List of all the snapshot parts of this group.",
          "items": {
            "url": {
              "type": "string",
              "description": "The link where the file can be accessed.  Links expire after 24 hours."
            },
            "part": {
              "type": "number",
              "description": "The part number within a snapshot group."
            },
            "size": {
              "type": "number",
              "description": "The size of the file in bytes."
            }
          }
        }
      }
    },
    "OptionSnapshotsResult": {
      "type": "object",
      "description": "An options snapshot result contains all options snapshot groups corresponding to the provided query.",
      "properties": {
        "snapshots": {
          "type": "array",
          "description": "List of all the snapshot groups comprising the queried result.",
          "items": {
            "$ref": "#/definitions/OptionSnapshotGroup"
          }
        }
      }
    },
    "OptionStatsRealtime": {
      "type": "object",
      "description": "Realtime stats such as greeks and implied volatility for a specific options contract.",
      "properties": {
        "implied_volatility": {
          "type": "number",
          "description": "The implied volatility of the contract calculated using the Black-Scholes Model."
        },
        "delta": {
          "type": "number",
          "description": "Delta represents the rate of change between the option's price and a $1 change in the underlying asset's price."
        },
        "gamma": {
          "type": "number",
          "description": "Gamma represents the rate of change between an option's delta and the underlying asset's price."
        },
        "theta": {
          "type": "number",
          "description": "Theta represents the rate of change between the option price and time, or time sensitivity - sometimes known as an option's time decay."
        },
        "vega": {
          "type": "number",
          "description": "Vega represents the rate of change between an option's value and the underlying asset's implied volatility."
        },
        "underlying_price": {
          "type": "number",
          "description": "The most recent trade price of the underlying asset."
        }
      }
    },
    "OptionSyntheticGreeksRealtime": {
      "type": "object",
      "description": "Realtime stats such as greeks and implied volatility for a specific options contract.",
      "properties": {
        "implied_volatility": {
          "type": "number",
          "description": "The implied volatility of the contract calculated using the Black-Scholes Model."
        },
        "delta": {
          "type": "number",
          "description": "Delta represents the rate of change between the option's price and a $1 change in the underlying asset's price."
        },
        "gamma": {
          "type": "number",
          "description": "Gamma represents the rate of change between an option's delta and the underlying asset's price."
        },
        "theta": {
          "type": "number",
          "description": "Theta represents the rate of change between the option price and time, or time sensitivity - sometimes known as an option's time decay."
        },
        "vega": {
          "type": "number",
          "description": "Vega represents the rate of change between an option's value and the underlying asset's implied volatility."
        },
        "synthetic_price": {
          "type": "number",
          "description": "The derived synthetic price of the contract."
        }
      }
    },
    "OptionTrades": {
      "type": "object",
      "description": "A trade.",
      "properties": {
        "contract": {
          "type": "string",
          "description": "The option contract"
        },
        "underlying_symbol": {
          "type": "string",
          "description": "The ticker symbol"
        },
        "timestamp": {
          "type": "string",
          "description": "The UTC timestamp at the time of the trade.",
          "format": "date-time"
        },
        "price": {
          "type": "number",
          "description": "The price of the trade."
        },
        "size": {
          "type": "number",
          "description": "The size of the trade."
        },
        "total_volume": {
          "type": "number",
          "description": "The total volume of the symbol for the day up to the timestamp point in time."
        },
        "ask_price_at_execution": {
          "type": "number",
          "description": "The price of ask quote at the time of the trade."
        },
        "bid_price_at_execution": {
          "type": "number",
          "description": "The price of bid quote at the time of the trade."
        },
        "exchange": {
          "type": "string",
          "description": "The exchange for the trade."
        },
        "conditions": {
          "type": "string",
          "description": "The condition of the trade."
        },
        "sequence_id": {
          "type": "number",
          "description": "The sequential ID for the trade, ordered as temporally received from the exchange."
        }
      }
    },
    "OptionTradesResult": {
      "type": "object",
      "description": "An option trades result contains all trades corresponding to the provided query.",
      "properties": {
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        },
        "source": {
          "type": "string",
          "enum": [
            "realtime",
            "delayed"
          ],
          "description": "The source of the trades."
        },
        "trades": {
          "type": "array",
          "description": "Array of all the trades in this page of the result.",
          "items": {
            "$ref": "#/definitions/OptionTrades"
          }
        }
      }
    },
    "OptionUnusualTrade": {
      "type": "object",
      "description": "A large market order that is broken into a collection of smaller orders to take advantage of all contracts and prices offered across all exchanges.",
      "properties": {
        "symbol": {
          "type": "string",
          "description": "The underlying option security symbol for the trade"
        },
        "timestamp": {
          "type": "string",
          "description": "The UTC timestamp of order placement",
          "format": "date-time"
        },
        "type": {
          "type": "string",
          "description": "The type of unusual trade"
        },
        "total_value": {
          "type": "number",
          "description": "The aggregated value of all option contract premiums included in the trade"
        },
        "total_size": {
          "type": "number",
          "description": "The total number of contracts involved in a single transaction"
        },
        "average_price": {
          "type": "number",
          "description": "The average premium paid per option contract"
        },
        "contract": {
          "type": "string",
          "description": "The option contract symbol"
        },
        "ask_at_execution": {
          "type": "number",
          "description": "Ask price at execution"
        },
        "bid_at_execution": {
          "type": "number",
          "description": "Bid price at execution"
        },
        "sentiment": {
          "type": "string",
          "enum": [
            "bullish",
            "bearish",
            "neutral"
          ],
          "description": "Bullish, Bearish, or Neutral Sentiment is estimated based on whether the trade was executed at the bid, ask, or mark price."
        },
        "underlying_price_at_execution": {
          "type": "number",
          "description": "Price of the underlying security at execution of trade"
        }
      }
    },
    "OptionsAggregate": {
      "type": "object",
      "description": "Total aggregated open interest and volume for the ticker",
      "properties": {
        "ticker": {
          "type": "string",
          "description": "The ticker symbol of the Security for the Option."
        },
        "date": {
          "type": "string",
          "description": "The date of the data."
        },
        "total_open_interest": {
          "type": "integer",
          "format": "int64",
          "description": "Total open interest for the ticker"
        },
        "total_volume": {
          "type": "integer",
          "format": "int64",
          "description": "Total volume for the ticker"
        },
        "total_put_volume": {
          "type": "integer",
          "format": "int64",
          "description": "Total put volume for the ticker"
        },
        "total_call_volume": {
          "type": "integer",
          "format": "int64",
          "description": "Total call volume for the ticker"
        },
        "put_call_volume_ratio": {
          "type": "number",
          "format": "double",
          "description": "Total put volume to total call volume ratio for the ticker"
        },
        "contract_count": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of active contracts for the ticker"
        }
      }
    },
    "OptionsPriceEod": {
      "type": "object",
      "properties": {
        "price": {
          "$ref": "#/definitions/OptionPriceEod"
        },
        "option": {
          "$ref": "#/definitions/OptionEod"
        }
      }
    },
    "Owner": {
      "type": "object",
      "description": "Insider and institutional owners of securities covered by Intrinio",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Intrinio ID for the Owner"
        },
        "company_id": {
          "type": "string",
          "description": "The Intrinio ID for the company for which the Security is issued"
        },
        "owner_cik": {
          "type": "string",
          "description": "The Central Index Key issued by the SEC, which is the unique identifier all owner filings"
        },
        "name": {
          "type": "string",
          "description": "The name of the owner"
        },
        "state": {
          "type": "string",
          "description": "The state in which the owner is located"
        },
        "state_inc": {
          "type": "string",
          "description": "The state in which the owner is incorporated"
        },
        "country_inc": {
          "type": "string",
          "description": "The country in which the owner is incorporated"
        },
        "business_address": {
          "type": "string",
          "description": "The owner's business address"
        },
        "business_phone_no": {
          "type": "string",
          "description": "The owner's business phone number"
        },
        "mailing_address": {
          "type": "string",
          "description": "The owner's mailing address"
        },
        "institutional": {
          "type": "boolean",
          "description": "A boolean to include only insider owners who have filed forms 3, 4, or 5 with the SEC"
        },
        "updated_on": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when the data was last updated."
        },
        "created_on": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when the data was created"
        }
      }
    },
    "OwnerSummary": {
      "type": "object",
      "description": "The summary of an insider and institutional owner of securities covered by Intrinio",
      "properties": {
        "owner_cik": {
          "type": "string",
          "description": "The Central Index Key issued by the SEC, which is the unique identifier all owner filings"
        },
        "owner_name": {
          "type": "string",
          "description": "The name of the owner"
        }
      }
    },
    "RealtimeIndexPrice": {
      "type": "object",
      "description": "The realtime price of an index.",
      "properties": {
        "last_price": {
          "type": "number",
          "description": "The last price"
        },
        "last_time": {
          "type": "string",
          "description": "The timestamp of the last price",
          "format": "date-time"
        },
        "index": {
          "type": "object",
          "description": "The name of the Index",
          "properties": {
            "symbol": {
              "type": "string",
              "description": "The current ticker of the index"
            }
          }
        }
      }
    },
    "RealtimeStockPrice": {
      "type": "object",
      "description": "The realtime stock price of a security.",
      "properties": {
        "last_price": {
          "type": "number",
          "description": "The price of the last trade."
        },
        "last_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when the last trade occurred."
        },
        "last_size": {
          "type": "number",
          "description": "The size of the last trade."
        },
        "bid_price": {
          "type": "number",
          "description": "The price of the top bid order."
        },
        "bid_size": {
          "type": "number",
          "description": "The size of the top bid order."
        },
        "bid_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when the last bid occurred."
        },
        "ask_price": {
          "type": "number",
          "description": "The price of the top ask order."
        },
        "ask_size": {
          "type": "number",
          "description": "The size of the top ask order."
        },
        "ask_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when the last ask occurred."
        },
        "open_price": {
          "type": "number",
          "description": "The price at the open of the trading day."
        },
        "close_price": {
          "type": "number",
          "description": "The price at the close of the trading day. (IEX only)"
        },
        "high_price": {
          "type": "number",
          "description": "The high price for the trading day."
        },
        "low_price": {
          "type": "number",
          "description": "The low price for the trading day."
        },
        "exchange_volume": {
          "type": "number",
          "description": "The number of shares exchanged during the trading day on the exchange."
        },
        "market_volume": {
          "type": "number",
          "description": "The number of shares exchanged during the trading day for the whole market."
        },
        "updated_on": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when the data was last updated."
        },
        "eod_close_price": {
          "type": "number",
          "description": "The previous trading session's closing price."
        },
        "eod_close_date": {
          "type": "string",
          "format": "date",
          "description": "The date of the previous trading session's closing price."
        },
        "normal_market_hours_last_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time of the last trade that qualifies for last price consideration during normal market hours according to exchange rules on trade conditions."
        },
        "normal_market_hours_last_price": {
          "type": "number",
          "description": "The price of the last that qualifies for last price consideration during normal market hours according to exchange rules on trade conditions."
        },
        "normal_market_hours_last_size": {
          "type": "number",
          "description": "The size of the last trade that qualifies for last price consideration during normal market hours according to exchange rules on trade conditions."
        },
        "qualified_last_price": {
          "type": "number",
          "description": "The price of the last trade that qualifies for last price consideration according to exchange rules on trade conditions."
        },
        "qualified_last_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time of the last trade that qualifies for last price consideration according to exchange rules on trade conditions."
        },
        "qualified_last_size": {
          "type": "number",
          "description": "The size of the last trade that qualifies for last price consideration according to exchange rules on trade conditions."
        },
        "source": {
          "type": "string",
          "description": "The source of the data."
        },
        "listing_venue": {
          "type": "string",
          "description": "The listing venue where the trade took place. Available only where source is SIP. Listing Venue Modifiers include: Q – Nasdaq | N – NYSE | A – NYSE American | P – NYSE Arca | u – Other OTC Markets | V – Investors Exchange LLC\n"
        },
        "sales_conditions": {
          "type": "string",
          "description": "When applicable, indicates any sales condition modifiers associated with the trade. Sales Condition Modifers include: @ – Regular Sale | A – Acquisition | B – Bunched Trade | C – Cash Sale | D – Distribution | E – Placeholder | F – Intermarket Sweep | G – Bunched Sold Trade  | H – Priced Variation Trade | I – Odd Lot Trade | K – Rule 155 Trade (AMEX) | L – Sold Last | M – Market Center Official Close | N – Next Day | O – Opening Prints  | P – Prior Reference Price | Q – Market Center Official Open | R – Seller | S – Split Trade | T – Form T | U – Extended Trading Hours (Sold Out of Sequence)  | V – Contingent Trade | W – Average Price Trade | X – Cross/Periodic Auction Trade | Y – Yellow Flag Regular Trade | Z – Sold (Out of Sequence)  | 1 – Stopped Stock (Regular Trade) | 4 – Derivatively Priced | 5 – Re-Opening Prints | 6 – Closing Prints | 7 – Qualified Contingent Trade (QCT)  | 8 – Placeholder for 611 Exempt | 9 – Corrected Consolidated Close (Per Listing Market)\n"
        },
        "quote_conditions": {
          "type": "string",
          "description": "When applicable, indicates any quote condition modifiers associated with the trade. Quote Condition Modifiers include: R – Regular | A – Slow on Ask | – Slow on Bid | C – Closing | D – News Dissemination | F – Slow on ASK (LRP or Gap Quote)  | E – Slow on Bid (LRP or Gap Quote) | G – Trading Range Indication | H – Slow on Bid and Ask | I – Order Imbalance  |  J – Due to Related - News Dissemination | K – Due to Related - News Pending | O – Open | L – Closed  | M – Volatility Trading Pause | N – Non-Firm Quote | O – Opening | P – News Pending | S – Due to Related  | T – Resume | U – Slow on Bid and Ask (LRP or Gap Quote) | V – In View of Common | W – Slow on Bid and Ask (LRP or Gap Quote)  | X – Equipment Changeover | Y – Sub-Penny Trading | Z – No Open / No Resume | F – Fast Trading | U – Slow on Bid and Ask (Non-Firm)  | One-Sided – One-Sided | X – Order Influx | 0 – Special Opening Quote | Halted – Halted | Benchmark – Benchmark | Implied – Implied  | Exchange Best – Exchange Best | 1 – Market Wide Circuit Breaker Level 1 | 2 – Market Wide Circuit Breaker Level 2  | 3 – Market Wide Circuit Breaker Level 3 | Rotation – Rotation | Auto Exec Eligible – Auto Exec Eligible | Bid Side Firm – Bid Side Firm  | Ask Side Firm – Ask Side Firm | 4 – On Demand Intraday Auction | I – Indicative Value (OPRA) | 45 – Additional Information Required (CTS)  | 46 – Regulatory Concern (CTS) | 47 – Merger Effective | 49 – Corporate Action (CTS) | 50 – New Security Offering (CTS)  | 51 – Intraday Indicative Value Unavailable (CTS)\n"
        },
        "market_center_code": {
          "type": "string",
          "description": "The market center character code."
        },
        "is_darkpool": {
          "type": "boolean",
          "description": "Whether or not the current trade is from a darkpool or not."
        },
        "security": {
          "type": "object",
          "description": "The Security of the stock price",
          "properties": {
            "id": {
              "type": "string",
              "description": "The Intrinio ID for Security"
            },
            "ticker": {
              "type": "string",
              "description": "The common/local ticker of the Security"
            },
            "exchange_ticker": {
              "type": "string",
              "description": "The exchange-level ticker"
            },
            "figi": {
              "type": "string",
              "description": "The OpenFIGI identifier"
            },
            "composite_figi": {
              "type": "string",
              "description": "The country-composite OpenFIGI identifier"
            }
          }
        }
      }
    },
    "RelativeStrengthIndexTechnicalValue": {
      "type": "object",
      "description": "The date_time and rsi values of a Relative Strength Index technical indicator calculation",
      "properties": {
        "date_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date_time of the observation"
        },
        "rsi": {
          "type": "number",
          "format": "float",
          "description": "The Relative Strength Index calculation value"
        }
      }
    },
    "ReportedFinancial": {
      "type": "object",
      "description": "A financial statement fact as-reported, directly from the financial statements of the XBRL filings from the company.",
      "properties": {
        "xbrl_tag": {
          "$ref": "#/definitions/ReportedTag"
        },
        "value": {
          "type": "number",
          "description": "The value reported for the XBRL Tag within the scope of the Fundamental"
        },
        "dimensions": {
          "type": "array",
          "description": "The combination of XBRL axis and members that defines the dimensionalization of this fact (if any)",
          "items": {
            "$ref": "#/definitions/ReportedFinancialDimension"
          }
        }
      }
    },
    "ReportedFinancialDimension": {
      "type": "object",
      "description": "An axis-member combination related to a reported XBRL fact, which denotes a facet of an XBRL dimension.",
      "properties": {
        "axis": {
          "type": "string",
          "description": "The axis of the dimension"
        },
        "member": {
          "type": "string",
          "description": "The member of the axis"
        }
      }
    },
    "ReportedTag": {
      "type": "object",
      "description": "An XBRL tag as-reported by the company on the as-reported financial statement",
      "properties": {
        "tag": {
          "type": "string",
          "description": "The tag code"
        },
        "name": {
          "type": "string",
          "description": "The tag name"
        },
        "balance": {
          "type": "string",
          "description": "Whether the tag represents a credit or debit"
        },
        "unit": {
          "type": "string",
          "description": "The unit of the tag"
        },
        "abstract": {
          "type": "boolean",
          "description": "If true, the tag is an abstract and does not represent a nominal value"
        },
        "sequence": {
          "type": "integer",
          "description": "The vertical sequence of the tag when displayed in the financial statement"
        },
        "depth": {
          "type": "integer",
          "description": "The horizontal depth of the tag when displayed in the financial statement"
        }
      }
    },
    "SICIndex": {
      "type": "object",
      "description": "An Index representing a Standard Industrial Classification (SIC) code.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Intrinio ID for the Index"
        },
        "symbol": {
          "type": "string",
          "description": "The symbol used to identify the Index"
        },
        "name": {
          "type": "string",
          "description": "The name of the Index"
        },
        "continent": {
          "type": "string",
          "description": "The continent of the country of focus for the Index"
        },
        "country": {
          "type": "string",
          "description": "The country of focus for the Index"
        }
      }
    },
    "Security": {
      "type": "object",
      "description": "A financial instrument representing shares of ownership in a publicly-traded company",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Intrinio ID for the Security"
        },
        "company_id": {
          "type": "string",
          "description": "The Intrinio ID for the company for which the Security is issued"
        },
        "name": {
          "type": "string",
          "description": "The name of the Security"
        },
        "type": {
          "type": "string",
          "description": "The Security's type"
        },
        "code": {
          "type": "string",
          "description": "A 2-3 digit code classifying the Security (<a href=\"https://docs.intrinio.com/documentation/security_codes\" target=\"_blank\">reference</a>)"
        },
        "share_class": {
          "type": "string",
          "description": "The Security's share class (if applicable)"
        },
        "currency": {
          "type": "string",
          "description": "The currency in which the Security is traded on the exchange"
        },
        "round_lot_size": {
          "type": "number",
          "description": "The normal unit of trading"
        },
        "ticker": {
          "type": "string",
          "description": "The common ticker"
        },
        "exchange_ticker": {
          "type": "string",
          "description": "The exchange-level ticker"
        },
        "composite_ticker": {
          "type": "string",
          "description": "The country-composite ticker"
        },
        "alternate_tickers": {
          "type": "array",
          "description": "Alternate formats of the common ticker",
          "items": {
            "type": "string"
          }
        },
        "figi": {
          "type": "string",
          "description": "The exchange-level OpenFIGI identifier"
        },
        "cik": {
          "type": "string",
          "description": "Central Index Key issued by the SEC, which is the unique identifier for all owner filings"
        },
        "composite_figi": {
          "type": "string",
          "description": "The country-composite OpenFIGI identifier"
        },
        "share_class_figi": {
          "type": "string",
          "description": "The global-composite OpenFIGI identifier"
        },
        "figi_uniqueid": {
          "type": "string",
          "description": "The OpenFIGI unique ID"
        },
        "active": {
          "type": "boolean",
          "description": "If true, the Security is active and has been recently traded"
        },
        "etf": {
          "type": "boolean",
          "description": "If true, this Security is an ETF"
        },
        "delisted": {
          "type": "boolean",
          "description": "If true, the Security is no longer traded on the exchange"
        },
        "primary_listing": {
          "type": "boolean",
          "description": "If true, the Security is the primary issue for the company, otherwise it is a secondary issue on a secondary stock exchange"
        },
        "primary_security": {
          "type": "boolean",
          "description": "If true, the Security is considered by Intrinio to be the primary Security for its company"
        },
        "first_stock_price": {
          "type": "string",
          "format": "date",
          "description": "The date of the first recorded stock price"
        },
        "last_stock_price": {
          "type": "string",
          "format": "date",
          "description": "The date of the last recorded stock price (or the most recent trading day)"
        },
        "last_stock_price_adjustment": {
          "type": "string",
          "format": "date",
          "description": "The date of the last stock price adjustment (dividend, split, etc)"
        },
        "last_corporate_action": {
          "type": "string",
          "format": "date",
          "description": "The date of the last corporate action"
        },
        "previous_tickers": {
          "type": "array",
          "description": "Previous tickers used by this security",
          "items": {
            "type": "string"
          }
        },
        "listing_exchange_mic": {
          "type": "string",
          "description": "The MIC code of the exchange on which this security primarily trades"
        }
      }
    },
    "SecurityHistory": {
      "type": "object",
      "description": "A security ticker name history.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Intrinio ID for the Security"
        },
        "ticker": {
          "type": "string",
          "description": "The common ticker"
        },
        "name": {
          "type": "string",
          "description": "The name of the Security"
        },
        "security_code": {
          "type": "string",
          "description": "A 2-3 digit code classifying the Security (<a href=\"https://docs.intrinio.com/documentation/security_codes\" target=\"_blank\">reference</a>)"
        },
        "figi": {
          "type": "string",
          "description": "The exchange-level OpenFIGI identifier"
        },
        "composite_figi": {
          "type": "string",
          "description": "The country-composite OpenFIGI identifier"
        },
        "first_price_date": {
          "type": "string",
          "format": "date",
          "description": "The date of the first recorded stock price"
        },
        "last_price_date": {
          "type": "string",
          "format": "date",
          "description": "The date of the last recorded stock price (or the most recent trading day)"
        }
      }
    },
    "SecurityHistoryListResult": {
      "type": "object",
      "description": "A security history result contains all security ticker history corresponding to the provided query.",
      "properties": {
        "securities": {
          "type": "array",
          "description": "Array of security ticker history.",
          "items": {
            "$ref": "#/definitions/SecurityHistory"
          }
        }
      }
    },
    "SecurityIntervalMover": {
      "type": "object",
      "description": "A security interval data point.",
      "properties": {
        "symbol": {
          "type": "string",
          "description": "The ticker symbol for the interval"
        },
        "change": {
          "type": "number",
          "description": "The ratio of Close minus Open to Open."
        },
        "open": {
          "type": "number",
          "description": "The first traded price in this interval."
        },
        "high": {
          "type": "number",
          "description": "The highest traded price in this interval."
        },
        "low": {
          "type": "number",
          "description": "The lowest traded price in this interval."
        },
        "close": {
          "type": "number",
          "description": "The last traded price in this interval."
        },
        "volume": {
          "type": "number",
          "description": "The volume of shares in this interval."
        },
        "average": {
          "type": "number",
          "description": "The volume weighted average price of trades in this interval."
        },
        "trade_count": {
          "type": "number",
          "description": "The of trades in this interval."
        }
      }
    },
    "SecurityIntervalsMoversResult": {
      "type": "object",
      "description": "An security intervals result contains all security intervals corresponding to the provided query.",
      "properties": {
        "open_time": {
          "type": "string",
          "description": "The UTC timestamp for the time this interval opened.",
          "format": "date-time"
        },
        "close_time": {
          "type": "string",
          "description": "The UTC timestamp for the time this interval closed.",
          "format": "date-time"
        },
        "size": {
          "type": "string",
          "enum": [
            "SixtyMinute",
            "ThirtyMinute",
            "FifteenMinute",
            "TenMinute",
            "FiveMinute",
            "OneMinute"
          ],
          "description": "The size of the time span for the interval."
        },
        "intervals": {
          "type": "array",
          "description": "Array of all the intervals in the result.",
          "items": {
            "$ref": "#/definitions/SecurityIntervalMover"
          }
        }
      }
    },
    "SecurityReplayFileResult": {
      "type": "object",
      "description": "An security replay file result contains a binary file intended to be replayed in a websocket client. The file contains every event that happened on the websocket for that day and subsource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the file."
        },
        "url": {
          "type": "string",
          "description": "The url where the file may be downloaded."
        },
        "size": {
          "type": "number",
          "description": "The size of the file in bytes."
        }
      }
    },
    "SecurityScreenClause": {
      "type": "object",
      "description": "A conditional clause used tp screen securities",
      "properties": {
        "field": {
          "type": "string",
          "description": "The field to use when screening, such as an Intrinio Data Tag"
        },
        "operator": {
          "type": "string",
          "description": "The logic operator to use when screening",
          "enum": [
            "eq",
            "gt",
            "gte",
            "lt",
            "lte",
            "contains"
          ]
        },
        "value": {
          "type": "string",
          "description": "The value to screen by"
        }
      }
    },
    "SecurityScreenGroup": {
      "type": "object",
      "description": "A group of clauses and groups combined with a logic operator, used to screen securities",
      "properties": {
        "operator": {
          "type": "string",
          "description": "The logic operator for the group (AND, OR, NOT)"
        },
        "clauses": {
          "type": "array",
          "description": "The logic clauses in the group",
          "items": {
            "$ref": "#/definitions/SecurityScreenClause"
          }
        },
        "groups": {
          "type": "array",
          "description": "The nested groups within the group",
          "items": {
            "$ref": "#/definitions/SecurityScreenGroup"
          }
        }
      }
    },
    "SecurityScreenResult": {
      "type": "object",
      "description": "A security that matches the screen and its corresponding screened properties",
      "properties": {
        "security": {
          "type": "object",
          "$ref": "#/definitions/SecuritySummary"
        },
        "data": {
          "type": "array",
          "items": {
            "properties": {
              "tag": {
                "type": "string",
                "description": "The data tag that was screened-for"
              },
              "number_value": {
                "type": "string",
                "description": "The numeric value for the tag"
              },
              "text_value": {
                "type": "string",
                "description": "The text value for the tag"
              }
            }
          }
        }
      }
    },
    "SecuritySnapshotGroup": {
      "type": "object",
      "description": "A security snapshot group contains all security snapshot parts for a given point in time.",
      "properties": {
        "time": {
          "type": "string",
          "description": "The UTC timestamp of this snapshot group.",
          "format": "date-time"
        },
        "files": {
          "type": "array",
          "description": "List of all the snapshot parts of this group.",
          "items": {
            "url": {
              "type": "string",
              "description": "The link where the file can be accessed.  Links expire after 24 hours."
            },
            "part": {
              "type": "number",
              "description": "The part number within a snapshot group."
            },
            "size": {
              "type": "number",
              "description": "The size of the file in bytes."
            }
          }
        }
      }
    },
    "SecuritySnapshotsResult": {
      "type": "object",
      "description": "A security snapshot result contains all security snapshot groups corresponding to the provided query.",
      "properties": {
        "snapshots": {
          "type": "array",
          "description": "List of all the snapshot groups comprising the queried result.",
          "items": {
            "$ref": "#/definitions/SecuritySnapshotGroup"
          }
        }
      }
    },
    "SecuritySummary": {
      "type": "object",
      "description": "The summary of a financial instrument representing shares of ownership in a publicly-traded company",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Intrinio ID for Security"
        },
        "company_id": {
          "type": "string",
          "description": "The Intrinio ID for the Company for which the Security is issued"
        },
        "exchange": {
          "type": "string",
          "description": "The exchange's MIC"
        },
        "exchange_mic": {
          "type": "string",
          "description": "The security's exchange MIC"
        },
        "stock_exchange_id": {
          "type": "string",
          "description": "The exchange's Intrinio ID"
        },
        "name": {
          "type": "string",
          "description": "The name of the Security"
        },
        "code": {
          "type": "string",
          "description": "A 2-3 digit code classifying the Security (<a href=\"https://docs.intrinio.com/documentation/security_codes\" target=\"_blank\">reference</a>)"
        },
        "currency": {
          "type": "string",
          "description": "The currency in which the Security is traded on the exchange"
        },
        "ticker": {
          "type": "string",
          "description": "The common/local ticker of the Security"
        },
        "composite_ticker": {
          "type": "string",
          "description": "The country-composite ticker of the Security"
        },
        "figi": {
          "type": "string",
          "description": "The OpenFIGI identifier"
        },
        "composite_figi": {
          "type": "string",
          "description": "The country-composite OpenFIGI identifier"
        },
        "share_class_figi": {
          "type": "string",
          "description": "The global-composite OpenFIGI identifier"
        },
        "primary_listing": {
          "type": "boolean",
          "description": "If true, the Security is the primary issue for the company, otherwise it is a secondary issue on a secondary stock exchange"
        }
      }
    },
    "SecurityTrades": {
      "type": "object",
      "description": "A trade.",
      "properties": {
        "symbol": {
          "type": "string",
          "description": "The ticker symbol"
        },
        "timestamp": {
          "type": "string",
          "description": "The UTC timestamp at the time of the trade.",
          "format": "date-time"
        },
        "price": {
          "type": "number",
          "description": "The price of the trade."
        },
        "size": {
          "type": "number",
          "description": "The size of the trade."
        },
        "total_volume": {
          "type": "number",
          "description": "The total volume of the symbol for the day up to the timestamp point in time."
        },
        "market_center": {
          "type": "string",
          "description": "The market center for the trade."
        },
        "condition": {
          "type": "string",
          "description": "The condition of the trade."
        },
        "is_darkpool": {
          "type": "boolean",
          "description": "If the trade was darkpool or not."
        }
      }
    },
    "SecurityTradesResult": {
      "type": "object",
      "description": "An security trades result contains all trades corresponding to the provided query.",
      "properties": {
        "next_page": {
          "type": "string",
          "description": "The token required to request the next page of the data. If null, no further results are available."
        },
        "source": {
          "type": "string",
          "enum": [
            "iex",
            "delayed_sip",
            "utp_delayed",
            "cta_a_delayed",
            "cta_b_delayed",
            "otc_delayed",
            "nasdaq_basic",
            "cboe_one_delayed",
            "iex_delayed"
          ],
          "description": "The source of the trades."
        },
        "trades": {
          "type": "array",
          "description": "Array of all the trades in this page of the result.",
          "items": {
            "$ref": "#/definitions/SecurityTrades"
          }
        }
      }
    },
    "SimpleMovingAverageTechnicalValue": {
      "type": "object",
      "description": "The date_time and sma values of a Simple Moving Average technical indicator calculation",
      "properties": {
        "date_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date_time of the observation"
        },
        "sma": {
          "type": "number",
          "format": "float",
          "description": "The Simple Moving Average calculation value"
        }
      }
    },
    "StandardizedFinancial": {
      "type": "object",
      "description": "Professional-grade historical financial data for a Company. This data is standardized, cleansed and verified to ensure the highest quality data sourced directly from the XBRL financial statements. The primary purpose of standardized financials are to facilitate comparability across a single company’s fundamentals and across all companies fundamentals. For example, it is possible to compare total revenues between two companies as of a certain point in time, or within a single company across multiple time periods. This is not possible using the as-reported financial statements because of the inherent complexity of reporting standards.",
      "properties": {
        "data_tag": {
          "$ref": "#/definitions/DataTagSummary"
        },
        "value": {
          "type": "number",
          "description": "The value for the Data Tag within the scope of the Fundamental"
        }
      }
    },
    "StandardizedFinancialsDimension": {
      "type": "object",
      "description": "An axis-member combination related to a reported XBRL fact, which denotes a facet of an XBRL dimension.",
      "properties": {
        "dimension": {
          "type": "string",
          "description": "The title of the dimension"
        },
        "value": {
          "type": "string",
          "description": "The value of the dimension"
        }
      }
    },
    "StochasticOscillatorTechnicalValue": {
      "type": "object",
      "description": "The date_time, sr, and sr_signal values of a Stochastic Oscillator technical indicator calculation",
      "properties": {
        "date_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date_time of the observation"
        },
        "sr": {
          "type": "number",
          "format": "float",
          "description": "The Stochastic Oscillator calculation value"
        },
        "sr_signal": {
          "type": "number",
          "format": "float",
          "description": "The Stochastic Oscillator signal line value"
        }
      }
    },
    "StockExchange": {
      "type": "object",
      "description": "An organized and regulated financial market in which securities are bought and sold.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Intrinio ID for the Stock Exchange"
        },
        "name": {
          "type": "string",
          "description": "The name of the exchange"
        },
        "mic": {
          "type": "string",
          "description": "The Market Identifier Code (MIC) of the exchange"
        },
        "acronym": {
          "type": "string",
          "description": "The acronym of the exchange's name"
        },
        "city": {
          "type": "string",
          "description": "The city in which the exchange is located"
        },
        "country": {
          "type": "string",
          "description": "The country in which the exchange is located"
        },
        "country_code": {
          "type": "string",
          "description": "The 2-digit code of the exchange's country"
        },
        "website": {
          "type": "string",
          "description": "The website of the exchange"
        },
        "first_stock_price_date": {
          "type": "string",
          "format": "date",
          "description": "The earliest date for which Intrinio has stock prices for the exchange"
        },
        "last_stock_price_date": {
          "type": "string",
          "format": "date",
          "description": "The latest date for which Intrinio has stock prices for the exchange"
        }
      }
    },
    "StockExchangeMover": {
      "type": "object",
      "description": "An security intervals result contains all security intervals corresponding to the provided query.",
      "properties": {
        "security_id": {
          "type": "string",
          "description": "The Intrinio Identifier for this security."
        },
        "ticker": {
          "type": "string",
          "description": "The ticker symbol for this security."
        },
        "last_price": {
          "type": "number",
          "description": "The last price of the last trade."
        },
        "change": {
          "type": "number",
          "description": "The raw change in price."
        },
        "percent_change": {
          "type": "number",
          "description": "The percent change in price."
        },
        "market_volume": {
          "type": "number",
          "description": "The market volume for the most recent (today) trading day."
        },
        "source": {
          "type": "string",
          "description": "The source of the data."
        }
      }
    },
    "StockMarketIndex": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Intrinio ID for the Index"
        },
        "symbol": {
          "type": "string",
          "description": "The symbol used to identify the Index"
        },
        "name": {
          "type": "string",
          "description": "The name of the Index"
        },
        "continent": {
          "type": "string",
          "description": "The continent of the country of focus for the Index"
        },
        "country": {
          "type": "string",
          "description": "The country of focus for the Index"
        },
        "update_frequency": {
          "type": "string",
          "description": "How often the Index is updated"
        },
        "last_updated": {
          "type": "string",
          "format": "date-time",
          "description": "When the Index was updated last"
        },
        "description": {
          "type": "string",
          "description": "A paragraph describing the index and its scope"
        },
        "observation_start": {
          "type": "string",
          "format": "date",
          "description": "The earliest date for which data is available"
        },
        "observation_end": {
          "type": "string",
          "format": "date",
          "description": "The latest date for which data is available"
        }
      }
    },
    "StockMarketIndexSummary": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Intrinio ID for the Index"
        },
        "symbol": {
          "type": "string",
          "description": "The symbol used to identify the Index"
        },
        "name": {
          "type": "string",
          "description": "The name of the Index"
        },
        "continent": {
          "type": "string",
          "description": "The continent of the country of focus for the Index"
        },
        "country": {
          "type": "string",
          "description": "The country of focus for the Index"
        },
        "update_frequency": {
          "type": "string",
          "description": "How often the Index is updated"
        },
        "last_updated": {
          "type": "string",
          "format": "date-time",
          "description": "When the Index was updated last"
        },
        "observation_start": {
          "type": "string",
          "format": "date",
          "description": "The earliest date for which data is available"
        },
        "observation_end": {
          "type": "string",
          "format": "date",
          "description": "The latest date for which data is available"
        }
      }
    },
    "StockPrice": {
      "type": "object",
      "description": "The stock price of a security on a given date.",
      "properties": {
        "date": {
          "type": "string",
          "format": "date",
          "description": "The calendar date that the stock price represents. For non-daily stock prices, this represents the last day in the period (end of the week, month, quarter, year, etc)"
        },
        "intraperiod": {
          "type": "boolean",
          "description": "If true, the stock price represents an unfinished period (be it day, week, quarter, month, or year), meaning that the close price is the latest price available, not the official close price for the period"
        },
        "frequency": {
          "type": "string",
          "description": "The type of period that the stock price represents",
          "enum": [
            "daily",
            "weekly",
            "monthly",
            "quarterly",
            "yearly"
          ]
        },
        "open": {
          "type": "number",
          "description": "The price at the beginning of the period"
        },
        "high": {
          "type": "number",
          "description": "The highest price over the span of the period"
        },
        "low": {
          "type": "number",
          "description": "The lowest price over the span of the period"
        },
        "close": {
          "type": "number",
          "description": "The price at the end of the period"
        },
        "volume": {
          "type": "number",
          "description": "The number of shares exchanged during the period"
        },
        "adj_open": {
          "type": "number",
          "description": "The price at the beginning of the period, adjusted for splits and dividends"
        },
        "adj_high": {
          "type": "number",
          "description": "The highest price over the span of the period, adjusted for splits and dividends"
        },
        "adj_low": {
          "type": "number",
          "description": "The lowest price over the span of the period, adjusted for splits and dividends"
        },
        "adj_close": {
          "type": "number",
          "description": "The price at the end of the period, adjusted for splits and dividends"
        },
        "adj_volume": {
          "type": "number",
          "description": "The number of shares exchanged during the period, adjusted for splits and dividends"
        },
        "factor": {
          "type": "number",
          "description": "The factor by which to multiply stock prices before this date, in order to calculate historically-adjusted stock prices."
        },
        "split_ratio": {
          "type": "number",
          "description": "The ratio of the stock split, if a stock split occurred."
        },
        "dividend": {
          "type": "number",
          "description": "The dividend amount, if a dividend was paid."
        },
        "change": {
          "type": "number",
          "description": "The difference in price from the last price for this frequency"
        },
        "percent_change": {
          "type": "number",
          "description": "The percent difference in price from the last price for this frequency"
        },
        "fifty_two_week_high": {
          "type": "number",
          "description": "The 52 week high price (daily only)"
        },
        "fifty_two_week_low": {
          "type": "number",
          "description": "The 52 week low price (daily only)"
        },
        "security": {
          "type": "object",
          "description": "The Security of the stock price",
          "$ref": "#/definitions/SecuritySummary"
        }
      }
    },
    "StockPriceAdjustment": {
      "type": "object",
      "description": "A stock price adjustment for a security on a given day, most frequently representing a split and/or dividend.",
      "properties": {
        "date": {
          "type": "string",
          "format": "date",
          "description": "The date on which the adjustment occurred. The adjustment should be applied to all stock prices before this date."
        },
        "factor": {
          "type": "number",
          "description": "The factor by which to multiply stock prices before this date, in order to calculate historically-adjusted stock prices."
        },
        "dividend": {
          "type": "number",
          "description": "The dividend amount, if a dividend was paid."
        },
        "dividend_currency": {
          "type": "string",
          "description": "The currency of the dividend, if known."
        },
        "split_ratio": {
          "type": "number",
          "description": "The ratio of the stock split, if a stock split occurred."
        },
        "security": {
          "type": "object",
          "description": "The Security of the stock price",
          "$ref": "#/definitions/SecuritySummary"
        }
      }
    },
    "StockPriceAdjustmentSummary": {
      "type": "object",
      "description": "A stock price adjustment for a security on a given day, most frequently representing a split and/or dividend.",
      "properties": {
        "date": {
          "type": "string",
          "format": "date",
          "description": "The date on which the adjustment occurred. The adjustment should be applied to all stock prices before this date."
        },
        "factor": {
          "type": "number",
          "description": "The factor by which to multiply stock prices before this date, in order to calculate historically-adjusted stock prices."
        },
        "dividend": {
          "type": "number",
          "description": "The dividend amount, if a dividend was paid."
        },
        "dividend_currency": {
          "type": "string",
          "description": "The currency of the dividend, if known."
        },
        "split_ratio": {
          "type": "number",
          "description": "The ratio of the stock split, if a stock split occurred."
        }
      }
    },
    "StockPriceInterval": {
      "type": "object",
      "description": "Open, close, high, low, volume, average price, and change ratio for a particular interval",
      "properties": {
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp that represents the start of the interval span."
        },
        "open": {
          "type": "number",
          "description": "The first traded price during the period",
          "nullable": true,
          "x-nullable": true
        },
        "close": {
          "type": "number",
          "description": "The last traded price during the period",
          "nullable": true,
          "x-nullable": true
        },
        "high": {
          "type": "number",
          "description": "The highest price over the span of the period",
          "nullable": true,
          "x-nullable": true
        },
        "low": {
          "type": "number",
          "description": "The lowest price over the span of the period",
          "nullable": true,
          "x-nullable": true
        },
        "volume": {
          "type": "number",
          "description": "The number of shares exchanged during the period",
          "nullable": true,
          "x-nullable": true
        },
        "close_time": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp that represents the end of the interval span."
        },
        "interval": {
          "type": "string",
          "description": "The size of the interval.",
          "enum": [
            "SixtyMinute",
            "ThirtyMinute",
            "FifteenMinute",
            "TenMinute",
            "FiveMinute",
            "OneMinute"
          ]
        },
        "average": {
          "type": "number",
          "description": "The average trade price of an individual stock during the interval.",
          "nullable": true,
          "x-nullable": true
        },
        "change": {
          "type": "number",
          "description": "The change ratio from open to close.  ((Close - Open)/Open).",
          "nullable": true,
          "x-nullable": true
        },
        "bid_high": {
          "type": "number",
          "description": "The highest bid price from the interval.",
          "nullable": true,
          "x-nullable": true
        },
        "bid_low": {
          "type": "number",
          "description": "The lowest bid price from the interval.",
          "nullable": true,
          "x-nullable": true
        },
        "bid_close": {
          "type": "number",
          "description": "The last bid price from the interval.",
          "nullable": true,
          "x-nullable": true
        },
        "bid_open": {
          "type": "number",
          "description": "The first bid price from the interval.",
          "nullable": true,
          "x-nullable": true
        },
        "bid_first_time": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp that represents the first bid time from the interval span.",
          "nullable": true,
          "x-nullable": true
        },
        "bid_last_time": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp that represents the last bid time from the interval span.",
          "nullable": true,
          "x-nullable": true
        },
        "bid_change_percent": {
          "type": "number",
          "description": "The ratio of the close to open bid difference, in percent.",
          "nullable": true,
          "x-nullable": true
        },
        "ask_high": {
          "type": "number",
          "description": "The highest ask price from the interval.",
          "nullable": true,
          "x-nullable": true
        },
        "ask_low": {
          "type": "number",
          "description": "The lowest ask price from the interval.",
          "nullable": true,
          "x-nullable": true
        },
        "ask_close": {
          "type": "number",
          "description": "The last ask price from the interval.",
          "nullable": true,
          "x-nullable": true
        },
        "ask_open": {
          "type": "number",
          "description": "The first ask price from the interval.",
          "nullable": true,
          "x-nullable": true
        },
        "ask_first_time": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp that represents the first ask time from the interval span.",
          "nullable": true,
          "x-nullable": true
        },
        "ask_last_time": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp that represents the last ask time from the interval span.",
          "nullable": true,
          "x-nullable": true
        },
        "ask_change_percent": {
          "type": "number",
          "description": "The ratio of the close to open ask difference, in percent.",
          "nullable": true,
          "x-nullable": true
        },
        "trade_count": {
          "type": "number",
          "description": "The number of qualified trades executed during the period",
          "nullable": true,
          "x-nullable": true
        }
      }
    },
    "StockPriceSummary": {
      "type": "object",
      "description": "The summary of a stock price for a security on a given date.",
      "properties": {
        "date": {
          "type": "string",
          "format": "date",
          "description": "The calendar date that the stock price represents. For non-daily stock prices, this represents the last day in the period (end of the week, month, quarter, year, etc)"
        },
        "intraperiod": {
          "type": "boolean",
          "description": "If true, the stock price represents an unfinished period (be it day, week, quarter, month, or year), meaning that the close price is the latest price available, not the official close price for the period"
        },
        "frequency": {
          "type": "string",
          "description": "The type of period that the stock price represents",
          "enum": [
            "daily",
            "weekly",
            "monthly",
            "quarterly",
            "yearly"
          ]
        },
        "open": {
          "type": "number",
          "description": "The price at the beginning of the period"
        },
        "high": {
          "type": "number",
          "description": "The highest price over the span of the period"
        },
        "low": {
          "type": "number",
          "description": "The lowest price over the span of the period"
        },
        "close": {
          "type": "number",
          "description": "The price at the end of the period"
        },
        "volume": {
          "type": "number",
          "description": "The number of shares exchanged during the period"
        },
        "adj_open": {
          "type": "number",
          "description": "The price at the beginning of the period, adjusted for splits and dividends"
        },
        "adj_high": {
          "type": "number",
          "description": "The highest price over the span of the period, adjusted for splits and dividends"
        },
        "adj_low": {
          "type": "number",
          "description": "The lowest price over the span of the period, adjusted for splits and dividends"
        },
        "adj_close": {
          "type": "number",
          "description": "The price at the end of the period, adjusted for splits and dividends"
        },
        "adj_volume": {
          "type": "number",
          "description": "The number of shares exchanged during the period, adjusted for splits and dividends"
        },
        "factor": {
          "type": "number",
          "description": "The factor by which to multiply stock prices before this date, in order to calculate historically-adjusted stock prices."
        },
        "split_ratio": {
          "type": "number",
          "description": "The ratio of the stock split, if a stock split occurred."
        },
        "dividend": {
          "type": "number",
          "description": "The dividend amount, if a dividend was paid."
        },
        "change": {
          "type": "number",
          "description": "The difference in price from the last price for this frequency"
        },
        "percent_change": {
          "type": "number",
          "description": "The percent difference in price from the last price for this frequency"
        },
        "fifty_two_week_high": {
          "type": "number",
          "description": "The 52 week high price (daily only)"
        },
        "fifty_two_week_low": {
          "type": "number",
          "description": "The 52 week low price (daily only)"
        }
      }
    },
    "TechnicalIndicator": {
      "type": "object",
      "description": "The name and symbol of the Technical Indicator",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the Technical Indicator"
        },
        "symbol": {
          "type": "string",
          "description": "The symbol of the Technical Indicator"
        }
      }
    },
    "TheaEntityAnswer": {
      "type": "object",
      "description": "An answer object returned by Thea in response to a query about a specific entity",
      "properties": {
        "answer": {
          "type": "string",
          "description": "The summarized answer returned from Thea"
        },
        "content": {
          "type": "string",
          "description": "The underlying content the answer was sourced from"
        },
        "source_documents": {
          "type": "array",
          "description": "The documents from which Thea answer data is sourced",
          "items": {
            "$ref": "#/definitions/TheaSourceDocument"
          }
        }
      }
    },
    "TheaSourceDocument": {
      "type": "object",
      "description": "Document from which Thea answer data is sourced",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique id for the Thea source document"
        },
        "date_time": {
          "type": "string",
          "format": "date",
          "description": "The date at which the document was created"
        },
        "tags": {
          "type": "array",
          "description": "Entity identifying tags associated with the source document",
          "items": {
            "key": {
              "type": "string",
              "description": "Defintes whether the tag is a key or a value"
            },
            "value": {
              "type": "string",
              "description": "The value of the tag"
            }
          }
        }
      }
    },
    "TripleExponentialAverageTechnicalValue": {
      "type": "object",
      "description": "The date_time and trix values of a Triple Exponential Average technical indicator calculation",
      "properties": {
        "date_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date_time of the observation"
        },
        "trix": {
          "type": "number",
          "format": "float",
          "description": "The Triple Exponential Average calculation value"
        }
      }
    },
    "TrueStrengthIndexTechnicalValue": {
      "type": "object",
      "description": "The date_time and tsi values of a True Strength Index technical indicator calculation",
      "properties": {
        "date_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date_time of the observation"
        },
        "tsi": {
          "type": "number",
          "format": "float",
          "description": "The True Strength Index calculation value"
        }
      }
    },
    "UltimateOscillatorTechnicalValue": {
      "type": "object",
      "description": "The date_time and uo values of a Ultimate Oscillator technical indicator calculation",
      "properties": {
        "date_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date_time of the observation"
        },
        "uo": {
          "type": "number",
          "format": "float",
          "description": "The Ultimate Oscillator calculation value"
        }
      }
    },
    "VolumePriceTrendTechnicalValue": {
      "type": "object",
      "description": "The date_time and vpt values of a Volume-price Trend technical indicator calculation",
      "properties": {
        "date_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date_time of the observation"
        },
        "vpt": {
          "type": "number",
          "format": "float",
          "description": "The Volume-price Trend calculation value"
        }
      }
    },
    "VolumeWeightedAveragePriceValue": {
      "type": "object",
      "description": "The date_time and vwap values of a Volume Weighted Average Price technical indicator calculation",
      "properties": {
        "date_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time of the observation"
        },
        "vwap": {
          "type": "number",
          "format": "float",
          "description": "The Volume Weighted Average Price calculation value"
        }
      }
    },
    "VortexIndicatorTechnicalValue": {
      "type": "object",
      "description": "The date_time, negative_vi, and positive_vi values of a Vortex Indicator technical indicator calculation",
      "properties": {
        "date_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date_time of the observation"
        },
        "negative_vi": {
          "type": "number",
          "format": "float",
          "description": "The negative Vortex Indicator value"
        },
        "positive_vi": {
          "type": "number",
          "format": "float",
          "description": "The positive Vortex Indicator value"
        }
      }
    },
    "WilliamsRTechnicalValue": {
      "type": "object",
      "description": "The date_time and wr values of a Willliams %R technical indicator calculation",
      "properties": {
        "date_time": {
          "type": "string",
          "format": "date-time",
          "description": "The date_time of the observation"
        },
        "wr": {
          "type": "number",
          "format": "float",
          "description": "The Willaims %R calculation value"
        }
      }
    },
    "ZacksAnalystRating": {
      "type": "object",
      "description": "Buy, sell, and hold recommendations from analysts at brokerages for all companies in the Zacks universe. A rating includes data about mean, strong buys, buys, holds, sells, strong sells, and total. Each rating includes metadata about the corresponding Security.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Intrinio ID for the record"
        },
        "date": {
          "type": "string",
          "format": "date",
          "description": "The date of the Zacks Analyst Rating."
        },
        "mean": {
          "type": "number",
          "description": "The mean (average) weighing of analyst recommendations, from 1 (strong buy) to 5 (strong sell)."
        },
        "strong_buys": {
          "type": "integer",
          "description": "The number of analysts recommending Strong Buy."
        },
        "buys": {
          "type": "integer",
          "description": "The number of analysts recommending Buy."
        },
        "holds": {
          "type": "integer",
          "description": "The number of analysts recommending Hold."
        },
        "sells": {
          "type": "integer",
          "description": "The number of analysts recommending Sell."
        },
        "strong_sells": {
          "type": "integer",
          "description": "The number of analysts recommending Strong Sell."
        },
        "total": {
          "type": "integer",
          "description": "The total number of analyst recommendations."
        },
        "security": {
          "description": "The Security of the Zacks Analyst Rating",
          "$ref": "#/definitions/SecuritySummary"
        }
      }
    },
    "ZacksAnalystRatingSnapshot": {
      "type": "object",
      "description": "A snapshot of ratings data compared with previous timeframes. This includes mean percentiles for comparing one security to the universe of securities covered by Zacks analyst ratings, at a specific point in time.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The snapshot type, signifying the age of the ratings data from the snapshot date."
        },
        "snapshot_date": {
          "type": "string",
          "format": "date",
          "description": "The date of the snapshot, when data was recorded."
        },
        "rating_date": {
          "type": "string",
          "format": "date",
          "description": "The date of the latest rating for the snapshot timeframe. This is the effective date of the ratings data."
        },
        "mean": {
          "type": "number",
          "description": "The mean (average) weighing of analyst recommendations, from 1 (strong buy) to 5 (strong sell)."
        },
        "percentile": {
          "type": "number",
          "description": "The percentile of the mean, derived by comparing to all securities rated by analysts as of the rating date, ranging 0.0 (strong buy) to 1.0 (strong sell)."
        },
        "strong_buys": {
          "type": "integer",
          "description": "The number of analysts recommending Strong Buy."
        },
        "buys": {
          "type": "integer",
          "description": "The number of analysts recommending Buy."
        },
        "holds": {
          "type": "integer",
          "description": "The number of analysts recommending Hold."
        },
        "sells": {
          "type": "integer",
          "description": "The number of analysts recommending Sell."
        },
        "strong_sells": {
          "type": "integer",
          "description": "The number of analysts recommending Strong Sell."
        },
        "total": {
          "type": "integer",
          "description": "The total number of analysts recommendations."
        }
      }
    },
    "ZacksAnalystRatingSummary": {
      "type": "object",
      "description": "Buy, sell, and hold recommendations from analysts at brokerages for all companies in the Zacks universe. A rating includes data about mean, strong buys, buys, holds, sells, strong sells, and total.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Intrinio ID for the record"
        },
        "date": {
          "type": "string",
          "format": "date",
          "description": "The date of the Zacks Analyst Rating."
        },
        "mean": {
          "type": "number",
          "description": "The mean (average) weighing of analyst recommendations, from 1 (strong buy) to 5 (strong sell)."
        },
        "strong_buys": {
          "type": "integer",
          "description": "The number of analysts recommending Strong Buy."
        },
        "buys": {
          "type": "integer",
          "description": "The number of analysts recommending Buy."
        },
        "holds": {
          "type": "integer",
          "description": "The number of analysts recommending Hold."
        },
        "sells": {
          "type": "integer",
          "description": "The number of analysts recommending Sell."
        },
        "strong_sells": {
          "type": "integer",
          "description": "The number of analysts recommending Strong Sell."
        },
        "total": {
          "type": "integer",
          "description": "The total number of analyst recommendations."
        }
      }
    },
    "ZacksEBITDAConsensus": {
      "type": "object",
      "description": "Zacks estimates for EBITDA, EBITDA margin, EBIT, Enterprise Value, Cash Flow Per Share, and Pretax Income",
      "properties": {
        "ticker": {
          "type": "string",
          "description": "The Zacks common exchange ticker"
        },
        "company_name": {
          "type": "string",
          "description": "The company name"
        },
        "estimate_year": {
          "type": "number",
          "description": "Fiscal year of the estimate"
        },
        "estimate_month": {
          "type": "number",
          "description": "Fiscal month of the estimate"
        },
        "period": {
          "type": "string",
          "description": "Whether the estimate year and month are fiscal year (fy) or quarter (fq)"
        },
        "consensus_type": {
          "type": "string",
          "description": "The type of estimate (ebitda, ebitda, ebit, enterprise_value, cash_flow_per_share, pretax_income)"
        },
        "updated_date": {
          "type": "date",
          "description": "The date of the most recent estimate"
        },
        "estimate_count": {
          "type": "number",
          "description": "The number of estimates"
        },
        "high": {
          "type": "number",
          "description": "The highest estimate"
        },
        "low": {
          "type": "number",
          "description": "The lowest estimate"
        },
        "mean": {
          "type": "number",
          "description": "The mean value of all estimates"
        },
        "std_dev": {
          "type": "number",
          "description": "The standard deviation of all estimates"
        }
      }
    },
    "ZacksEPSEstimate": {
      "type": "object",
      "description": "Zacks consensus earnings-per-share (EPS) estimates from analysts for thousands of stocks.  Zacks storied research team aggregates and validates the estimates.  Each EPS Estimate includes metadata about the corresponding Company.",
      "properties": {
        "company": {
          "$ref": "#/definitions/CompanySummary",
          "description": null
        },
        "date": {
          "type": "string",
          "format": "date",
          "description": "The period end date"
        },
        "fiscal_year": {
          "type": "integer",
          "description": "The company’s fiscal year for the reported period"
        },
        "fiscal_quarter": {
          "type": "string",
          "description": "The company’s fiscal quarter for the reported period"
        },
        "calendar_year": {
          "type": "integer",
          "description": "The closest calendar year for the company’s fiscal year"
        },
        "calendar_quarter": {
          "type": "string",
          "description": "The closest calendar quarter for the company’s fiscal year"
        },
        "count": {
          "type": "integer",
          "description": "The number of estimates for the period"
        },
        "mean": {
          "type": "number",
          "description": "The earnings per share (EPS) mean estimate for the period"
        },
        "median": {
          "type": "number",
          "description": "The earnings per share (EPS) median estimate for the period"
        },
        "high": {
          "type": "number",
          "description": "The earnings per share (EPS) high estimate for the period"
        },
        "low": {
          "type": "number",
          "description": "The earnings per share (EPS) low estimate for the period"
        },
        "standard_deviation": {
          "type": "number",
          "description": "The earnings per share (EPS) standard deviation estimate for the period"
        },
        "percent_change": {
          "type": "number",
          "description": "The earnings per share (EPS) percent change in estimate for the period"
        },
        "mean_7_days_ago": {
          "type": "number",
          "description": "The long term growth mean estimate - 7 Days Ago"
        },
        "mean_30_days_ago": {
          "type": "number",
          "description": "The long term growth mean estimate - 30 Days Ago"
        },
        "mean_60_days_ago": {
          "type": "number",
          "description": "The long term growth mean estimate - 60 Days Ago"
        },
        "mean_90_days_ago": {
          "type": "number",
          "description": "The long term growth mean estimate - 90 Days Ago"
        }
      }
    },
    "ZacksEPSGrowthRate": {
      "type": "object",
      "description": "Zacks earnings-per-share (EPS) growth rates from analysts for thousands of stocks.  Zacks storied research team aggregates and validates the estimates.  Each Growth Rate includes metadata about the corresponding Company.",
      "properties": {
        "ticker": {
          "type": "string",
          "description": "The Zacks common exchange ticker"
        },
        "company_name": {
          "type": "string",
          "description": "The company name"
        },
        "industry_group_number": {
          "type": "string",
          "description": "The Zacks industry group number"
        },
        "industry_group_name": {
          "type": "string",
          "description": "The Zacks industry group name"
        },
        "fiscal_year_0": {
          "type": "integer",
          "description": "The current fiscal year"
        },
        "fiscal_year_1": {
          "type": "integer",
          "description": "The next fiscal year"
        },
        "fiscal_year_2": {
          "type": "integer",
          "description": "The fiscal year after the next fiscal year"
        },
        "company_last_5_year_actual": {
          "type": "number",
          "description": "The company's last 5 year actual percentage earnings-per-share (EPS) growth rate"
        },
        "company_fiscal_year_1_vs_fiscal_year_0": {
          "type": "number",
          "description": "The company's current fiscal year / last fiscal year percentage earnings-per-share (EPS) growth rate"
        },
        "company_fiscal_year_2_vs_fiscal_year_1": {
          "type": "number",
          "description": "The company's next fiscal year / current fiscal year percentage earnings-per-share (EPS) growth rate"
        },
        "company_long_term_growth_mean": {
          "type": "number",
          "description": "The company's long term growth rate mean estimate"
        },
        "company_fiscal_year_1_forward_price_to_earnings": {
          "type": "number",
          "description": "The company's forward (current fiscal year) price-to-earnings (P/E) ratio"
        },
        "industry_last_5_year_actual": {
          "type": "number",
          "description": "The industry's last 5 year actual percentage earnings-per-share (EPS) growth rate"
        },
        "industry_fiscal_year_1_vs_fiscal_year_0": {
          "type": "number",
          "description": "The industry's current fiscal year / last fiscal year percentage earnings-per-share (EPS) growth rate"
        },
        "industry_fiscal_year_2_vs_fiscal_year_1": {
          "type": "number",
          "description": "The industry's next fiscal year / current fiscal year percentage earnings-per-share (EPS) growth rate"
        },
        "industry_long_term_growth_mean": {
          "type": "number",
          "description": "The industry's long term growth rate mean estimate"
        },
        "industry_fiscal_year_1_forward_price_to_earnings": {
          "type": "number",
          "description": "The industry's forward (current fiscal year) price-to-earnings (P/E) ratio"
        },
        "sp500_last_5_year_actual": {
          "type": "number",
          "description": "The S&P 500's last 5 year actual percentage earnings-per-share (EPS) growth rate"
        },
        "sp500_fiscal_year_1_vs_fiscal_year_0": {
          "type": "number",
          "description": "The S&P 500's current fiscal year / last fiscal year percentage earnings-per-share (EPS) growth rate"
        },
        "sp500_fiscal_year_2_vs_fiscal_year_1": {
          "type": "number",
          "description": "The S&P 500's next fiscal year / current fiscal year percentage earnings-per-share (EPS) growth rate"
        },
        "sp500_long_term_growth": {
          "type": "number",
          "description": "The S&P 500's long term growth rate mean estimate"
        },
        "sp500_fiscal_year_1_price_to_earnings": {
          "type": "number",
          "description": "The S&P 500's forward (current fiscal year) price-to-earnings (P/E) ratio"
        },
        "company": {
          "$ref": "#/definitions/CompanySummary",
          "description": null
        }
      }
    },
    "ZacksEPSSurprise": {
      "type": "object",
      "description": "Zacks EPS Surprises are pre-earnings release consensus EPS estimates from analysts for thousands of stocks. Zack’s storied research team aggregates and validates the estimates and compares these estimates to non-GAAP EPS reported by the company, providing the amount and percent surprise on release. Each EPS Surprise includes metadata about the corresponding Security.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Intrinio ID for the record"
        },
        "fiscal_year": {
          "type": "number",
          "description": "The company’s fiscal year for the reported period"
        },
        "fiscal_quarter": {
          "type": "string",
          "description": "The company’s fiscal quarter for the reported period"
        },
        "calendar_year": {
          "type": "number",
          "description": "The closest calendar year for the company’s fiscal year"
        },
        "calendar_quarter": {
          "type": "string",
          "description": "The closest calendar quarter for the company’s fiscal year"
        },
        "actual_reported_date": {
          "type": "string",
          "format": "date",
          "description": "The actual report date for the earnings release"
        },
        "actual_reported_time": {
          "type": "string",
          "description": "The actual report time for the earnings release"
        },
        "actual_reported_code": {
          "type": "string",
          "description": "The code cooresponding to the earnings release  BTO = BEFORE THE OPEN | DTM = DURING THE MARKET | AMC = AFTER MARKET CLOSE"
        },
        "actual_reported_desc": {
          "type": "string",
          "description": "The description for the type of earnings release"
        },
        "eps_actual": {
          "type": "number",
          "description": "The actual Non-GAAP EPS figure released by the company, interpreted by Zacks."
        },
        "eps_actual_zacks_adj": {
          "type": "number",
          "description": "The adjustments Zacks made to get to Non-GAAP EPS to reconcile with GAAP EPS."
        },
        "eps_mean_estimate": {
          "type": "number",
          "description": "The pre-earnings release mean EPS estimate for the company"
        },
        "eps_amount_diff": {
          "type": "number",
          "description": "The EPS surprise amount difference"
        },
        "eps_percent_diff": {
          "type": "number",
          "description": "The EPS surprise percent difference"
        },
        "eps_count_estimate": {
          "type": "number",
          "description": "The pre-earnings release number of estimates by analysts"
        },
        "eps_std_dev_estimate": {
          "type": "number",
          "description": "The pre-earnings release standard deviation of EPS estimates"
        },
        "security": {
          "description": "The Security of the Zacks EPS Surprise",
          "$ref": "#/definitions/SecuritySummary"
        }
      }
    },
    "ZacksEPSSurpriseSummary": {
      "type": "object",
      "description": "Zacks EPS Surprises are pre-earnings release consensus EPS estimates from analysts for thousands of stocks. Zack’s storied research team aggregates and validates the estimates and compares these estimates to non-GAAP EPS reported by the company, providing the amount and percent surprise on release.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Intrinio ID for the record"
        },
        "fiscal_year": {
          "type": "number",
          "description": "The company’s fiscal year for the reported period"
        },
        "fiscal_quarter": {
          "type": "string",
          "description": "The company’s fiscal quarter for the reported period"
        },
        "calendar_year": {
          "type": "number",
          "description": "The closest calendar year for the company’s fiscal year"
        },
        "calendar_quarter": {
          "type": "string",
          "description": "The closest calendar quarter for the company’s fiscal year"
        },
        "actual_reported_date": {
          "type": "string",
          "format": "date",
          "description": "The actual report date for the earnings release"
        },
        "actual_reported_time": {
          "type": "string",
          "description": "The actual report time for the earnings release"
        },
        "actual_reported_code": {
          "type": "string",
          "description": "The code cooresponding to the earnings release  BTO = BEFORE THE OPEN | DTM = DURING THE MARKET | AMC = AFTER MARKET CLOSE"
        },
        "actual_reported_desc": {
          "type": "string",
          "description": "The description for the type of earnings release"
        },
        "eps_actual": {
          "type": "number",
          "description": "The actual Non-GAAP EPS figure released by the company, interpreted by Zacks."
        },
        "eps_actual_zacks_adj": {
          "type": "number",
          "description": "The adjustments Zacks made to get to Non-GAAP EPS to reconcile with GAAP EPS."
        },
        "eps_mean_estimate": {
          "type": "number",
          "description": "The pre-earnings release mean EPS estimate for the company"
        },
        "eps_amount_diff": {
          "type": "number",
          "description": "The EPS surprise amount difference"
        },
        "eps_percent_diff": {
          "type": "number",
          "description": "The EPS surprise percent difference"
        },
        "eps_count_estimate": {
          "type": "number",
          "description": "The pre-earnings release number of estimates by analysts"
        },
        "eps_std_dev_estimate": {
          "type": "number",
          "description": "The pre-earnings release standard deviation of EPS estimates"
        }
      }
    },
    "ZacksETFHolding": {
      "type": "object",
      "description": "Returns detailed information and classifications on exchange traded funds sourced from Zacks.",
      "properties": {
        "etf_ticker": {
          "type": "string",
          "description": "The ETF's common ticker"
        },
        "etf_name": {
          "type": "string",
          "description": "The ETF's name"
        },
        "holding_symbol": {
          "type": "string",
          "description": "The holding's common ticker"
        },
        "holding_name": {
          "type": "string",
          "description": "The holding's name"
        },
        "date_of_holding": {
          "type": "string",
          "format": "date",
          "description": "The date of the holding"
        },
        "shares": {
          "type": "number",
          "description": "The number of shares"
        },
        "weight": {
          "type": "number",
          "description": "The weight of the holding"
        }
      }
    },
    "ZacksForwardPE": {
      "type": "object",
      "description": "Zacks Forward PE Estimates",
      "properties": {
        "ticker": {
          "type": "string",
          "description": "The Zacks common exchange ticker"
        },
        "company_name": {
          "type": "string",
          "description": "The company name"
        },
        "updated_date": {
          "type": "date",
          "description": "The date the esimates were last updated"
        },
        "forward_pe_year1": {
          "type": "number",
          "description": "The forward PE estimate for the first year"
        },
        "forward_pe_year2": {
          "type": "number",
          "description": "The forward PE estimate for the second year"
        },
        "forward_pe_year3": {
          "type": "number",
          "description": "The forward PE estimate for the third year"
        },
        "forward_pe_year4": {
          "type": "number",
          "description": "The forward PE estimate for the fourth year"
        },
        "forward_pe_year5": {
          "type": "number",
          "description": "The forward PE estimate for the fifth year"
        },
        "forward_peg_ratio_year1": {
          "type": "number",
          "description": "The forward PEG ratio for the first year"
        },
        "last_ttm_eps": {
          "type": "number",
          "description": "Trailing twelve months earnings per share"
        }
      }
    },
    "ZacksInstitutionalHolding": {
      "type": "object",
      "description": "Returns a list of all ownership interests and the value of their interests sourced from Zacks.",
      "properties": {
        "company": {
          "type": "object",
          "$ref": "#/definitions/ZacksInstitutionalHoldingCompanySummary"
        },
        "owner": {
          "type": "object",
          "$ref": "#/definitions/ZacksInstitutionalHoldingOwnerSummary"
        },
        "as_of_date": {
          "type": "string",
          "format": "date",
          "description": "Quarter end date listed in the most recent 13F report filed by the institution"
        },
        "shares_held": {
          "type": "number",
          "description": "Number of shares of the stock listed"
        },
        "shared_held_percent": {
          "type": "number",
          "description": "Percent of shares outstanding held of the stock by the institution listed"
        },
        "shares_change": {
          "type": "number",
          "description": "Change in shares of the stock held by the institution listed"
        },
        "shares_change_percent": {
          "type": "number",
          "description": "Percentage change in shares of the stock held by the institution listed"
        },
        "market_value": {
          "type": "number",
          "description": "Market value of shares outstanding held of the stock listed"
        },
        "market_value_change": {
          "type": "number",
          "description": "Change in market value shares of the stock listed"
        },
        "last_sec_filing_type": {
          "type": "string",
          "description": "The report type of the latest SEC filing"
        },
        "last_sec_filing_date": {
          "type": "string",
          "format": "date",
          "description": "The date of the latest SEC filing"
        },
        "last_sec_filing_shares": {
          "type": "number",
          "description": "The"
        },
        "historical_holdings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ZacksInstitutionalHoldingHistoricalSummary"
          }
        }
      }
    },
    "ZacksInstitutionalHoldingCompanyDetail": {
      "type": "object",
      "description": "Returns a list of companies with its shares and positions sourced from Zacks.",
      "properties": {
        "ticker": {
          "type": "string",
          "description": "The Zacks common exchange ticker"
        },
        "name": {
          "type": "string",
          "description": "The company name of the stock listed"
        },
        "exchange": {
          "type": "string",
          "description": "Exhange where the stock is traded whose shares are held by the institution"
        },
        "shares_outstanding": {
          "type": "number",
          "description": "The number of shares shares outstanding for the stock"
        },
        "last_close_price": {
          "type": "number",
          "description": "The last close price of the stock listed"
        },
        "last_close_date": {
          "type": "string",
          "format": "date",
          "description": "Last closing price of the stock listed"
        },
        "institutional_shares_held_percent": {
          "type": "number",
          "description": "Percentage of shares outstanding held by institutions in the stock listed"
        },
        "institutional_shares_buy": {
          "type": "number",
          "description": "Number of shares bought by institutions in the stock listed"
        },
        "institutional_shares_sell": {
          "type": "number",
          "description": "Number of shares sold by institutions in the stock listed"
        },
        "institutional_positions_increase": {
          "type": "number",
          "description": "Number of institutions who increased their shares held in the stock listed"
        },
        "institutional_positions_decrease": {
          "type": "number",
          "description": "Number of institutions who decrease their shares held in the stock listed"
        },
        "institutional_positions_unchanged": {
          "type": "number",
          "description": "Number of institutions who did not change their shares held in the stock listed"
        },
        "institutional_positions_total": {
          "type": "number",
          "description": "Total number of institutions who hold shares in the stock listed"
        }
      }
    },
    "ZacksInstitutionalHoldingCompanySummary": {
      "type": "object",
      "description": "The summary of a company instutionally owned sourced from Zacks.",
      "properties": {
        "ticker": {
          "type": "string",
          "description": "The Zacks common exchange ticker"
        },
        "name": {
          "type": "string",
          "description": "The company name of the stock listed"
        },
        "exchange": {
          "type": "string",
          "description": "Exhange where the stock is traded whose shares are held by the institution"
        }
      }
    },
    "ZacksInstitutionalHoldingHistoricalSummary": {
      "type": "object",
      "description": "Returns number of shares held in previous quarters",
      "properties": {
        "as_of_date": {
          "type": "string",
          "format": "date",
          "description": "The date of the institutional holding"
        },
        "shares_held": {
          "type": "number",
          "description": "The number of shares held"
        }
      }
    },
    "ZacksInstitutionalHoldingOwnerDetail": {
      "type": "object",
      "description": "Returns a list of institutional owners and the value of their interests sourced from Zacks.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The owner's name"
        },
        "cik": {
          "type": "string",
          "description": "The Central Index Key (CIK) assigned to the company by the SEC as a unique identifier, used in SEC filings"
        },
        "address": {
          "type": "string",
          "description": "The owner's address"
        },
        "city_state": {
          "type": "string",
          "description": "The owner's city and state (City, ST)"
        },
        "location_code": {
          "type": "string",
          "description": "The owner's location code. ('D' = Domestic, 'C' = Canadian, 'F' = Foreign)"
        },
        "phone_number": {
          "type": "string",
          "description": "The owner's phone number"
        },
        "postal_code": {
          "type": "string",
          "description": "The owner's postal code"
        },
        "url": {
          "type": "string",
          "description": "The owner's website url"
        },
        "investment_style": {
          "type": "string",
          "description": "The owner's investment style ('I' = Income, 'V' = Value, 'G' = Growth, 'B' =  Growth at a Reasonable Price, 'A' = Aggressive Growth, 'P' = Passive/Index, 'D' = Deep Value)"
        },
        "number_of_holdings": {
          "type": "number",
          "description": "Count of equity holdings only, doesn't include bonds or other funds held"
        },
        "total_holdings_value": {
          "type": "number",
          "description": "Market value of equity holdings in 1,000s. Sum of shares held times last close price."
        },
        "portfolio_turnover_percent": {
          "type": "number",
          "description": "Annual portfolio turnover in terms of percentage of total value."
        },
        "is_fund": {
          "type": "string",
          "description": "If 'Y', the owner is a fund? ('Y' = Yes, 'N' = No)"
        },
        "fund_ticker": {
          "type": "string",
          "description": "Fund ticker if the institution is a fund"
        },
        "has_fund_manager": {
          "type": "string",
          "description": "Does the fund have a manager. ('Y' = Yes, 'N' = No)"
        },
        "fund_manager_city": {
          "type": "string",
          "description": "The fund manager's city"
        },
        "fund_manager_name": {
          "type": "string",
          "description": "The fund manager's name"
        },
        "fund_manager_state": {
          "type": "string",
          "description": "The fund manager's state"
        },
        "files_13f": {
          "type": "string",
          "description": "If 'Y', the company files the SEC 13F report. ('Y' = Yes, 'N' = No)"
        },
        "is_etf": {
          "type": "string",
          "description": "If 'Y', the owner is an ETF. ('Y' = Yes, 'N' = No)"
        },
        "last_updated_on": {
          "type": "string",
          "format": "date",
          "description": "The the last updated date"
        }
      }
    },
    "ZacksInstitutionalHoldingOwnerSummary": {
      "type": "object",
      "description": "The summary of a institutional owner",
      "properties": {
        "name": {
          "type": "string",
          "description": "The owner's name"
        },
        "cik": {
          "type": "string",
          "description": "The Central Index Key (CIK) assigned to the company by the SEC as a unique identifier, used in SEC filings"
        }
      }
    },
    "ZacksLongTermGrowthRate": {
      "type": "object",
      "description": "Zacks long term growth rates from analysts for thousands of stocks.  Zacks storied research team aggregates and validates the estimates.  Each Growth Rate includes metadata about the corresponding Security.",
      "properties": {
        "mean": {
          "type": "number",
          "description": "The mean long term growth estimate"
        },
        "median": {
          "type": "number",
          "description": "The median long term growth estimate"
        },
        "count": {
          "type": "integer",
          "description": "The number of long term growth estimates"
        },
        "high": {
          "type": "number",
          "description": "The high long term growth estimate"
        },
        "low": {
          "type": "number",
          "description": "The low long term growth estimate"
        },
        "std_dev": {
          "type": "string",
          "description": "The standard deviation long term growth estimate"
        },
        "revisions_upward": {
          "type": "integer",
          "description": "The number of long term growth estimate revisions upward"
        },
        "revisions_downward": {
          "type": "integer",
          "description": "The number of long term growth estimate revisions downward"
        },
        "mean_7_days_ago": {
          "type": "string",
          "description": "The mean long term growth estimate 7 days ago"
        },
        "mean_30_days_ago": {
          "type": "string",
          "description": "The mean long term growth estimate 30 days ago"
        },
        "mean_60_days_ago": {
          "type": "string",
          "description": "The mean long term growth estimate 60 days ago"
        },
        "mean_90_days_ago": {
          "type": "string",
          "description": "The mean long term growth estimate 90 days ago"
        },
        "revisions_upward_last_7_days": {
          "type": "string",
          "description": "The number of long term growth estimate revisions upward in the last 7 days"
        },
        "revisions_downward_last_7_days": {
          "type": "string",
          "description": "The number of long term growth estimate revisions downward in the last 7 days"
        },
        "revisions_upward_last_30_days": {
          "type": "string",
          "description": "The number of long term growth estimate revisions upward in the last 30 days"
        },
        "revisions_downward_last_30_days": {
          "type": "string",
          "description": "The number of long term growth estimate revisions downward in the last 30 days"
        },
        "revisions_upward_last_60_days": {
          "type": "string",
          "description": "The number of long term growth estimate revisions upward in the last 60 days"
        },
        "revisions_downward_last_60_days": {
          "type": "string",
          "description": "The number of long term growth estimate revisions downward in the last 60 days"
        },
        "revisions_upward_last_90_days": {
          "type": "string",
          "description": "The number of long term growth estimate revisions upward in the last 90 days"
        },
        "revisions_downward_last_90_days": {
          "type": "string",
          "description": "The number of long term growth estimate revisions downward in the last 90 days"
        },
        "revisions_upward_last_120_days": {
          "type": "string",
          "description": "The number of long term growth estimate revisions upward in the last 120 days"
        },
        "revisions_downward_last_120_days": {
          "type": "string",
          "description": "The number of long term growth estimate revisions downward in the last 120 days"
        },
        "revisions_upward_last_150_days": {
          "type": "string",
          "description": "The number of long term growth estimate revisions upward in the last 150 days"
        },
        "revisions_downward_last_150_days": {
          "type": "string",
          "description": "The number of long term growth estimate revisions downward in the last 150 days"
        },
        "security": {
          "description": "The Security of the Zacks long term growth estimate",
          "$ref": "#/definitions/SecuritySummary"
        }
      }
    },
    "ZacksSalesEstimate": {
      "type": "object",
      "description": "Zacks consensus sales estimates from analysts for thousands of stocks.  Zacks storied research team aggregates and validates the estimates.  Each sales Estimate includes metadata about the corresponding Company.",
      "properties": {
        "company": {
          "$ref": "#/definitions/CompanySummary",
          "description": null
        },
        "date": {
          "type": "string",
          "format": "date",
          "description": "The period end date"
        },
        "fiscal_year": {
          "type": "integer",
          "description": "The company’s fiscal year for the reported period"
        },
        "fiscal_period": {
          "type": "string",
          "description": "The company’s fiscal quarter for the reported period"
        },
        "calendar_year": {
          "type": "integer",
          "description": "The closest calendar year for the company’s fiscal year"
        },
        "calendar_period": {
          "type": "string",
          "description": "The closest calendar quarter for the company’s fiscal year"
        },
        "count": {
          "type": "integer",
          "description": "The number of estimates for the period"
        },
        "mean": {
          "type": "number",
          "description": "The sales estimate mean estimate for the period"
        },
        "median": {
          "type": "number",
          "description": "The sales estimate median estimate for the period"
        },
        "high": {
          "type": "number",
          "description": "The sales estimate high estimate for the period"
        },
        "low": {
          "type": "number",
          "description": "The sales estimate low estimate for the period"
        },
        "standard_deviation": {
          "type": "number",
          "description": "The sales estimate standard deviation estimate for the period"
        },
        "analyst_revisions_percent_change_1w": {
          "type": "number",
          "description": "The analyst revisions percent change in estimate for the period of 1 week."
        },
        "analyst_revisions_up_1w": {
          "type": "number",
          "description": "The analyst revisions going up for the period of 1 week."
        },
        "analyst_revisions_down_1w": {
          "type": "number",
          "description": "The analyst revisions going down for the period of 1 week."
        },
        "analyst_revisions_percent_change_1m": {
          "type": "number",
          "description": "The analyst revisions percent change in estimate for the period of 1 month."
        },
        "analyst_revisions_up_1m": {
          "type": "number",
          "description": "The analyst revisions going up for the period of 1 month."
        },
        "analyst_revisions_down_1m": {
          "type": "number",
          "description": "The analyst revisions going down for the period of 1 month."
        },
        "analyst_revisions_percent_change_3m": {
          "type": "number",
          "description": "The analyst revisions percent change in estimate for the period of 3 months."
        },
        "analyst_revisions_up_3m": {
          "type": "number",
          "description": "The analyst revisions going up for the period of 3 months."
        },
        "analyst_revisions_down_3m": {
          "type": "number",
          "description": "The analyst revisions going down for the period of 3 months."
        }
      }
    },
    "ZacksSalesSurprise": {
      "type": "object",
      "description": "Zacks Sales Surprises are pre-earnings release consensus sales estimates from analysts for thousands of stocks. Zack’s storied research team aggregates and validates the estimates and compares these estimates to non-GAAP sales reported by the company, providing the amount and percent surprise on release. Each Sales Surprise includes metadata about the corresponding Security.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Intrinio ID for the record"
        },
        "fiscal_year": {
          "type": "number",
          "description": "The company’s fiscal year for the reported period"
        },
        "fiscal_quarter": {
          "type": "string",
          "description": "The company’s fiscal quarter for the reported period"
        },
        "calendar_year": {
          "type": "number",
          "description": "The closest calendar year for the company’s fiscal year"
        },
        "calendar_quarter": {
          "type": "string",
          "description": "The closest calendar quarter for the company’s fiscal year"
        },
        "actual_reported_date": {
          "type": "string",
          "format": "date",
          "description": "The actual report date for the earnings release"
        },
        "actual_reported_time": {
          "type": "string",
          "description": "The actual report time for the earnings release"
        },
        "actual_reported_code": {
          "type": "string",
          "description": "The code cooresponding to the earnings release  BTO = BEFORE THE OPEN | DTM = DURING THE MARKET | AMC = AFTER MARKET CLOSE"
        },
        "actual_reported_desc": {
          "type": "string",
          "description": "The description for the type of earnings release"
        },
        "last_rev_date": {
          "type": "string",
          "format": "date",
          "description": "The last revision date for the analyst estimates"
        },
        "sales_actual": {
          "type": "number",
          "description": "The actual Non-GAAP sales figure released by the company, interpreted by Zacks."
        },
        "sales_actual_zacks_adj": {
          "type": "number",
          "description": "The adjustments Zacks made to get to Non-GAAP sales to reconcile with GAAP sales."
        },
        "sales_actual_gaap": {
          "type": "number",
          "description": "The actual GAAP sales figured released by the company"
        },
        "sales_mean_estimate": {
          "type": "number",
          "description": "The pre-earnings release mean sales estimate for the company sales_count_estimate; the pre-earnings release number of estimates by analysts"
        },
        "sales_amount_diff": {
          "type": "number",
          "description": "The sales surprise amount difference"
        },
        "sales_percent_diff": {
          "type": "number",
          "description": "The sales surprise percent difference"
        },
        "sales_std_dev_estimate": {
          "type": "number",
          "description": "The pre-earnings release standard deviation of sales estimates"
        }
      }
    },
    "ZacksSalesSurpriseSummary": {
      "type": "object",
      "description": "Zacks Sales Surprises are pre-earnings release consensus sales estimates from analysts for thousands of stocks. Zack’s storied research team aggregates and validates the estimates and compares these estimates to non-GAAP sales reported by the company, providing the amount and percent surprise on release.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Intrinio ID for the record"
        },
        "fiscal_year": {
          "type": "number",
          "description": "The company’s fiscal year for the reported period"
        },
        "fiscal_quarter": {
          "type": "string",
          "description": "The company’s fiscal quarter for the reported period"
        },
        "calendar_year": {
          "type": "number",
          "description": "The closest calendar year for the company’s fiscal year"
        },
        "calendar_quarter": {
          "type": "string",
          "description": "The closest calendar quarter for the company’s fiscal year"
        },
        "actual_reported_date": {
          "type": "string",
          "format": "date",
          "description": "The actual report date for the earnings release"
        },
        "actual_reported_time": {
          "type": "string",
          "description": "The actual report time for the earnings release"
        },
        "actual_reported_code": {
          "type": "string",
          "description": "The code cooresponding to the earnings release  BTO = BEFORE THE OPEN | DTM = DURING THE MARKET | AMC = AFTER MARKET CLOSE"
        },
        "actual_reported_desc": {
          "type": "string",
          "description": "The description for the type of earnings release"
        },
        "last_rev_date": {
          "type": "string",
          "format": "date",
          "description": "The last revision date for the analyst estimates"
        },
        "sales_actual": {
          "type": "number",
          "description": "The actual Non-GAAP sales figure released by the company, interpreted by Zacks."
        },
        "sales_actual_zacks_adj": {
          "type": "number",
          "description": "The adjustments Zacks made to get to Non-GAAP sales to reconcile with GAAP sales."
        },
        "sales_actual_gaap": {
          "type": "number",
          "description": "The actual GAAP sales figured released by the company"
        },
        "sales_mean_estimate": {
          "type": "number",
          "description": "The pre-earnings release mean sales estimate for the company sales_count_estimate; the pre-earnings release number of estimates by analysts"
        },
        "sales_amount_diff": {
          "type": "number",
          "description": "The sales surprise amount difference"
        },
        "sales_percent_diff": {
          "type": "number",
          "description": "The sales surprise percent difference"
        },
        "sales_std_dev_estimate": {
          "type": "number",
          "description": "The pre-earnings release standard deviation of sales estimates"
        },
        "security": {
          "description": "The Security of the Zacks Sales Surprise",
          "$ref": "#/definitions/SecuritySummary"
        }
      }
    },
    "ZacksTargetPriceConsensus": {
      "type": "object",
      "description": "Zacks target price consensus estimates from analysts for thousands of stocks. Zacks storied research team aggregates and validates the estimates.  Each Growth Rate includes metadata about the corresponding Company.",
      "properties": {
        "ticker": {
          "type": "string",
          "description": "The Zacks common exchange ticker"
        },
        "company_name": {
          "type": "string",
          "description": "The company name"
        },
        "industry_group_number": {
          "type": "string",
          "description": "The Zacks industry group number"
        },
        "high": {
          "type": "number",
          "description": "The high target price estimate"
        },
        "low": {
          "type": "number",
          "description": "The low target price estimate"
        },
        "mean": {
          "type": "number",
          "description": "The mean target price estimate"
        },
        "standard_deviation": {
          "type": "number",
          "description": "The standard deviation of target price estimates"
        },
        "total": {
          "type": "integer",
          "description": "The number of target price estimates in consensus"
        },
        "most_recent_date": {
          "type": "string",
          "format": "date",
          "description": "The date of most recent estimate"
        },
        "median": {
          "type": "number",
          "description": "The median target price estimate"
        },
        "raised": {
          "type": "integer",
          "description": "The number of estimates raised"
        },
        "lowered": {
          "type": "integer",
          "description": "The number of estimates lowered"
        },
        "company": {
          "$ref": "#/definitions/CompanySummary",
          "description": null
        }
      }
    }
  }
}